%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 451.000000 273.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.6 (Build 18G1012) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 451 273
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 451 273
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /F put
dup 34 /O put
dup 35 /R put
dup 36 /T put
dup 37 /A put
dup 38 /N put
dup 39 /C put
dup 40 /plus put
dup 41 /D put
dup 42 /S put
dup 43 /m put
dup 44 /a put
dup 45 /l put
dup 46 /t put
dup 47 /k put
dup 48 /P put
dup 49 /L put
dup 50 /slash put
dup 51 /Q put
dup 52 /p put
dup 53 /e put
dup 54 /d put
dup 55 /c put
dup 56 /o put
dup 57 /i put
dup 58 /n put
dup 59 /g put
dup 60 /s put
dup 61 /b put
dup 62 /y put
dup 63 /space put
dup 64 /one put
dup 65 /two put
dup 66 /three put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<








2F3D201E3C301F142027131529221602550322394A2C22453723324B584B3218252C141A312718A3304329120F263E2F2532211407070D131D1614190F06091421192F3F250F1123382732381F11152221181F10060A1727000100090000011D02A00017005BBA0001000200032BB8000110B8000210B80006D0B8000310B80007D0B8000210B80017DCB8000DD0B8000110B80014D000B800012FBA000F000C00032BB8000F10BA0004000500032BB8000410B80000D0B8000510B80015D030311335231523153311141E023B013523222E0235113335B65558580E1D2F21412714190E056702059B9B4BFEB7242C18094B030A120F01414B00000000010008FF3101EC020500160086B800142B00B800014558B800112F1BB9001100083E59B800014558B800152F1BB9001500083E59B800014558B800052F1BB9000500063E59BA000900050011111239B9000C0002F441110007000C0017000C0027000C0037000C0047000C0057000C0067000C0077000C00085D41050086000C0096000C00025DBA0014000500111112393031050E0323222627351E013332363F01033313331333010B0F1D232B1C0F1E0E0B1D0A1A230923CD609702915A452634210F04054E05071917570202FE5901A70000020037FF5B04A802FA000B00110023B800142BBB00060003000300182B00B800042FB800112FBB00090002000000182B3031372226351133111416332115050901370901F75E62622E30034EFEA20136FECA42017FFE8276606101C3FE3D30345DD7010401004BFEB5FEB80001000000010000062A4FC55F0F3CF5011103E800000000B643600000000000D7C23C38FC49FE1F07C304350000000900020000000000000001000003B8FF2B001C08B1FC49FE8007C300010000000000000000000000000000002401F400330116000002580030014DFFEF022C0057022C0018022C001D0288FFFA02D2002B02C0004E023E004E022C004E02D2004D02F800260288004E02F8002602AD004E02880025023E00020219002402510043021900240251002402190024023E002400DE00450207004500DE004503550040022C0040023E00240251004301F4001F013B000901F4000804BE0037000000480048007C009200B801400226025602C4032C0358037803B8045804C005740604069806BE07C8086008D2097009D80A8A0AB40AE60B000B9A0BE20C820D1A0DBE0E100E7A0EB000000001000000240096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 36 dict dup begin
/.notdef 0 def
/space 1 def
/plus 2 def
/slash 3 def
/one 4 def
/two 5 def
/three 6 def
/A 7 def
/C 8 def
/D 9 def
/F 10 def
/L 11 def
/N 12 def
/O 13 def
/P 14 def
/Q 15 def
/R 16 def
/S 17 def
/T 18 def
/a 19 def
/b 20 def
/c 21 def
/d 22 def
/e 23 def
/g 24 def
/i 25 def
/k 26 def
/l 27 def
/m 28 def
/n 29 def
/o 30 def
/p 31 def
/s 32 def
/t 33 def
/y 34 def
/uni2B91 35 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4151493 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C93174D4E3C01712375EA6AD09BB8CBB6B1EDF2EE8AD6EA8A1100B27271714D8F5C5A6140DB449263BB3FF479C3F4E9569A8BA7FA399BAE409304B341CEFD74E12E05717591C67A325150BD836C34A7C2FEB6DDE67B61DABB4D3C87E33D4D63FD808BE3328D3DEC70B87DDCFE66C78B52DF7FFD61A0DDFADDF1CC0824F5FFCBAC3DA76A5D0A53FEACE69056E84521EF967BD5BFA4C40C24B84A2B291DD98A69A89AB6FA340652A79D44983D4060FB89D5C145642D72B550FB1360B58B58FDB50813591071E13221A0447F56684F186BD274E1F2E48059859F129A10457A46485F8CFB61F13857528D1C3E5C55FD951D44B8375DC74C812E6E7E316917A4D9ED841E98E1F15C7C3F5A3AB25031671E3CD4DE69FF2F99B5A08530E65DDB7649DBB633425B553A3C036B55F71D2BD1D4CB2F23E56E28139EAAA60729272554B4F4649692EDD1EDBCE625791095DC092E98D3503DFA2F897D8609FC986549A39204365017DC3C2FAF9E5794E78478B70EAEF3EAD9F9C7524C48EA23C21DC74AAB9A877C3AB0F4289AE664BC1C00EA35DEAA1AAB8FD3AE8988CCB88E1D537AE52324621E2B69E0D45043A58BBEE5DA9251CEEE2C9223AFA6B048B8C9A6CC76AFA391241D34EB869CEE5EDC30D6946D811E67FD4D1EDD35AB7A0FA2EEBF39AA59184F4DF936E719654E4ADF234BBC3D0479999E2CA62B0A5E2BC695C571272056CF1F039A018CF62C04931CE12FF46A92BB74326493C5599F974F2C6F5C182B626DA3C720


17C6AFBE0B4BC1367857C67569BBC20215CC63DF918663F68524173DED10A2842B3EE8091B40489C6F8AFDAB7249B43D9C168FF89A22AC93757ADFF324548E2F113F1C4D67BAA7258F704E74A9D292046B82B1369F1AEFA3E15FBE609C774DCB7C1E25B05B3B20CDE5FA99044CC3FD227BDC3558C4340C8424EEB9845F0BC940D1C5599DB6B4ED9FC3CF2147AB4191B13CE3CE5DD31C1021ABEA47840430B636C497C79E1B3FB2602FE2DC288D07CB4FF01A4A286D8754E30A1AD43ACC7CF0CFC9B9D78EFD61D8F6409001395A2A9654EED9B50AD0D3DE485B2901B3A0F3B0C760B9870D3117E39966B85041D7DD003D790B83DD6820AC4809043055B45CF8B2D86C729217BEBBD8F3AD74A7DB0BA68E64BC9366B1757512545F05D9DFFC56ECAD2C6ADA16F804EBAC509E358C737AF5114D93DFD138A405E52C6AE28A0836303E1D8F5A689382FA7B936FB8E96ED06F2E0E66E1BF730D94D33F557C12497A7561D7BB4AEC6D898A723CA3F23F543306A931144C3B5405BB74B389B1D7CA917E22B7558F2862AE28A380E55833CD852707B295E9501C6C9DB320DD6D375D2DB6CA61C651328D4CD095C4511765CFE87CA4FA567E5C8D160542476AEE0EE779FF441FBA98A793CBFE49657401686CC677FD4EF284CEF736664377823F8FA87EBD4F03BEDA393168CE28657A2BF2B9B09231A7E1CEF8A1AAC70DE0D6DF50DC6D4E6B5EB4695C3A08631B330974B78CD3294DA8CEACAAD28756C25A4FE686A82F75F23CDF152362D10A0FA6D9835105D0AB8B6DC28A9546A78721ED0BFB8464424ED3C6B2BB39D9DA06C7BC5391985EC71B9E37CF4E581E282DC020EC6D39A5E588D5529E877710FA19B16295B4DC6E81B2E667CE8EFD9CD3872E1CE02042C5C9914A1B9FF277C0F88A954F31AEF89098D09489555C1CF475E5D94A7291A90681B7245D19355797CB717473BE33CD5B4FAEBA40FF07655AA8304D2E306B5126189C6180B212D724E40A2F53A2A54AC439336FC21EB44DB09C0397244FADF959E98EF10457E30D6146AD347025E4A1BBCF540E00E13152C36C1AA9588CE136B2C5770F9FE4C02A7B6C4C91657E9B1CB68F2283FF6370CBB040B90222D3C9FEA2EB7A951FFE0128720D3B24DCAC5969D9155D95BDF0726DBA983EC7C8AC7F57F976410072C735967CAFE83E4DAB6554C0CDF091FA6264A59C5BDF87643D504890813527EB7B88B51B3950C4451738755E2A6DE519D58E98616821C5414FC8E7C339A57D06F60321B51ABB1DC1E24518DEBD152F482186784AFC5B94E655AA92071FC58E8FD6749C0B24A970FA18D82A2AD59E3DA4F1E00E3D8DC3939173F62CE4548C81BD5C0430A74793DDD11DA4FEFF68F3E877A2985676C6647D6537B7E6DBBC024E7DAE78A0FE50B47354BB75AE2C6D57A7340DC76E9BF4366120290B87FD1C72

DE83065BEE36C99DCF752C26189DBFECDC861BB165225AAD74B8DC5A9F1D5727272BC215E5D20D7A9044827C0985F0893384C82358F45FE310FF607F45983BE55B2EBB1A2DC33F3C9ECB0235E4021183358A2F8C862C74333F8E4EBD9FCDFF1609BFFDF75524E4545E31774B0D87A8468500C7D0F8E9E708A897A1F69F4208FB9C005D9123047412C97A9C17E37841D194D814FCA6F23D7B50482D304E87099D626B08D528CD018C587951087F6A6A00C6D19CCF80F6BE2530EC1E0460F4B83D5E935BBF49E31ED3C0B27019330E4A07610A98949767F870122DA2C80916F71DCDC6D9CA75C3EEFC9D01D68FC52FCA264C852E2CD83F8CFDF0588BEC20B587AECFFEAA7FAD48B11004AEA971AB0A428A1691AF939F4556227CD07422D611A289C18D2596D9FA0A5972561853E5E10EC58BC02C0D021A0C75B224FA258506E3B08A6803C745FF3822413E57D00BC8AFFA9546A2B72873326490B397717A581C8DE4EBC9D8E635760E5D77B8B6E05F665F016F71198AE320BC8FEFCA8B26B52EDB831C058D911FA8289AF9A8642D77D314F320E89ED5A220DEE46D7207A74506F1F62B96807ADFB6FE1F5C8CFCC9A3404C226EE9A5650AFA457137A3F6592A2DDA30EF5CC69E5C1CA0A7BDDD09D4BD74CEF6758E4E94EE96AE518C9D85687D41C959501C72382C491FEA469A775EBA06397AB192914EF62D5B6DD451CD11596D6B84991CDCD390BFEE6CCD8C149152537EAEF6F08FBEF99CE7489B3F30D270853469350AC265B56937B73D4814650BFC8BF0B0BE80B50D9D30376FD01E677865CDFB3B2A8E9F03E19C2E0510E96E2DEBBB20ECB2CE3681536F9662DAB430C4D72318AD149FE036008320CDF7685EA74533298A7E58832BEDC88177DEC759E8370578E8E2DEC17F723B67A04D877236DCABD0571EC1DC2DB51FD602EE99562E768B550C7B028636DF2B36A7C088D63D3DBFFE254F96D3E2249D68F88AFD2E7A43887BDC828A1BC6AD6D276C3768F1F4356003C6C942EE5C5CF56A378079C5BFF75BFD0C29A1A579111CD60203702F3E0EE98CA9265C8DDE6FDD6A3DB9B3B24F5C629E44F5776F3CE07B054EFB37EAE545D785E9A194C428DA4576D7656893C5F882F01C6559FF529FCCAAD26AACB8BB695894D7D7011E2C09077BE574E6116E4F05EAF9012138FCB02AE130C94927160643B11140A862C289D91239BA7A683E43D248F940AAB7261DC320B6B2D4B8C93F111D2A28D9D11D99C37E5B23E8CE2588A55A18826F003BCBA5AA68342B9DEEE05D3DAB43534F97DBDBF6565EE8C8958A4714B2551FECFBA23DABDC28971420F16E46D8DE6ED1DD9B80FF78266492DD593FE9DA05BD865082C4D31035815ADAF48278F509F608388474CDDF9F28D1B56813572AC956031A3F0B8C6EAF7617B0102DEEE26CE51ACC5DC12335BA84CB46B740
9562F8626E8B1121CD73E05EC68A5F659CF817622D93C8830C7DA1FA51F3B4317E91CFF96E82FEFEDB1ABE7B538D544FFF8BA93A59C79F99CC5B5E18C7517E49CA1C08FBCEBE5B435C779099040C05329172632B0049B78A456500D69E3438D47FB5B20D1D8BBE81ACC3BBD91F2C6FA83018A9663565274A9B902771E2A517BDAA6BB969F6A40C59EB926A15BDB921E3F9CB1AFFBF7CE86C662E0B9B975E5E59C08945894710973955EB6873596134F77B3B0F60BEFCD619B532B8C37364EF398F3683F693D16A0B2E54F9159905E25CF2D6F8518E65BD12628C014904A84274605F5AA99F1FFC4FA9063F38537E130E3519C6CD141AA4C607F2B5A0E78984C51374F5BDB4958787B1C0B4EEC09D712A836B70EEA932701D29686E4D7ECE998A0DAA2FBC1063051A0EB4DF36D8F6BEE4473D8DAEF53E88206F1E624C5472575DBB288FA084D41EE2C401D7E347CCCBD193F63B5A55E35A40BE7378A61AB045CCF04ECC0988FC21944B987B993C26EAEC70E245F8EC2BFDBF1A4E137751A002DED66B7A795F670F925162845844C63A33E36A0D150793E1E1CA1766F4C9404D0DF13410E19E6B07C3BAA0A9C4B0E0E14195405183224EE4A9237BD072B3DAF799D485166A1B9895A8AC5862ECAE0566BA563DDC7400AEEC063B4A4AA4DA1E8A858BF7A78365FA6010F22AC58AED20E6FF701DCFAE27C102504EE78107679010A4F03786AF3FA0963C2C0EB34137B69624C656CFE74C44FCF04E700775C0F55A49AC96337A3BEFD3B184FEDF8CCC63982A13D6F43695AE5C071B0CCB8E82E351D0896DEEA7D698BAC5655BE7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0 sc
q
0 0 451 273 rc
1 0 0 -1 -56 495 cm
/F1.1[ 16 0 0 -16 0 0]sf
147.19228 303.46457 m
(!"#$#%&)[ 9.184000 12.160000 10.672000 9.184000 10.960000 10.368000 0.000000 ] xS
288.68857 303.46457 m
(')s
373.62793 303.46457 m
('\(\()[ 11.552000 9.600000 0.000000 ] xS
448.38583 386.95193 m
(%\)%)[ 10.368000 11.264000 0.000000 ] xS
323.78583 386.95193 m
(*+,--.,-/)[ 10.368000 13.648000 8.592000 3.552000 3.552000 5.040000 8.592000 3.552000 0.000000 ] xS
430.68884 303.46457 m
(012*31)[ 10.368000 8.896000 5.328000 10.368000 12.160000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0.70612973 0.70614654 0.70613748 sc
226.73228 298.46457 m
273.56458 298.46457 l
S
0 i
CM
225.56456 196.53543 m
217.56456 199.53543 l
217.56456 193.53543 l
h
225.56456 196.53543 m
f
0 J
0 j
1 0 0 -1 -56 495 cm
281.56458 298.46457 m
273.56458 295.46457 l
273.56458 301.46457 l
h
281.56458 298.46457 m
S
1 J
1 j
0.60000002 i
0.58188301 0.21569154 1 sc
305.46457 298.46457 m
358.60394 298.46457 l
S
0 i
CM
310.60394 196.53543 m
302.60394 199.53543 l
302.60394 193.53543 l
h
310.60394 196.53543 m
f
0 J
0 j
1 0 0 -1 -56 495 cm
366.60394 298.46457 m
358.60394 295.46457 l
358.60394 301.46457 l
h
366.60394 298.46457 m
S
1 J
1 j
0.60000002 i
450.84213 366.95193 m
409.18222 320.81253 l
S
0 i
CM
347.82095 180.12521 m
350.95557 172.177 l
355.40887 176.19795 l
h
347.82095 180.12521 m
f
0 J
0 j
1 0 0 -1 -56 495 cm
403.82095 314.87479 m
406.95557 322.823 l
411.40887 318.80203 l
h
403.82095 314.87479 m
S
1 J
1 j
0.60000002 i
0.70612973 0.70614654 0.70613748 sc
463.36371 366.95193 m
460.39203 323.34167 l
S
0 i
CM
403.84814 179.63983 m
401.39896 171.45439 l
407.38507 171.86229 l
h
403.84814 179.63983 m
f
0 J
0 j
1 0 0 -1 -56 495 cm
459.84814 315.36017 m
457.39896 323.54562 l
463.38507 323.1377 l
h
459.84814 315.36017 m
S
1 J
1 j
0.60000002 i
394.38583 381.95193 m
433.48584 381.95193 l
S
0 i
CM
385.48584 113.04807 m
377.48584 116.04807 l
377.48584 110.04807 l
h
385.48584 113.04807 m
f
0 J
0 j
1 0 0 -1 -56 495 cm
441.48584 381.95193 m
433.48584 378.95193 l
433.48584 384.95193 l
h
441.48584 381.95193 m
S
1 J
1 j
0.60000002 i
305.46457 303.8692 m
434.5004 367.26834 l
S
0 i
CM
385.68054 124.20385 m
379.82333 130.42422 l
377.17746 125.03912 l
h
385.68054 124.20385 m
f
0 J
0 j
1 0 0 -1 -56 495 cm
441.68054 370.79614 m
435.82333 364.57578 l
433.17746 369.96088 l
h
441.68054 370.79614 m
S
/Cs1 SC
0 sc
195.28799 386.95193 m
(*45567869:;)[ 10.368000 9.488000 8.592000 8.592000 9.488000 8.592000 9.184000 9.488000 3.552000 8.896000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0.70612973 0.70614654 0.70613748 sc
232.44133 366.95193 m
200.48947 321.56006 l
S
0 i
CM
139.88461 179.98175 m
142.03629 171.71312 l
146.94264 175.16676 l
h
139.88461 179.98175 m
f
0 J
0 j
1 0 0 -1 -56 495 cm
195.88461 315.01825 m
198.03629 323.28687 l
202.94264 319.83322 l
h
195.88461 315.01825 m
S
1 J
1 j
0.60000002 i
252.24654 366.95193 m
280.02304 321.89203 l
S
0 i
CM
228.22102 179.91805 m
221.46927 174.68221 l
226.57683 171.53374 l
h
228.22102 179.91805 m
f
0 J
0 j
1 0 0 -1 -56 495 cm
284.22101 315.08197 m
277.46927 320.31778 l
282.57681 323.46628 l
h
284.22101 315.08197 m
S
1 J
1 j
0.60000002 i
1 0.14913142 0 sc
192.28571 283.46457 m
201.49774 270.9389 220.07025 255.1181 255.1181 255.1181 c
290.33572 255.1181 332.13531 271.09253 359.54681 283.64633 c
S
0 i
CM
310.78482 207.94717 m
304.82391 214.06825 l
302.26889 208.63945 l
h
310.78482 207.94717 m
f
0 J
0 j
1 0 0 -1 -56 495 cm
366.78482 287.05283 m
360.82391 280.93173 l
358.26889 286.36053 l
h
366.78482 287.05283 m
S
1 J
1 j
0.60000002 i
285.21924 366.95193 m
308.57401 353.45651 338.60922 333.39041 360.354 318.46268 c
S
0 i
CM
310.93982 181.07919 m
302.65091 179.00702 l
306.05728 174.06772 l
h
310.93982 181.07919 m
f
0 J
0 j
1 0 0 -1 -56 495 cm
366.93982 313.92081 m
358.65091 315.99298 l
362.05728 320.93228 l
h
366.93982 313.92081 m
S
1 J
1 j
0.60000002 i
394.38583 373.32947 m
395.31876 371.90363 396.14807 370.30157 396.8504 368.50394 c
401.6351 356.25723 399.36139 337.91553 396.05588 323.07379 c
S
0 i
CM
338.13083 179.69127 m
337.14401 171.20444 l
342.96771 172.64822 l
h
338.13083 179.69127 m
f
0 J
0 j
1 0 0 -1 -56 495 cm
394.13083 315.30875 m
393.14401 323.79556 l
398.96771 322.35178 l
h
394.13083 315.30875 m
S
/Cs1 SC
0 sc
61.692913 388.50394 m
(%<<5+=->)[ 10.368000 8.000000 8.000000 8.592000 13.648000 9.488000 3.552000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0.70613003 0.70614702 0.706137 sc
136.34091 382.51697 m
180.10014 382.28516 l
S
0 i
CM
132.10002 112.75723 m
124.08424 115.71481 l
124.11603 109.7149 l
h
132.10002 112.75723 m
f
0 J
0 j
1 0 0 -1 -56 495 cm
188.10002 382.24277 m
180.08424 379.28519 l
180.11603 385.2851 l
h
188.10002 382.24277 m
S
1 J
1 j
0.60000002 i
0.016804177 0.198351 1 sc
96.214973 368.50394 m
96.525024 333.72086 103.97681 245.81512 170.07874 226.77165 c
229.23964 209.72783 315.51819 253.5659 360.03595 280.03928 c
S
0 i
CM
310.87866 210.81755 m
305.58917 217.52734 l
302.48151 212.39485 l
h
310.87866 210.81755 m
f
0 J
0 j
1 0 0 -1 -56 495 cm
366.87866 284.18246 m
361.58917 277.47266 l
358.48151 282.60513 l
h
366.87866 284.18246 m
S
3 w
1 J
1 j
0.60000002 i
0.58188301 0.21569154 1 sc
368.50394 425.19684 m
409.29684 425.19684 l
S
0 i
CM
364.49686 69.803154 m
353.29684 74.003151 l
353.29684 65.603149 l
h
364.49686 69.803154 m
f
0 J
0 j
1 0 0 -1 -56 495 cm
420.49686 425.19684 m
409.29684 420.99686 l
409.29684 429.39685 l
h
420.49686 425.19684 m
S
1 J
1 j
0.60000002 i
1 0.14913142 0 sc
368.50394 453.5433 m
409.29684 453.5433 l
S
0 i
CM
364.49686 41.456696 m
353.29684 45.656696 l
353.29684 37.256695 l
h
364.49686 41.456696 m
f
0 J
0 j
1 0 0 -1 -56 495 cm
420.49686 453.5433 m
409.29684 449.34329 l
409.29684 457.74332 l
h
420.49686 453.5433 m
S
1 J
1 j
0.60000002 i
0.0168042 0.198351 1 sc
368.50394 481.88977 m
409.29684 481.88977 l
S
0 i
CM
364.49686 13.110239 m
353.29684 17.31024 l
353.29684 8.9102392 l
h
364.49686 13.110239 m
f
0 J
0 j
1 0 0 -1 -56 495 cm
420.49686 481.88977 m
409.29684 477.68976 l
409.29684 486.08975 l
h
420.49686 481.88977 m
S
0 0 0 sc
427.5578 429.8504 m
(69<.,:75?@)[ 9.488000 3.552000 8.000000 5.040000 8.592000 8.896000 8.592000 8.592000 4.448000 0.000000 ] xS
427.5578 458.19684 m
(69<.,:75?A)[ 9.488000 3.552000 8.000000 5.040000 8.592000 8.896000 8.592000 8.592000 4.448000 0.000000 ] xS
427.5578 486.5433 m
(69<.,:75?B)[ 9.488000 3.552000 8.000000 5.040000 8.592000 8.896000 8.592000 8.592000 4.448000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
