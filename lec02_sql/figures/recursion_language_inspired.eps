%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 455.000000 116.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.6 (Build 18G1012) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 455 116
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 455 116
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /F put
dup 34 /O put
dup 35 /R put
dup 36 /T put
dup 37 /A put
dup 38 /N put
dup 39 /C put
dup 40 /plus put
dup 41 /D put
dup 42 /S put
dup 43 /m put
dup 44 /a put
dup 45 /l put
dup 46 /t put
dup 47 /k put
dup 48 /P put
dup 49 /L put
dup 50 /slash put
dup 51 /Q put
dup 52 /p put
dup 53 /e put
dup 54 /d put
dup 55 /c put
dup 56 /o put
dup 57 /i put
dup 58 /n put
dup 59 /g put
dup 60 /s put
dup 61 /b put
dup 62 /y put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<






008F001800015D4103005F001800015D41030020001800015D410300B0001800015DB8001BDCBA0023000D0010111239B8000310B80028D0B800282FBA002900000003111239B8001B10B8002CDC00B800012FB8000E2FB800192FBA0026000800032BB8002610B8000810B80013D0B8002610B80020D0303113113311343E0233321E0215113311343633321E0215113311342E02232206072E01232207233540550F2135251D25160955483F1F27160855192D3F2733551A104E306D3A020205FDFB01420F2D2A1E111F2A19FEAD01423C48121F2A18FEAD017B283924112E2A3028584C00000000010040000001EC021100170045BA0003000000032BB8000310BA000E000B00032BB8000E10B8000310B80015D0B800152FBA00160000000311123900B800012FB8000C2FBA0013000800032BB8001310303113113311343E0233321615113311342E022322072335405513263927313855112A44337335020205FDFB0124233B2C183830FEA201542A45321C5E520000020024FFF5021A02110013002700CBB800282FB800292FB8002810B80014D0B800142FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8002910B8001EDCB8000ADC410500DA000A00EA000A00025D411B0009000A0019000A0029000A0039000A0049000A0059000A0069000A0079000A0089000A0099000A00A9000A00B9000A00C9000A000D5D00BA000F001900032BB8000F10BA0023000500032BB8002310303113343E0233321E0215140E0223222E0227141E0233323E0235342E0223220E027E192C3B21213B2C19192C3B21213B2C195A20405E3D3E5D402020405D3E3D5E402001022F49321A1A32492F2F49311A1A31492F39624929294962393963492A2A4963000000020043FF3B022D02110018002C00ADB8002E2FBA0018000000032BB8001810B80002D0B8001810B80004D0B800042FB8002E10B8000EDCB8001810B80016D0B800162FB8000E10B80019DC410500DA001900EA001900025D411B0009001900190019002900190039001900490019005900190069001900790019008900190099001900A9001900B9001900C90019000D5DB8001810B80023D0B800232F00B800012FBA0013002800032BB8001310BA001E000900032BB8001E10303113113311331E0333323E0235342E0223220607233505140E0223222E0235343E0233321E024355020E292E2F133B593B1D1E3B593C365A1502013B10243B2C2C3E271211263C2B293D27130205FD36010A171F12082A49623737624B2C272B46FE2648382221364726244637222036450000000001001FFFF501D60211003A00ABBA0000000100032BBA00

01E4022402C4032C03E004700504052A063406CC073E07DC084408F609200952096C0A060A4E0AEE0B860C2A0C7C0CE60D1C00000001000000200096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 32 dict dup begin
/.notdef 0 def
/plus 1 def
/slash 2 def
/A 3 def
/C 4 def
/D 5 def
/F 6 def
/L 7 def
/N 8 def
/O 9 def
/P 10 def
/Q 11 def
/R 12 def
/S 13 def
/T 14 def
/a 15 def
/b 16 def
/c 17 def
/d 18 def
/e 19 def
/g 20 def
/i 21 def
/k 22 def
/l 23 def
/m 24 def
/n 25 def
/o 26 def
/p 27 def
/s 28 def
/t 29 def
/y 30 def
/uni2B91 31 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4151493 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C931313987B77B87D3A530FEA8139219B56B58888BA339BA81F732C1729802DA479E44F824526137EEB725F9A8277E11FB440D7432A2FB2F8DA2BCCD532B90735191BAC4AF35F550E035C4C8C1BAFAED5C312214CC95D118F54DF8BDE75E8FF28D492C9BEDB679E0934A617E4070AE67189E39CB2F98CAA806755ABAF8397B08C091F65DB13181112F6A5E6013D209FBE7915866EC07D3CF2BAEE240ADB854A6CFA1351D05164C1A9DA958202A5244F1201ACA09D0C552334DA2E684540154569FD382D142DC1826BD696F902E238A0602238F9172552CCFAA0F533509A6D8BC8FEEA916F9CB10551405790AEDFC43B610F0C7B7B99B3EFDD3788D16595E64096974ED2D045119526DA5301C700BBAF9CB39D95C19FBF1B3169A88A924F54BBD07810BFDE1D7141A7FEEBC56108A1DD8C5EB3AE8AB3C8F91940A10D9E0158372F8569EEDDECF0FD71EE6A5A4D356735B6AC30B1CA90C67C9772C06023D76A20E3C28ABA837D891354A22CD2047F46B8F097F190D207F262565E722CB6D02A3C26D5C7484C8B9E87A431257F32474DEFA261E6F8CDC729FF45040D5161CDA8EF7D1A91EFB164ED76F46E9798259AAE983830394759E9F77F67501E46A674B03B8861F1922C658966D1AA15BB10A3E28C940233345B611B52EA19C487BA95A7B111374EA6A18D87D2CDE4CD6CAD4F97C22B0F4950483F7BF55B77EA4834A5C18E10791C943B79383435E3297AF3731F428FA5EAF50FEC1AEA0B417E6E9402B18E47CF

34BD87600296EA32A7B67335515425DE7C8F9E79F212F98595F9716EB32CF6A242828BC4CD0F87F95D167D7072375F4F3BD84E446F1184BC21BC9231815874AEECB9627F9D63A9602993BEAEE8AC36E415C5EEC29CD65E5F207BA2687835BBFEB3826AAC9CEF8A33F43D70357E8C184C9F0F29D3690D64FFB03A786595FF6BD8147395733472B6DAB29FB7CEFBC1B13B1D8F1C43A764CE4FCDF5F55A482AD8151159E0337C0332B775B52CFF69D2255FD740387B65C67CC8574B68F3E731CBFD0B50140F3303443586A52208E1DE3C1F7638941D4E50133EEDB06D89BC9D545433874B38C224F2E8A7C9CAA77BB06CDB22C02E25C1EAFB148F24B461C15BD391BE60F2123858D13C45FC0F8A88CDC5BF76DACD4A197E12FFF24742810341239C6D7989ACEAF230EE53900BBBD807AD63DF407C9E156EE50198DE2C80628F7D071318B0EFA4F71801F7259321C4E2FD8DFAF1502861D831F0F5C9847A3B6EE50F3057C47F23FE3B713F1C9C2E8AE0D2C3CDDC2874F7CB9771B3848326F18499A44355670E126A6EA1084A63DA166A08968D95CE37CF99ADB4CBE6592D6BC2428DBD5F82B994DC1538D5C4221108C283B5B780B9A9A820C944ABA80EA2115B2F0C5266C8A2C7CBDBF1FE0B9EF304D972B0371EF8DC565320CCAE39BA4F9380C468F8C99D8E2666A86970ECDAADE76AECE44B88C9EE835B53AEA33278BC624292D604772BE6593D20128E666C5FB77BD70F1BE478D6A6E76A3C7C333815CAAD3FE08A340964D452480BEFF5E11C086BC2BBF9F8A09786CFF766030750F094D907892C7FADA747410AF52B38B576D0EA4948A92DDAF5D344283C2C317DC63B845475CF83B17B9A13F50D57284212ACF7B8164C79F24BE16E13BC0A2D85FFD73FF51D66E6D20DBF8175F07316A2D40CADE2326347D2701628E8F5CBC1136FD7A2AC0926C77F39A9AF49DCA319E47930E91D0438D93E71C59872D2C778516BB175A654AAADCA05724855E0FA7401786AC1084C8B3059F15FEF4890A1B5D8020738B67E939BF394E73164A6A597CFD71E3B30664DC81CFE8D356FE4D5ACA673D5AE893BB307083241C37FB830AB12028ED85CC847DAA44FA4DE6C6FFD878ABDB0CA135627233A85F1C58D85450AEE6489A94DC03EA4CFCABE09E152966680AA91BE5DDBDC81374A47DA2B349481CC42ECDC90379B2844D3685EF96ADCB95F903D329839F35A32F4A4B859C79112C66990854DAE191D6B035445A408403038F88A0A61B9BB86F4D288D4A44067AD2B19F43ADB7C7A9CABAE71F0D25AADEFCB84C172051AFAA983177EF2E49DDCC17C09E93990D056BCAFDE385960F0D0EA4D34A4A7A72D7D14100C8E1CAF9B78194324E913C8D8F6EB6CA16AE27DB59B97F1D30143DDDBD781C081C0573FB879528C4E6678BE83767357474E3543F691B43EEFF3882759
452BECDD2E134B52D13C553725C38B120F92DE2D0D13ED61B350131B7DD86759A59CD69465CCFBBC3E2E6EF17A61A0CA8A36A7A7A493C20F2CE7A7A52988049BD12B8109FAE8DAF69F41947BA56BEFB94DB3BACD669E73966903D16CD6E4D9C5DAA215932D6131F8507B710108A7BDC5B984545A9130578778E802B14D1440E35540D5C97FF5AA0A5381DC5A2460A1E5F206EF4933AF082450CAC9EEB8CAD45674C59E8D4681B055DB6A3F66C85E6C6337789BFFD4FBA677062F1B7AB5E504B114E8BECB039F271C234FB4112D64DEEF43031166F70FE20582C7DCBF62115A78951A0E9FF2446B91CC1490625680E6D30A619DB83B1B73958619C64D1111656B6DDA86DAF901AF6E4974BD74237C49FA0567155C669204D435B5A5F531D30B92CB47AF078827E44A980A0DDA8B22E5B17C0E6F1B6B607EBA9EDA81E994A4CDFEEF85561EBC9F13BD22D3D9E6990BD2B03B25E0F0D330CBDE1A798258D08545660D66D0EEC82F9F8D50A6C4E55D411B430B418B70BD3BF18D7F96F0B815148744251D0360291AF432E7DA409FCE023EB73C7124A97D23D1A422AB677088B0016C665F1FD3ECA4C98F98703D0752BD4C408DD47BCBC6DBDA2747A04C3FFD52CA3DC0A866BC4ED421154A12953308413CB5C043CC52B6CC84C5CFFE67D797A289B6B987ED9DD390E9AA1F7B77EFB3D9C11E29DFA30493377E75F019D861AD9304237F7410679DBD4BDD14D6947B808406F19002622F506373B5408C6919D4F8F6FDC62781D1CE1E30462801F246DA3578D097815C4C0FF36A545570B3B9172160F5B1EBFD5828AEB575BED45291001D8247E44D93989A5EB50384802573DBA72F40ED6662D53163E8C51C3CC3745105235CDC667186576778F83EA15E4701F769D479BD478FD5D28490F87A77F8C1696F3B2939F1EBB6285F453D62B4FBEBFE30331501C240EC036E273580A10F789929CC2C5DA4938E7F604E3C7CA2EFBDA7A5182383ED7ABDA5E13C34CD7069578174286FBCD8937D88571BFDE7D8848958A21D51202121C3D2443CDD43DA794D7DCA6E033212A8E606D444846FFA6ED2BCF06EED0D1E1BA2E361D21203DA1D7D9F7C2236B9AABA66277CACCFE514E791855D96EDD0BF5C5BD9C3B859C7662DE8AD0768FA9D85C9A3949707A6871026F2032999A31987209879B61B87D60AFE3646BBAEC51EDB3779EE9E2233FEE29217FEABFBD07E093A786A603E75CC35CF87A8FD70E8D341CE15EB8051D2A141402DEBF612450A0715C2A1EAEE347A043B48E41F88A5E2D13F14D87DB36DA36B427896268AF179FFA273D0AF72B50F6DBB830264753461C37F6CFA38CA4D8CC65ADEEB19CF3CC04D39AA4C940F535DB38DB285F894FDD2E9E55651977D0F20A56B6CF50A706C2F2D62C7CC4C04BDA9C16F42E8C2B2EEBD1820C9E3B29B5BB90368CAB9D3B1
81E1AEE577B410C8ADC180059C886379F276F801F19160DC2E4A115A38D34BD0A244D6D4EB69B5A656DA71C96D29F2572901BA61315B6D73D347E641EE5AE605EF9ADD5C34F74091D7F3D8A6BB88639433A2662268D1CDA9081C1DFB67D0DE07E9C1428216FA3E6FDC6AF5713ACFC6A5F0E64994FAE7E013FB422315EC2B8A621DAD5AC1D6DAFE88DAA52FB3884F77F445D19A948395C21DDDFCD1190A1CBFDCF8437A7F3B70C2243CCD9310548394E8BD7ABD74545332BB2D0C90C05556599EA75D2E7549B8AA8D124CD154BF8859D55E0A84E8D3C75F1F5D2236D298D338BA09BFE119E6DACB89E35C58C831B3855B25492DE23CD6F6135747B47CDE0AD243339D7C07B3F31573619F9FDA2CDD7CEA45B4A7163A9C1E60AAEF937632806E2A98CEC3065800AA9440CCB51A0182CB92DDCA37E9D93C253B6DA08D2CD45EE88434F972285901FE618A374CDE7FEC1B98B847E151F9475A14B5182DBE25D3170CBF2ACAD4DEBCC485FC0D6C15566C74644B41D3030299897E1536E34B9574E2AA500E425939E587942D89FD7DC78C838790592F22D36A7C6D2A15CC13EFB405D2FA42A97B1AE49781729629800032A87EA6ADB0422DE47B1B8D03D63533A062ADD3095145D8D5B5E963021D0093CBDD6D7DED5B354750E7F1F5CAFA67DC878FF6971AB77FFBDBD05CFE708212C8A4689F891879E0751CEBE280BAA59FCE23FDB39104344B52B70566DD8D82F1CCC19B93C25870BC2C9C60A9B38232D043EE22D57C3C419979885A88294BA8D82EFE714E1A3C573B2671CFF84489EC88D89371EBEB3DEA131218CC336F45649072E278201AC9D33A0C929AAEE3C9FFEA03964A7306D26F5015127A085C405ACBB6A2438D8F456344FA260FBD2B2861D7D21EF8DFF6AAE21CFCF5EE03485230EF1BCE1C4D6C7A5792624562B05094014332542EC2EBD9EC844FA93479943E646BDA3EB1D9ACF80DD910CCE683CEB2F49A491BA6EEADE2A9E02797BCCBC626BF9291ADE31B10331D185D9B1895FD1FC66B619520546BEA501478CA4276285ABE31B28FA7490BD53C59010B62CC6E06FD852C9B2D545C05AB04050C1FAD9C020E4AF645EF54E1B2E813298A63202453813A19A33BA23FD2F5CAC046228B97CE5668309D41CB34CF685001058F065CFD28F50184F169EC24CB8F79D774A2852C6BC2358842F7D1500DFF9EBF6D021F499BAFC519938E5D1083AF826DEF088475E9DBD87F236D88CC4BBCE7AFEF5980AEFBE82D546DC4543A2FE8A3CE4737CEA0C249F4EE764C4EF30821F7700C13B4CD64657F683401087ABB467CA1897EEE5DDEC304A5BBDC7F4307CAA9C4CCF92E11CE15CBE177832F1DC885DDFD112438D6E33E5A520AF64519B16779D9F08437AA7BBA612A7843592C3F588C88B072006420817D4AD7B1F7BAFF013B26B04F1A8B00255640B099

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0 sc
q
0 0 455 116 rc
1 0 0 -1 -41 172 cm
/F1.1[ 16 0 0 -16 0 0]sf
118.84583 76.692917 m
(!"#$#%&)[ 9.184000 12.160000 10.672000 9.184000 10.960000 10.368000 0.000000 ] xS
260.3421 76.692917 m
(')s
373.62793 76.692917 m
('\(\()[ 11.552000 9.600000 0.000000 ] xS
458.5433 161.73228 m
(%\)%)[ 10.368000 11.264000 0.000000 ] xS
317.21103 161.73228 m
(*+,--.,-/)[ 10.368000 13.648000 8.592000 3.552000 3.552000 5.040000 8.592000 3.552000 0.000000 ] xS
430.68884 76.692917 m
(012*31)[ 10.368000 8.896000 5.328000 10.368000 12.160000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
198.38583 71.692917 m
245.21811 71.692917 l
S
0 i
CM
212.21811 100.30708 m
204.21811 103.30708 l
204.21811 97.307083 l
h
212.21811 100.30708 m
f
0 J
0 j
1 0 0 -1 -41 172 cm
253.21811 71.692917 m
245.21811 68.692917 l
245.21811 74.692917 l
h
253.21811 71.692917 m
S
1 J
1 j
0.60000002 i
277.1181 71.692917 m
358.60394 71.692917 l
S
0 i
CM
325.60394 100.30708 m
317.60394 103.30708 l
317.60394 97.307083 l
h
325.60394 100.30708 m
f
0 J
0 j
1 0 0 -1 -41 172 cm
366.60394 71.692917 m
358.60394 68.692917 l
358.60394 74.692917 l
h
366.60394 71.692917 m
S
1 J
1 j
0.60000002 i
459.45511 141.73228 m
411.11298 93.672722 l
S
0 i
CM
364.43958 83.967529 m
367.99789 76.199753 l
372.22806 80.454811 l
h
364.43958 83.967529 m
f
0 J
0 j
1 0 0 -1 -41 172 cm
405.43958 88.032471 m
408.99789 95.800247 l
413.22806 91.545189 l
h
405.43958 88.032471 m
S
1 J
1 j
0.60000002 i
471.74817 141.73228 m
463.30557 96.425385 l
S
0 i
CM
420.84006 83.43924 m
419.35632 75.025047 l
425.25479 76.124184 l
h
420.84006 83.43924 m
f
0 J
0 j
1 0 0 -1 -41 172 cm
461.84006 88.56076 m
460.35632 96.974953 l
466.25479 95.875816 l
h
461.84006 88.56076 m
S
1 J
1 j
0.60000002 i
387.81104 156.73228 m
443.64331 156.73228 l
S
0 i
CM
410.64331 15.267717 m
402.64331 18.267717 l
402.64331 12.267717 l
h
410.64331 15.267717 m
f
0 J
0 j
1 0 0 -1 -41 172 cm
451.64331 156.73228 m
443.64331 153.73228 l
443.64331 159.73228 l
h
451.64331 156.73228 m
S
1 J
1 j
0.60000002 i
277.1181 76.181015 m
444.37692 144.42412 l
S
0 i
CM
410.78409 24.55368 m
404.51025 30.353569 l
402.24359 24.798183 l
h
410.78409 24.55368 m
f
0 J
0 j
1 0 0 -1 -41 172 cm
451.78409 147.44632 m
445.51025 141.64642 l
443.24359 147.20181 l
h
451.78409 147.44632 m
S
/Cs1 SC
0 sc
175.36674 161.73228 m
(*45567869:;)[ 10.368000 9.488000 8.592000 8.592000 9.488000 8.592000 9.184000 9.488000 3.552000 8.896000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
211.22665 141.73228 m
173.87556 94.460739 l
S
0 i
CM
127.91585 83.816292 m
130.52168 75.679367 l
135.22946 79.399162 l
h
127.91585 83.816292 m
f
0 J
0 j
1 0 0 -1 -41 172 cm
168.91585 88.183708 m
171.52168 96.320633 l
176.22946 92.600838 l
h
168.91585 88.183708 m
S
1 J
1 j
0.60000002 i
230.67041 141.73228 m
254.05589 95.526047 l
S
0 i
CM
216.66846 83.611839 m
210.3792 77.828667 l
215.7326 75.119247 l
h
216.66846 83.611839 m
f
0 J
0 j
1 0 0 -1 -41 172 cm
257.66846 88.388161 m
251.3792 94.171333 l
256.7326 96.880753 l
h
257.66846 88.388161 m
S
/Cs1 SC
0 sc
46.522457 161.73228 m
(%<<5+=->)[ 10.368000 8.000000 8.000000 8.592000 13.648000 9.488000 3.552000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
121.17046 156.17432 m
160.17889 156.38789 l
S
0 i
CM
127.17876 15.568301 m
119.19531 18.612057 l
119.16246 12.612146 l
h
127.17876 15.568301 m
f
0 J
0 j
1 0 0 -1 -41 172 cm
168.17877 156.4317 m
160.19531 153.38794 l
160.16246 159.38785 l
h
168.17877 156.4317 m
S
ep
end
%%Trailer
%%EOF
