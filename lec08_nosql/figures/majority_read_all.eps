%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 321.000000 297.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.7 (Build 19H2) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 321 297
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 321 297
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue-Italic
%!FontType1-1.0: HelveticaNeue-Italic 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Italic def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /N put
dup 34 /two put
dup 35 /one put
dup 36 /three put
dup 37 /Q put
dup 38 /y put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -993 1 index div -481 2 index div 1511 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<


4F341A254A6F4B324B341A0F1D2D1E5F3657494F294D6F455B9265369F935D49CB393E15223D5634417F643F253F563228524C4219C738533DB9674274553147789D5795A32600000001FFC2FF2F01F902050016002300B800122FB800012FB800052FBA000400120001111239BA000E0012000111123930311701230323032313070E0123222627071E0133323E02A301565DD9023C5B5B340F241D0A1C0A0F0C200F2030262057025CFE65019BFDFB55191F080645060713212D000001FFDA0000020E02CF001F0000011E02060F0123373E012E01270323130E030F0123373E033F0133017C3A4315151F1554121C1C042624684F68273A31301C1254151F3E4A5B3C134F0278063B7BC691655986B06B3006FE1601EA06316BB085596591C57C3B0657000000000100000001000096A062A85F0F3CF5011903E800000000B643F86800000000D8B9A5E6FC1FFE1F05E704350002000900020000000000000001000003BDFF2B001C05DCFC1FFE6205E703E800D5000000000000000000000000000801F40032022C007C022CFFFB022C000002D2000702F7002601E1FFC2022CFFDA00000016004000BA018201B00264029E02D40000000100000008009600090034000200020000000000140000020002C600020001B8000A2B00BA00020001000C2B01BA00030003000C2B01BF000400410035002A001E0012000000122BBF0005003A00300025001B0010000000122B00BF000200450039002C00200013000000122BBF0003004E0040003200240016000000122B00BA0006000400112BB8000120457D691844B800002B0000
00>] def
/CharStrings 8 dict dup begin
/.notdef 0 def
/one 1 def
/two 2 def
/three 3 def
/N 4 def
/Q 5 def
/y 6 def
/u20BC 7 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-993 -481 1511 1077} readonly def
/UniqueID 4025256 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28BC20B024FCBC509909A631A9D6649FD48DF0658ED29ED1C9B13A639A9DCE3741E72526AEAEEA1DA16D7FF58708826A726B7EB8F1846FDCC872A205E27AC31BD4F2EEA9240A788FF75149D475C82E03DB3D9F60F0B568AD550968FE16535E69090C7E613E09B722BBD1C13530147C500F21817A68ED10E8A89D3C87C56E8990F31C2BF0656B6D7D08D3DE6180316829C103E107B04F121C44B6226D6A1BE3982F7766C59A83B9671B432F403460A050353918AD56ABE6221D131119396BE048D14F1145E6DEB4C58EC47CA1DD6E3801E8B221DD200BA35577F0965B5AB76D4CC3FD80A71D3FEF3C3CCB4DD306DA43320C04D3BB0C9B0BBA604733047256C3B40E3BC4257A78A273D0CDAC78903B56C7A3C486026D9F9F826A34EDF32923AE22C60239E1D92F89DC72DF23EA0B4A94B273F6205DADD7AA2DDC08470797F78DC288CB3D69F26B93A2196C77BC9B12A849E44A37111E96F944D6D106C5487FB0ADBA4380D2264DB740C193E01A2935AFC20AACCC4681C2A8EFA8F3165F7635B34A47B19E37B8BF280BB418A844B071B90D53B573465098FB7F564C96123861DF7D65DB0A9BC59F2FBC7AE5B89AB5CF9D049E41373A9B703FE7BC68268ACEB8C482D22A5EDFBD4AD91B8F77336A48EACFCB0F7D7BD86A7BCEFD1E7036CABCDDC7150B4686A622F20D07328C349232D691B61FF7553EC6DD2173E8011DF420CAC019A24EA47C8CAEBE21DF68B43A0C6F443206ECA1AA3DC552AD903749DCC78761E94857028BC
16FC6AE2B7D471AEAA8E4BF8E437B8D51F54EB643C923FFB6D473ADA53154366C31791CB4438AA0A63896C9D4B349E5A38A8DE00C814669205D970BB7B0959B8A99C7348EFBB57F60519B1D48A915E8D03BB50C01E3D5EDCCD3519DCA59DAD777FFEA37CAD8A325B7F2C152FCAFE35E11D01BBAF67DE4354687F16BED7D73C53C7D958F867BDBC93DA037DE898B8BD0389AC35CCB4DA0D0D21AFD093E4241E544CA924995D55C4EBAC49B5748C863E640278AFCB6292EA2489E6263D1B4DCFD6B25499ABF380924AB5512FAD7FBC93AE2A2F80F2C229917BFFF8531D313BED8075924AB88F3E129DCAAA22747A3F3B5127B19E616B5FF9BE9EA20EBC3923C86947BB81EC2B9AE98AE33DE396245A36F19563D68D122EA541C99374D76DC933E7CA804023235BF067737A0AA03F29B753AC5613D1FE9747E02FBE0E4AAC24C235BCE965C8AB775645BC0DCFD5933A144D67547DA72AAB723E653A3E27E808B99C7B77D44E030AF0D86146B10E2DDE1FFBFF02858B718476AC9E3682D580D342FB54EFFC935E768A09DB8B80C4E384095A81A0C79513F1B756718CDF6259E356D97970FB598D721ED2866F44EE0911BB6672D2828EEC567B67140FF1FC6A796E63A156DF238ADEFD04D4A394BB3784C5143990D5B36B8CDD678ED04BBF136FCD14B7E9B3189994F027E3407E285FB6FFF92CE1DA6D7C9B27C03146CFF15A65B81868CB74636877F255CA1CC20544478B9E5271B8433476181723BAC550C2EADA3CD748A911138C376642C74A93969B867C1A3A5D108785BDCAD386BD3A2072B45359768695C5659A84A97386A0D018E1BD10D4756995C5999FDEF83B03CF0D927A115ECE25B368FFC1CF1C23C355EC2F95488FEDFD9894D5E943B2788DB93EC47A1207A9DA557D48A61017F4E318047517351A91B8D44D368B95AABF242F1C935F4EDB864D6D6D393256B94103CA3A39F1F3B452E0AF4A6E5AB0C97FC1EB75A03B83ADFB07C85E00235E8D24C769B4D7DF72D00F006587F33AB961AF825A7602127C3836FE6F8AE0168C623863432E0217DC47EA850FBCCBAFE31D00E50F67A3BAA9E01C2B23120DDE8343D37E9F6831B0A9498BAF8F255390BC16F3F2E37E994C73B416107ABFD7EAFBEF0285F734958CE0545AF94E7BBBFDB2011F5D1AC77589504B83C666782DE4483E0E7F4D3F866C842FE967C638578F509632A3C161D440C02FFFEC7A01970A9D0F52A02556F0D95761A4D3EA23233FFDC64234167EA50A21F602FA00499EDBDBF86AA521BE7266B8B12BB957C9FA356ABC7FA5EBFE71793A13008A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Italic cguidfix
/F1.1/HelveticaNeue-Italic renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /A put
dup 34 /n put
dup 35 /e put
dup 36 /w put
dup 37 /o put
dup 38 /l put
dup 39 /d put
dup 40 /r put
dup 41 /a put
dup 42 /parenleft put
dup 43 /parenright put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<




00>] def
/CharStrings 13 dict dup begin
/.notdef 0 def
/parenleft 1 def
/parenright 2 def
/A 3 def
/a 4 def
/d 5 def
/e 6 def
/l 7 def
/n 8 def
/o 9 def
/r 10 def
/w 11 def
/uni20BE 12 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4445087 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB282933C176504523007CAA62118EF0F10F542CCD149F7422676A4BF6B9CF67846904C2F053F05F37B6A8FC0544F06B97B7DA651098C9493AF5A4F445A8D544ABDBAE219D7765D876E06E4B9E1EFD48A1FE8C82A11062FC62B8859C0707E5CBE814A57488C9409B1C3DB193D8BAF16FCAB0E960C673A7B67712E42B1E7A27A60A89D300EFE3940BB38E272C00ACF5DB1FA3E05276A17302319085AA8E933ADDD52F90339E2702922FEE487C28F778261747F4E4F28FA680BAE4536A0EFB356436886CEE6AF5CF507A56F87A444FF6176479AE70C300E537DCE402A2C02C14060EEDF280DBF6AEB28E8F8FBC0D9B443B9060993E81648D857E59942A604B45CD6A26C1EA644A76E13D373125D2ADA8ED539EDA21B1C638233DEF1AC120B126E02B65D1A3587EB243315551EBD9BE705B79F099FA43487FA31DE35A13F7F7E2AA2D8AE9A00C7DA6215F44D715C1CDF05ED674A4D3536A871FA0CD5EEB6F8065F9F884C48E431278A780653B06A9264725D1D9BFCD1C49749230F8DF54D7D4047CFF109463EB2A96A854EB096AF810260FE2327E1A6F2C0532CB2717F7E27483C5DC4AB839A8567CB9C9794D6042543FF7CC502EE1535F8E31B8F50DC5ECC18104D681A9CA3FA998E2FF7EFC05ED9AE01FC84C1A02598DEC308243BD08264D1E420044EDB751251B2723C0ADAF36DC1222B91947BB1BB39E156F8EC72AB009EE3B86216463EA208778D21EC0A4AE6572C601EBFA443A5C6A958106984898E9FA64A5D91A6586E

BFA471895CB4AD295E1B314ED51EA43DE9CBC42731F5A59698B8D6AD1C9B6DAE3CC29F7573DE4462E5084BB69F789B7DEF08422842B18323189017AAF06D72C0AA2CD5802E3AE264EBAA19E28DD063479D596CFAC1A4754760158C9F4C40D39CB52C0628333D665C6B33F06C7CEA2F2AB4E22F74F0566CF1FE079E28296E7BEF5F6576BD305991102B3E9F5AE5D3E2E864284C3C29A70B7CF03B2DF138D4433E2BD73789DB5D9055C2F440C400659451A169AAEB43FED5D899BEFCCE9545291CA4788104A40390836B0A4F59857BBD0AD59D997F103DAFB2BDC722268F08FF6AD8BDF42A6A69751C928825BE1F156193A242EE7C0FA116E91FDC9EEA2D6E2EBB4C3D3F90EF1EA0A79358416F1E5A7C4F135C1498C8E2753674765B8104651F7BDE01CC0C478D08C5A75F8D1E696BB4AA9DC13942B5F398F398CAB85F0F641980B4BF738BF625DACAE94F8C15F01EFDFAD8F56E11516232B96E1C25CCCA4DEB6F4F56582094D877DFD161CE3250E29E34C6858A3296228479D1A9CED94800F44838494077935AD351272447F381D2E7E1C5C56D1F866B12103E91C73606CC7E0B92B937EBF296D2BAC8450D1B4D17FFDE63C78AC315275F61EFCF7465EF4BB480FA49D32D0C5D5D4421E2295B0699D9EAC04990723C000DD09611DBA05E8AD2D6B8346CB97CFFD239B6895A6180033B75A9D5DDE9ED65534A717A704FDD99829E2DDFCD4471B12827C3F8D865BCBDC87493AD2E0C272FDD905235DA0BD2C3C672E112BAD205
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 321 297 rc
30 160.636 m
80 160.636 l
80 110.636 l
30 110.636 l
h
30 160.636 m
f
2 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -1580 -333 cm
1610 -493.63599 m
1660 -493.63599 l
1660 -443.63599 l
1610 -443.63599 l
h
1610 -493.63599 m
S
0 i
1 1 1 sc
CM
100 260.63599 m
150 260.63599 l
150 210.636 l
100 210.636 l
h
100 260.63599 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1580 -333 cm
1680 -593.63599 m
1730 -593.63599 l
1730 -543.63599 l
1680 -543.63599 l
h
1680 -593.63599 m
S
0 i
1 1 1 sc
CM
120 70.636002 m
170 70.636002 l
170 20.636002 l
120 20.636002 l
h
120 70.636002 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1580 -333 cm
1700 -403.63599 m
1750 -403.63599 l
1750 -353.63599 l
1700 -353.63599 l
h
1700 -403.63599 m
S
/Cs2 SC
0 sc
0 i
/F1.1[ 18 0 0 -18 0 0]sf
1585 -491.63599 m
(!)s
/F1.1[ 13 0 0 -13 0 0]sf
1597.996 -485.63599 m
(")s
1 w
0.60000002 i
/Cs1 SC
0.69411802 0 0.109804 sc
1686.8 -542.63599 m
1653.2 -494.63599 l
S
1707.7368 -542.63599 m
1722.2632 -404.63599 l
S
1661 -442.63599 m
1699 -404.63599 l
S
/Cs3 SC
0.80000001 0 1 sc
0 i
/F2.1[ 17 0 0 -17 0 0]sf
1685 -553.63599 m
(!)s
1615 -453.63599 m
(!)s
1705 -363.63599 m
(!)s
/Cs2 SC
0 sc
/F1.1[ 18 0 0 -18 0 0]sf
1675 -608 m
(!)s
/F1.1[ 13 0 0 -13 0 0]sf
1687.996 -602 m
(#)s
/Cs3 SC
1 0 0 sc
/F2.1[ 17 0 0 -17 0 0]sf
1623.533 -479 m
("#$)[ 9.452000 9.129000 0.000000 ] xS
1703.533 -389 m
("#$)[ 9.452000 9.129000 0.000000 ] xS
1695 -579 m
(%&')[ 9.758000 3.774000 0.000000 ] xS
/Cs2 SC
0 sc
/F1.1[ 18 0 0 -18 0 0]sf
1755 -348 m
(!)s
/F1.1[ 13 0 0 -13 0 0]sf
1767.996 -342 m
($)s
/Cs1 SC
48 0 0 58 246 51 cm
BI
/Width 144
/Height 174
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
JcC<$JcF-tJcC<$JcF-tJcC<$JcF-tn,N1\q"XXVJb#u7Jb&g2q"4@Vq#'U\n,N1\q"XXVJb#u7Jb&g2
q"4@Vq#'U\n,N1\q"XXVJb#u7Jb&g2q"4@Vq#'U\q#C-eq"+:CptYYqJ^q6[LXl1NptYZ,q"+:Yq#C-h
q#'pYpu_A,pst#H\(-8apt#5qpu_ACq#'peq#C-eq"+:CptYYqJ^q6[LXl1NptYZ,q"+:Yq#C-hq"XXH
ps&THppTt,J[rS,OLb.qppTt1ps&Trq"XXaq#C-apu_@rpq6C1ppYgb^q#Q;pp^%,pq6CHpu_AHq#C-h
q"XXHps&THppTt,J[rS,OLb.qppTt1ps&Trq"XXaq#C-]ptYYWpoF1kpp>U_^q#Q;ppBgtpoF2&ptYZ:
q#C-hq"4@:pq6C&poO7tJ[rS,OLb.npoO7kpq6CWq"4@]q#C-]ptYYWpoF1kpp>U_^q#Q;ppBgtpoF2&
ptYZ:q#C-hq""42ppTt!ppp1DJ^qQdOOa-Mppp1$ppTtKq""4[q#C-[pt#5KpoO8$prn<>^t"OsprrND
poO8!pt#62q#C-hq""42ppTt!ppp1DJ^qQdOOa-Mppp1$ppTtKq""4[q#C-[pso/KppBh?puR(t_"*TX
puV:pppBh*pso01q#C-hq""41pp^%*prrNpJb$VIORi2.prrN?pp^%Kq""4[q#C-[pso/KppBh?puR(t
_"*TXpuV:pppBh*pso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOc
OT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+H
psniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniD
pso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01
q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-h
q""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41
n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5D
q!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9
_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMr
q""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41
n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5D
q""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[
q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[
psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniD
pso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01
JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOc
OT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+H
psniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniD
pso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01
q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-h
q""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41
n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5D
q!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9
_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMr
q""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41
n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5D
q""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[
q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[
psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniD
pso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01
JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOc
OT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+H
psniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniD
pso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01
q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-h
q""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41
n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5D
q!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9
_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMr
q""41n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41
n%&5Dq""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5D
q""4[q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[
q#C-[psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[
psniDpso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniD
pso01JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01
JcEOcOT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOc
OT5+HpsniDpso01q#C-hq""41n%&5Dq!s"9_#KMrq""41n%&5Dq""4[q#C-[psniDpso01JcEOcci<e>
q#'p`q"ORWq"=FUq!%S#ppTt-pso01q#C-hq""41n%&5Dq!s"9_#Ma\q#:'dq"jd[q"FLUq"FLIpsAfE
ppg+Lq""4[q#C-[psniDpso01JcEOcci<e>q#'p`q"ORWq"=FUq!%S#ppTt-pso01q#C-hq""41n%&5D
q!s"9_#N^"q#1!aq"FLQq!7_;pu2#)n(mcgpqca/ppTtJq""4[q#C-[psniDpso01JcEOclMpYXq"jdZ
q!n.Fpu_A1ptkJqpsf)TpojJ$pso01q#C-hq""41n%&5Dq!s"9_#N^"q#1!aq"FLQq!7_;pu2#)n(mcg
pqca/ppTtJq""4[q#C-[psniDpso01JcE[grVl`oq"sj\q!e(Aptkesps8`Wpr)sEpqZ[@pq-=(po!no
pt#62q#C-hq""41n%&5Dq!s"9`;ff8r;QKgq"ORQpuhG/pt#5dprW<LpqlgApqca;poaCippBhIq""4[
q#C-[psniDpso01JcE[grVl`oq"sj\q!e(Aptkesps8`Wpr)sEpqZ[@pq-=(po!nopt#62q#C-hq""41
n%&5Dq!s"9f)POEq"js]r:KdMpu2"upriHLpq6C4n$qMjppBLjpq6CWq"4@]q#C-[psniDpso01JcF=$
q#:'brUg$[q!7_6pso/_pqlg=ppok'k.18on#Q5rptYZ:q#C-hq""41n%&5Dq!s"9f)POEq"js]r:KdM
pu2"upriHLpq6C4n$qMjppBLjpq6CWq"4@]q#C-[psniDpso01JcFs6q#1!`q!n.CrS7>+ps8`Rpq6C3
pp^%/pqHO@prW<Tps/ZZprMp?ps/Zsq"OR`q#C-[psniDpso01JcFs6q#1!`q!n.CrS7>+ps8`Rpq6C3
pp^%/pqHO@prW<Tps/ZZprMp?ps/Zsq"OR`q#C-[psniDpso01JcFs6q#1!`q!n.CrS7>+ps8`Rpq6C3
pp^%/pqHO@prW<Tps/ZZprMp?ps/Zsq"OR`q#C-[psniDpso01JcGTHq#'p]q!\">pt5AbrP8?Hppp1/
ppp17prN6Xpt>H#puV;8q!.Y=pu_&(puqMEq#'peq#C-[psniDpso01JcGTHq#'p]q!\">pt5AbrP8?H
ppp1/ppp17prN6Xpt>H#puV;8q!.Y=pu_&(puqMEq#'peq#C-[psniDpso01JcGTHq#'p]q!\">pt5Ab
rP8?Hppp1/ppp17prN6Xpt>H#puV;8q!.Y=pu_&(puqMEq#'peq#C-[pso/Mppg+Kq!jXLq#:'cq"=FL
pu;)!prW<Fppg:3r3uI5pr)sRptGN)q!IkJq"OR[q"sjaq"sj_q"XXYq"XX^n,N1_q""41ppp10psf*/
Q2gXYq"sjZq!Ik9pso/]pqHO5rO;^6pq-=>ps8`hpuV;<q"+:Tq"jd_q#'paq"jd\q"ORYq#'U\q#C-[
pso/Mppg+Kq!jXLq#:'cq"=FLpu;)!prW<Fppg:3r3uI5pr)sRptGN)q!IkJq"OR[q"sjaq"sj_q"XXY
q"XX^n,N1_q""42ppg+,ps/[#q#%]&q#:'dq"XXSq!%S1psSrWpq6()pq?XHr5\T^pu(r5q"+:Vq#-0O
q#C-[pt#5MppKnBq!7_Q\c;I(q#'p^q!n.Dptkeopr<*An$i)*rQ"iVpsf)sq!7_Hq"a^`N;r\Qq""42
ppg+,ps/[#q#%]&q#:'dq"XXSq!%S1psSrWpq6()pq?XHr5\T^pu(r5q"+:Vq#-0Oq#C-]ptPSVpp0\2
ptGN0q"=FXq#'UZq"sj^q"FLQq!7_7pt5Acpqlg;pp^%.pqQUHpt,K*r8dY@q"FL[q#5jEqZ$?jq"4@9
pq6C-pqcaZq!@eKq"a^_n,<%Yq"a^Yq!n.Fpu;)$prrNMpq$70ppg+6pr`B`rT*n;q!RqNq"sjcJcGTH
q#C-]ptPSVpp0\2ptGN0q"=FXq#'UZq"sj^q"FLQq!7_7pt5Acpqlg;pp^%.pqQUHpt,K*r8dY@q"FL[
q#5jEqZ$?jq"OREprN6=ppKn6psSrnpuV;9q!@eAq!%S8pttkups/ZRpq?I4ppTt/pqlgNptGN*q!n=X
r:p'cJcFX-q#C-`puM4kppTt*pqlgSptb`,q!.Y@q!7_>puV;.pt,;dpr3$Appg+-pq$7;ps&Tfpu_AA
rV6<cq#,dDhuEKOq"OREprN6=ppKn6psSrnpuV;9q!@eAq!%S8pttkups/ZRpq?I4ppTt/pqlgNptGN*
q!n=Xr:p'cJcFX-q#C-eq!e(6prN6App^%1pqumKps/?Tps&TTpqlg=ppg+-ppg+4pr<*Vptkf1q"+:V
q#10kJcF-tq#C-eq!e(6prN6App^%1pqumKps/?Tps&TTpqlg=ppg+-ppg+4pr<*Vptkf1q"+:Vq#10k
JcF-tq#C-eq!e(6prN6App^%1pqumKps/?Tps&TTpqlg=ppg+-ppg+4pr<*Vptkf1q"+:Vq#10kJcF-t
q#C-gq"jdTpu2"qpr)s?e@PFcn$r/'pq6C>ps&Tdpu;)9q"=FZq#9UZJcF-tq#C-gq"jdTpu2"qpr)s?
e@PFcn$r/'pq6C>ps&Tdpu;)9q"=FZq#9UZJcF-tq#C-gq"jdTpu2"qpr)s?e@PFcn$r/'pq6C>ps&Td
pu;)9q"=FZq#9UZJcF-tk5Y5Sq"=FJpttkrprrNQpquR:pqlgFpr`BYpt5B"q!%SDq"XX^d/S[sdJrA/
q#'p[q!7_4psf)_pr<*Hn%ne9pr3$NpsAfgpu(r3q!n.Sq#&M=JcF-tk5Y5Sq"=FJpttkrprrNQpquR:
pqlgFpr`BYpt5B"q!%SDq"XX^d/S[sdJr&&q#:'cq"=FNpuqM4ptkf$ptb`%pu;)2q!@eHq"OR\q#8#-
JcF-th>d9Lq"sjZq!\"Apu;)*ptYZ#ptkf*pu_A<q""4Sq"sjc^AicadJr&&q#:'cq"=FNpuqM4ptkf$
ptb`%pu;)2q!@eHq"OR\q#8#-JcF-t_Z0E0q"sj]q"F1Lq"FLXq"jdaq#7&gJcF-t_Z0E0q"sj]q"F1L
q"FLXq"jdaq#7&gJcF-t_Z0E0q"sj]q"F1Lq"FLXq"jdaq#7&gJcF-tJcC<$JcF-tJcC<$JcF-tJcC<$
JcF-tJcC<$JcF-tJcC<$JcF-tJcC<$JcF-tJcC<$JcF-tJcC<$JcF-tJcC<$JcF-tJ,
~> %APLeod
EI
2 w
0.60000002 i
0.016804177 0.198351 1 sc
1 0 0 -1 -1580 -333 cm
1830 -440 m
1870 -440 l
1870 -400 l
1858 -405 1842 -385 1830 -395 c
h
1830 -440 m
S
1 w
0.0168042 0.198351 1 sc
1829 -433.97812 m
1708.361 -543.00189 l
S
0 i
CM
122.42565 215.3658 m
126.34955 207.77612 l
130.37248 212.22765 l
h
122.42565 215.3658 m
f
0 J
0 j
1 0 0 -1 -1580 -333 cm
1702.4257 -548.36578 m
1706.3496 -540.77612 l
1710.3724 -545.22766 l
h
1702.4257 -548.36578 m
S
1 J
1 j
0.60000002 i
1829 -408.09534 m
1730.4207 -375.68317 l
S
0 i
CM
142.82094 40.18441 m
151.35773 39.833248 l
149.48367 45.533066 l
h
142.82094 40.18441 m
f
0 J
0 j
1 0 0 -1 -1580 -333 cm
1722.8209 -373.18442 m
1731.3577 -372.83325 l
1729.4836 -378.53305 l
h
1722.8209 -373.18442 m
S
1 J
1 j
0.60000002 i
1829 -419.03873 m
1640.7378 -455.24539 l
S
0 i
CM
52.881809 123.75626 m
60.171261 119.29938 l
61.30442 125.1914 l
h
52.881809 123.75626 m
f
0 J
0 j
1 0 0 -1 -1580 -333 cm
1632.8818 -456.75626 m
1640.1713 -452.29938 l
1641.3044 -458.19141 l
h
1632.8818 -456.75626 m
S
/Cs2 SC
0 sc
/F2.1[ 17 0 0 -17 0 0]sf
1771.8385 -509 m
(\(#\)'*!+)[ 5.355000 9.129000 9.129000 10.081000 4.403000 11.016000 0.000000 ] xS
1775.089 -369 m
(\(#\)'*!+)[ 5.355000 9.129000 9.129000 10.081000 4.403000 11.016000 0.000000 ] xS
1723.2419 -449 m
(\(#\)'*!+)[ 5.355000 9.129000 9.129000 10.081000 4.403000 11.016000 0.000000 ] xS
/F1.1[ 18 0 0 -18 0 0]sf
1875.1545 -388 m
(%)s
/F1.1[ 13 0 0 -13 0 0]sf
1888.8165 -382 m
(&)s
ep
end
%%Trailer
%%EOF
