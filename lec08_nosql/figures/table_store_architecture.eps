%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 535.000000 311.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.6 (Build 18G4032) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 535 311
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 535 311
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /t put
dup 34 /a put
dup 35 /b put
dup 36 /l put
dup 37 /e put
dup 38 /space put
dup 39 /s put
dup 40 /r put
dup 41 /v put
dup 42 /c put
dup 43 /i put
dup 44 /n put
dup 45 /o put
dup 46 /u put
dup 47 /d put
dup 48 /y put
dup 49 /w put
dup 50 /h put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<





023E0024014D003D01F4001F013B0009022C004001F4000E02F6001101F4000804BE0037000000480048015201EA025C02FA036203B403DE03F8044004E0050E05B206040654067406AE0718074E00000001000000140096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 20 dict dup begin
/.notdef 0 def
/space 1 def
/a 2 def
/b 3 def
/c 4 def
/d 5 def
/e 6 def
/h 7 def
/i 8 def
/l 9 def
/n 10 def
/o 11 def
/r 12 def
/s 13 def
/t 14 def
/u 15 def
/v 16 def
/w 17 def
/y 18 def
/uni2B91 19 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4151493 def
currentdict currentfile eexec

F806A272E0D4127B14C944D019D0A76DCFC85B242A5E5199FB5564E4AC0265314E76A89407ABBD0FC7567B3A8371F1CDDE953A7365F935C3F6B2207B5188BF98A55BFBA40A32D95AA2A747356EDB1E83144F4A27F85BAD58B29D081506257EDF6F6381749C00AB679B63C34F12FA9BCB8D73F2DFA756AB567758195FFBFFBE758DF2405643D3E183DD8956E0CE6D14EB155972D0A9617F9469A680813C5B369301C1EA5200C6C958BA43EC1084AD6E5B345794F47D08F936F508E2A7F9A0981170CEF4C0CF1598EF60136CAF033D26723147A17D706D5F6C23E2E0E2CD14CBE2580F9CA94B4E454E61D9026565B683A8A8B54CA86AB5FF7316256E11FB54E5ED7C1EE12701B1AD950A433B8DC9F16CFDF85E3777B9939E32D2177FF897013BFB8143C5818DDFE7D893820CAA179D4A25228EFBF560EC31A9B3FDC89D76C370E7DA8FC5E4C7D073DEE6FB60BD2B61012DF81BE2CD7318A52016DE7EE0BF82259B170476E837D8B53AE5FBD71344A5D5639EE9F0C159A79F5F96CD8F55CF7A5FAD8C0380E1B2FB0279405B8777D00A71ABCEF3BB342850F5A3C16D5E56EEC5913396700D4FA84CBB1DA7927FE863C2B15664F2928E38FBFDC9A70577E7729221BF7882A9545C50E9A1C80916AD04832A8D52F82A45C48377F13AE82B9EF7F67A6771EDA57C4FBA8EA3A064B98945B3C774945D43D33E9A689B2B3EEDBE9CFD1B1C2133E90D0BD4A06E8EA8479164C7657687F10C47C81DBBF0D103128F3E22D8205ED6796C493B30C39B91DB776ED3D5FBA771AD4139821E6E2ACD18B3F45A5DF2B3B1A689E93265ED9011A6638846D9C97DA15EE8375E4A8D2CEC45CC6140BF2CBDB8F1C4C8912CF16E73345DC2F4DBC17E89F839F3547C23338E1016F5A2931AE924DE59DB8CD81C9DD40739234D54F545E5F9E7C1AD8E4B1B0A449FB5036C2694DBD24F5219D476989C08F5D321BD822F9BC24596FF98DDF92D4D4B256F97BC6B06022EBC17C12561D61A25BB9B8333F4EAD18973D03178246DECC700EF5BE16F665DE40C947048DC8A51162E369151956E8C70606BE17D97535ADBA401263F609E005003E39CF790E129BC57EAA583CEABE3F5F0521D62B1803BE51C7240B5D4400152CE885B665D8667E0F2B8F37839C345F11503AC6C0196B73EB23B12806F4207B8D11F66F24B2FB48713C76A0BEA89384A4E8EC3023EE186AE001F4977BA324B9BD0A2FE2A5379A785F4C7E6C59B256E7D093E50EE4DA754D398D49A9F2C0EF858F96691AF4742A1AD72305F6E1C0B84DE70C6235790B7E2CFB9314626FAA83F3CC9321A6914096B872F3ED0EC41D5E09B7D4186586BAD4B58470CA8A1DE63B684C668E39B21777DD1651BFFDCB795C64652A5140830BFC2863ACA91DDE4ABCA342855B40014208B5EA6D355A26C2E58968CC785EB5DD9347892634724

E2C7499E43868C4B785E89502FCD51D302CBB7018C19C2C8C58289627F749AF694FFD059833628CAB189F41F048C1583774ECEDA01F16CD88A526D9D95638E2D008635C198E50BD54B667CDCF8076EA3E951741361D1F6A6455E5CB314E9423DC8324B3D8FB99BCC9A7C51426C8095DB2B97EE7AF435D939D0F1D93454A6A6A4B32C19310AA09B622EB00F5F7CA2920CF8994B2A98643FA3F059B54151542D4A6F9790F74E83C305148DCD3CB3D2A8151B840FB0C52DFCAF9F08CBBC5F33EC248D293F862E4CC4AE5E73A1AADC339F5626E65A9C4CC3B601FC59F31EDABE3A82D4BAC7942B77B940B7B7B845B273AF851E323E5DF660919E3DEFA1892C5DEDDEFDF16DEA39F86C764A46BB90AE18854188E4C9B8ED60176CB5248AA47729EFD9250FFFD4FD7913E30AE6170134378A43D0126823F6FB0E6BD4F0C7290171670E78E7FE85E88CDA95AD6B6564F9740D4F5B382542802D9F38F93238B90EB8EE650E922FD352EC51D817B80F98995852C2DE72ED42755B3F744266B41D1080D14AC37A2C0F88D7695BD687B7E51929B8911F39E87A218B23DF216349E80516CD2D95E0C27CA235DEEC8F49716EA31026E369FABE52E859CB9271FADD99842A83A5168019A8AEEBB252495648F0B431F5ECF979FD069B6A707C4EA301D1C6F048BA06CDC3EBAA8A19CC565FE1AD40A8D7EF7A3673EFFF5ACF75238C6BFA7D5AC63F8D68A4C3633E4A3CBB68C620D8ECDF364930B29E61FDF1772B9C22E3748AAD3A87F037D4AB91474BAD37319EB031729A4CD0337094B26BA42A2A865B03AAB33577982B98240A0A9E676E18284EB26C730E18F7104BAEBA7AB8B613BBB1C51A9157AEB9F94D08
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
2 w
1 J
1 j
0.60000002 i
/Cs1 SC
0.5 0.5 0.5 sc
q
0 0 535 311 rc
1 0 0 -1 314 310 cm
-220 180.524 m
-120 180.524 l
-120 250.524 l
-220 250.524 l
h
-220 180.524 m
S
-100 180.524 m
0 180.524 l
0 250.524 l
-100 250.524 l
h
-100 180.524 m
S
10 180.524 m
110 180.524 l
110 250.524 l
10 250.524 l
h
10 180.524 m
S
120 180.524 m
220 180.524 l
220 250.524 l
120 250.524 l
h
120 180.524 m
S
0 i
1 1 0.75 sc
CM
144 119.476 m
183.04762 119.476 l
183.04762 98.047424 l
144 98.047424 l
h
144 119.476 m
f
1 w
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
-170 190.524 m
-130.95238 190.524 l
-130.95238 211.95258 l
-170 211.95258 l
h
-170 190.524 m
S
0 i
0.75 1 1 sc
CM
444 89.475998 m
483.04761 89.475998 l
483.04761 68.047424 l
444 68.047424 l
h
444 89.475998 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
130 220.524 m
169.04762 220.524 l
169.04762 241.95258 l
130 241.95258 l
h
130 220.524 m
S
0 i
1 0.75 1 sc
CM
334 89.475998 m
373.04761 89.475998 l
373.04761 68.047424 l
334 68.047424 l
h
334 89.475998 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
20 220.524 m
59.047619 220.524 l
59.047619 241.95258 l
20 241.95258 l
h
20 220.524 m
S
0 i
1 0.75 1 sc
CM
224.95238 119.476 m
264 119.476 l
264 98.047424 l
224.95238 98.047424 l
h
224.95238 119.476 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
-89.047623 190.524 m
-50 190.524 l
-50 211.95258 l
-89.047623 211.95258 l
h
-89.047623 190.524 m
S
0 i
0.75 1 1 sc
CM
334 119.476 m
373.04761 119.476 l
373.04761 98.047424 l
334 98.047424 l
h
334 119.476 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
20 190.524 m
59.047619 190.524 l
59.047619 211.95258 l
20 211.95258 l
h
20 190.524 m
S
0 i
1 1 0.75 sc
CM
444 119.476 m
484 119.476 l
484 99.475998 l
444 99.475998 l
h
444 119.476 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
130 190.524 m
170 190.524 l
170 210.524 l
130 210.524 l
h
130 190.524 m
S
0 i
1 0.75 1 sc
CM
144 89.475998 m
183.04762 89.475998 l
183.04762 68.047424 l
144 68.047424 l
h
144 89.475998 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
-170 220.524 m
-130.95238 220.524 l
-130.95238 241.95258 l
-170 241.95258 l
h
-170 220.524 m
S
0 i
1 1 0.75 sc
CM
264.95239 89.475998 m
304 89.475998 l
304 68.047424 l
264.95239 68.047424 l
h
264.95239 89.475998 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
-49.047619 220.524 m
-10 220.524 l
-10 241.95258 l
-49.047619 241.95258 l
h
-49.047619 220.524 m
S
/Cs2 SC
0 sc
0 i
/F1.1[ 17 0 0 -17 0 0]sf
-153.742 300.52399 m
(!"#$%!&'%\(\)%\(')[ 5.355000 9.129000 10.081000 3.774000 9.129000 5.355000 4.726000 8.500000 9.129000 5.661000 8.500000 9.129000 5.661000 0.000000 ] xS
-308.08899 221.524 m
(!"#$%!')[ 5.355000 9.129000 10.081000 3.774000 9.129000 5.355000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.0168042 0.198351 1 sc
-115.42214 279.52399 m
-132.8761 259.05685 l
S
0 i
CM
175.93291 57.030296 m
178.84122 48.996513 l
183.40659 52.889763 l
h
175.93291 57.030296 m
f
0 J
0 j
1 0 0 -1 314 310 cm
-138.06709 252.9697 m
-135.15878 261.00348 l
-130.59341 257.11023 l
h
-138.06709 252.9697 m
S
1 J
1 j
0.60000002 i
-92.345337 279.52399 m
-79.282051 259.7804 l
S
0 i
CM
239.13232 56.891441 m
232.21602 51.875011 l
237.21988 48.564224 l
h
239.13232 56.891441 m
f
0 J
0 j
1 0 0 -1 314 310 cm
-74.867668 253.10857 m
-81.783989 258.125 l
-76.780121 261.43579 l
h
-74.867668 253.10857 m
S
1 J
1 j
0.60000002 i
-46.402145 279.52399 m
30.447039 258.62225 l
S
0 i
CM
352.1666 53.477345 m
343.6597 54.272583 l
345.23438 48.48291 l
h
352.1666 53.477345 m
f
0 J
0 j
1 0 0 -1 314 310 cm
38.166603 256.52264 m
29.659689 255.72742 l
31.234386 261.51709 l
h
38.166603 256.52264 m
S
1 J
1 j
0.60000002 i
-46.112999 286.52451 m
190.20424 251.95689 l
S
0 i
CM
512.12 59.201 m
503.77005 61.01152 l
504.63846 55.074699 l
h
512.12 59.201 m
f
0 J
0 j
1 0 0 -1 314 310 cm
198.12001 250.799 m
189.77003 248.98848 l
190.63846 254.92531 l
h
198.12001 250.799 m
S
1 J
1 j
0.60000002 i
-251.76601 212.58824 m
-179.83842 204.52846 l
S
0 i
CM
142.11182 106.3624 m
133.8275 108.45289 l
134.49565 102.4902 l
h
142.11182 106.3624 m
f
0 J
0 j
1 0 0 -1 314 310 cm
-171.88818 203.63759 m
-180.1725 201.54712 l
-179.50435 207.5098 l
h
-171.88818 203.63759 m
S
1 J
1 j
0.60000002 i
-251.76601 219.55934 m
-179.83484 227.85316 l
S
0 i
CM
142.1125 81.230484 m
134.50879 85.127083 l
133.82153 79.16658 l
h
142.1125 81.230484 m
f
0 J
0 j
1 0 0 -1 314 310 cm
-171.8875 228.76952 m
-179.49121 224.87291 l
-180.17847 230.83342 l
h
-171.8875 228.76952 m
S
1 1 1 sc
CM
182 310 m
246 310 l
250.41827 310 254 306.41827 254 302 c
254 290.0408 l
254 285.62253 250.41827 282.0408 246 282.0408 c
182 282.0408 l
177.58173 282.0408 174 285.62253 174 290.0408 c
174 302 l
174 306.41827 177.58173 310 182 310 c
h
182 310 m
f
2 w
1 J
1 j
[
2
6
] 0 d
0.60000002 i
0.016804177 0.198351 1 sc
1 0 0 -1 314 310 cm
-132 0 m
-68 0 l
-63.581722 0 -60 3.581722 -60 8 c
-60 19.959183 l
-60 24.377462 -63.581722 27.959183 -68 27.959183 c
-132 27.959183 l
-136.41827 27.959183 -140 24.377462 -140 19.959183 c
-140 8 l
-140 3.581722 -136.41827 0 -132 0 c
h
-132 0 m
S
/Cs2 SC
0 sc
0 i
/F1.1[ 20 0 0 -20 0 0]sf
-123.89 21.199593 m
(*$+%,!)[ 10.740000 4.440000 4.440000 10.740000 11.120000 0.000000 ] xS
1 w
[] 0 d
0.60000002 i
/Cs1 SC
1 0.14913142 0 sc
-118.34184 36.656506 m
-138.70032 61.826679 l
S
0 i
CM
170.26869 241.95326 m
177.6322 246.2867 l
172.96716 250.05994 l
h
170.26869 241.95326 m
f
0 J
0 j
1 0 0 -1 314 310 cm
-143.73131 68.046738 m
-136.3678 63.713303 l
-141.03284 59.940056 l
h
-143.73131 68.046738 m
S
CM
200.68915 279.56354 m
193.32564 275.2301 l
197.99068 271.45688 l
h
200.68915 279.56354 m
f
1 0 0 -1 314 310 cm
-113.31085 30.436447 m
-120.67436 34.769886 l
-116.00932 38.543129 l
h
-113.31085 30.436447 m
S
1 1 1 sc
CM
302 307.9592 m
366 307.9592 l
370.41827 307.9592 374 304.37747 374 299.9592 c
374 288 l
374 283.58173 370.41827 280 366 280 c
302 280 l
297.58173 280 294 283.58173 294 288 c
294 299.9592 l
294 304.37747 297.58173 307.9592 302 307.9592 c
h
302 307.9592 m
f
2 w
1 J
1 j
[
2
6
] 0 d
0.60000002 i
0.016804177 0.198351 1 sc
1 0 0 -1 314 310 cm
-12 2.0408163 m
52 2.0408163 l
56.418278 2.0408163 60 5.6225381 60 10.040816 c
60 22 l
60 26.418278 56.418278 30 52 30 c
-12 30 l
-16.418278 30 -20 26.418278 -20 22 c
-20 10.040816 l
-20 5.6225381 -16.418278 2.0408163 -12 2.0408163 c
h
-12 2.0408163 m
S
/Cs2 SC
0 sc
0 i
-3.8900001 23.24041 m
(*$+%,!)[ 10.740000 4.440000 4.440000 10.740000 11.120000 0.000000 ] xS
1 w
[] 0 d
0.60000002 i
/Cs1 SC
1 0.14913142 0 sc
6.0953569 39.520252 m
-6.6162291 61.00375 l
S
0 i
CM
303.30994 242.11119 m
309.96567 247.46857 l
304.80188 250.52394 l
h
303.30994 242.11119 m
f
0 J
0 j
1 0 0 -1 314 310 cm
-10.690052 67.888802 m
-4.0343337 62.531433 l
-9.1981239 59.476063 l
h
-10.690052 67.888802 m
S
CM
324.16919 277.36481 m
317.51346 272.00742 l
322.67725 268.95206 l
h
324.16919 277.36481 m
f
1 0 0 -1 314 310 cm
10.16918 32.635201 m
3.5134621 37.992569 l
8.6772528 41.047939 l
h
10.16918 32.635201 m
S
1 1 1 sc
CM
72 309.47601 m
136 309.47601 l
140.41827 309.47601 144 305.89429 144 301.47601 c
144 289.51682 l
144 285.09854 140.41827 281.51682 136 281.51682 c
72 281.51682 l
67.581718 281.51682 64 285.09854 64 289.51682 c
64 301.47601 l
64 305.89429 67.581718 309.47601 72 309.47601 c
h
72 309.47601 m
f
2 w
1 J
1 j
[
2
6
] 0 d
0.60000002 i
0.016804177 0.198351 1 sc
1 0 0 -1 314 310 cm
-242 0.52400208 m
-178 0.52400208 l
-173.58173 0.52400208 -170 4.1057239 -170 8.5240021 c
-170 20.483185 l
-170 24.901464 -173.58173 28.483185 -178 28.483185 c
-242 28.483185 l
-246.41827 28.483185 -250 24.901464 -250 20.483185 c
-250 8.5240021 l
-250 4.1057239 -246.41827 0.52400208 -242 0.52400208 c
h
-242 0.52400208 m
S
/Cs2 SC
0 sc
0 i
-233.89 21.723595 m
(*$+%,!)[ 10.740000 4.440000 4.440000 10.740000 11.120000 0.000000 ] xS
1 w
[] 0 d
0.60000002 i
/Cs1 SC
1 0.14913142 0 sc
-198.86008 38.460102 m
-188.58951 60.547085 l
S
0 i
CM
128.78369 242.19884 m
128.13077 250.71786 l
122.69022 248.18797 l
h
128.78369 242.19884 m
f
0 J
0 j
1 0 0 -1 314 310 cm
-185.21631 67.801163 m
-185.86923 59.282139 l
-191.30978 61.812031 l
h
-185.21631 67.801163 m
S
CM
111.76673 278.79398 m
112.41964 270.27496 l
117.8602 272.80484 l
h
111.76673 278.79398 m
f
1 0 0 -1 314 310 cm
-202.23328 31.206028 m
-201.58035 39.725048 l
-196.1398 37.19516 l
h
-202.23328 31.206028 m
S
0.75 1 1 sc
CM
219 89.475998 m
258.04761 89.475998 l
258.04761 68.047424 l
219 68.047424 l
h
219 89.475998 m
f
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
-95 220.524 m
-55.952381 220.524 l
-55.952381 241.95258 l
-95 241.95258 l
h
-95 220.524 m
S
2 w
0.40000001 0.40000001 0.40000001 sc
50 70.524002 m
150 70.524002 l
150 130.524 l
50 130.524 l
h
50 70.524002 m
S
/Cs2 SC
0 sc
0 i
/F1.1[ 17 0 0 -17 0 0]sf
77.644997 86.524002 m
(\(-.!%\()[ 5.355000 9.758000 9.452000 5.355000 9.129000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
-220 70.524002 m
-120 70.524002 l
-120 130.524 l
-220 130.524 l
h
-220 70.524002 m
S
/Cs2 SC
0 sc
0 i
-192.355 86.524002 m
(\(-.!%\()[ 5.355000 9.758000 9.452000 5.355000 9.129000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
-80 70.524002 m
20 70.524002 l
20 130.524 l
-80 130.524 l
h
-80 70.524002 m
S
/Cs2 SC
0 sc
0 i
-63.370998 86.524002 m
(/+\(%*!-\(0)[ 10.081000 3.774000 5.355000 9.129000 9.129000 5.355000 9.758000 5.661000 0.000000 ] xS
/Cs1 SC
1 1 0.75 sc
CM
101 216.476 m
130.04762 216.476 l
130.04762 206.476 l
101 206.476 l
h
101 216.476 m
f
1 w
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
-213 93.524002 m
-183.95238 93.524002 l
-183.95238 103.524 l
-213 103.524 l
h
-213 93.524002 m
S
0 i
1 1 1 sc
CM
101 206.476 m
130.04762 206.476 l
130.04762 196.476 l
101 196.476 l
h
101 206.476 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
-213 103.524 m
-183.95238 103.524 l
-183.95238 113.524 l
-213 113.524 l
h
-213 103.524 m
S
0 i
0.75 1 1 sc
CM
101 196.476 m
130.04762 196.476 l
130.04762 186.476 l
101 186.476 l
h
101 196.476 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
-213 113.524 m
-183.95238 113.524 l
-183.95238 123.524 l
-213 123.524 l
h
-213 113.524 m
S
0 i
1 0.75 1 sc
CM
130.04762 216.476 m
159.09525 216.476 l
159.09525 206.476 l
130.04762 206.476 l
h
130.04762 216.476 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
-183.95238 93.524002 m
-154.90475 93.524002 l
-154.90475 103.524 l
-183.95238 103.524 l
h
-183.95238 93.524002 m
S
0 i
1 1 1 sc
CM
130.04762 206.476 m
159.09525 206.476 l
159.09525 196.476 l
130.04762 196.476 l
h
130.04762 206.476 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
-183.95238 103.524 m
-154.90475 103.524 l
-154.90475 113.524 l
-183.95238 113.524 l
h
-183.95238 103.524 m
S
0 i
1 1 1 sc
CM
130.04762 196.476 m
159.09525 196.476 l
159.09525 186.476 l
130.04762 186.476 l
h
130.04762 196.476 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
-183.95238 113.524 m
-154.90475 113.524 l
-154.90475 123.524 l
-183.95238 123.524 l
h
-183.95238 113.524 m
S
0 i
1 1 0.75 sc
CM
241 216.476 m
270.04761 216.476 l
270.04761 206.476 l
241 206.476 l
h
241 216.476 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
-73 93.524002 m
-43.952381 93.524002 l
-43.952381 103.524 l
-73 103.524 l
h
-73 93.524002 m
S
0 i
1 1 1 sc
CM
241 206.476 m
270.04761 206.476 l
270.04761 196.476 l
241 196.476 l
h
241 206.476 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
-73 103.524 m
-43.952381 103.524 l
-43.952381 113.524 l
-73 113.524 l
h
-73 103.524 m
S
0 i
0.75 1 1 sc
CM
241 196.476 m
270.04761 196.476 l
270.04761 186.476 l
241 186.476 l
h
241 196.476 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
-73 113.524 m
-43.952381 113.524 l
-43.952381 123.524 l
-73 123.524 l
h
-73 113.524 m
S
0 i
1 0.75 1 sc
CM
270.04761 216.476 m
299.09525 216.476 l
299.09525 206.476 l
270.04761 206.476 l
h
270.04761 216.476 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
-43.952381 93.524002 m
-14.904762 93.524002 l
-14.904762 103.524 l
-43.952381 103.524 l
h
-43.952381 93.524002 m
S
0 i
1 1 1 sc
CM
270.04761 206.476 m
299.09525 206.476 l
299.09525 196.476 l
270.04761 196.476 l
h
270.04761 206.476 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
-43.952381 103.524 m
-14.904762 103.524 l
-14.904762 113.524 l
-43.952381 113.524 l
h
-43.952381 103.524 m
S
0 i
1 1 1 sc
CM
270.04761 196.476 m
299.09525 196.476 l
299.09525 186.476 l
270.04761 186.476 l
h
270.04761 196.476 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
-43.952381 113.524 m
-14.904762 113.524 l
-14.904762 123.524 l
-43.952381 123.524 l
h
-43.952381 113.524 m
S
0 i
1 1 0.75 sc
CM
371 216.476 m
400.04761 216.476 l
400.04761 206.476 l
371 206.476 l
h
371 216.476 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
57 93.524002 m
86.047623 93.524002 l
86.047623 103.524 l
57 103.524 l
h
57 93.524002 m
S
0 i
1 1 1 sc
CM
371 206.476 m
400.04761 206.476 l
400.04761 196.476 l
371 196.476 l
h
371 206.476 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
57 103.524 m
86.047623 103.524 l
86.047623 113.524 l
57 113.524 l
h
57 103.524 m
S
0 i
0.75 1 1 sc
CM
371 196.476 m
400.04761 196.476 l
400.04761 186.476 l
371 186.476 l
h
371 196.476 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
57 113.524 m
86.047623 113.524 l
86.047623 123.524 l
57 123.524 l
h
57 113.524 m
S
0 i
1 0.75 1 sc
CM
400.04761 216.476 m
429.09525 216.476 l
429.09525 206.476 l
400.04761 206.476 l
h
400.04761 216.476 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
86.047623 93.524002 m
115.09524 93.524002 l
115.09524 103.524 l
86.047623 103.524 l
h
86.047623 93.524002 m
S
0 i
1 1 1 sc
CM
400.04761 206.476 m
429.09525 206.476 l
429.09525 196.476 l
400.04761 196.476 l
h
400.04761 206.476 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
86.047623 103.524 m
115.09524 103.524 l
115.09524 113.524 l
86.047623 113.524 l
h
86.047623 103.524 m
S
0 i
1 1 1 sc
CM
400.04761 196.476 m
429.09525 196.476 l
429.09525 186.476 l
400.04761 186.476 l
h
400.04761 196.476 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 314 310 cm
86.047623 113.524 m
115.09524 113.524 l
115.09524 123.524 l
86.047623 123.524 l
h
86.047623 113.524 m
S
5 w
0.755678 0.104096 0.142373 sc
-170 130.524 m
-170 160 l
-75 160 l
S
170 179.524 m
170 160 l
15 160 l
S
-30 131.524 m
-30 150 l
S
70 160 m
70 180 l
S
-150 160 m
-150 180 l
S
-60 170 m
-60 180.524 l
S
100 131.524 m
100 159.476 l
S
0 i
0.993788 0.83497697 0.86991799 sc
CM
239 160 m
329 160 l
329 140 l
239 140 l
h
239 160 m
f
1 w
0.60000002 i
0 0 0 sc
1 0 0 -1 314 310 cm
-75 150 m
15 150 l
15 170 l
-75 170 l
h
-75 150 m
S
/Cs2 SC
0 sc
0 i
-54.548 165.76199 m
('1+!*2)[ 8.500000 12.886000 3.774000 5.355000 9.129000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
