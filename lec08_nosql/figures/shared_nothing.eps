%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 789.000000 695.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.6 (Build 17G4015) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 789 695
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 789 695
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /C put
dup 34 /P put
dup 35 /U put
dup 36 /m put
dup 37 /e put
dup 38 /o put
dup 39 /r put
dup 40 /y put
dup 41 /F put
dup 42 /n put
dup 43 /t put
dup 44 /hyphen put
dup 45 /d put
dup 46 /space put
dup 47 /H put
dup 48 /a put
dup 49 /s put
dup 50 /w put
dup 51 /i put
dup 52 /c put
dup 53 /h put
dup 54 /l put
dup 55 /g put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<






0001000000190096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 25 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/C 3 def
/F 4 def
/H 5 def
/P 6 def
/U 7 def
/a 8 def
/c 9 def
/d 10 def
/e 11 def
/g 12 def
/h 13 def
/i 14 def
/l 15 def
/m 16 def
/n 17 def
/o 18 def
/r 19 def
/s 20 def
/t 21 def
/w 22 def
/y 23 def
/uni2B91 24 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C926774C520A180165F2668824383C2FD0BBD585551A6494A5974E80882DD1B37F900E01291F8967167EE9EF4AECD6AB20E5EFFE36D633B63B0C3FD71D6C0843FCE6DAA0C53D6751983E5852F2951ED2757B4892D7117736D476AB64DE012B55642046119D7C1BDFCF2AAC5C05688F8A215AC5D6B371D2DC98D55D8828D6CF54AA61561EB18EB352C4031E98EA408460B730EB204DA087334161C408CF6C7A986897925B4F4B10AE45489FFFBF93BF7BB30640C6DAD3ECD11A2E50482DDCA3E62E5E12984B998ACB5412DE9B24E59DF28CA08304E584484D58A0C5F6E7E0E15D83090300651622C258FA0F4C83E8C9FF197BEFE9589B1B0288C1D962AECDF321846A883F73B9D6D69433AB72E0A0D21D917AEF7BBE000B39578BB35E6C29F8AC42F1DE795FB50480A8A9F9C006E1910C2D3574E33FA0C676DAB60AAB788CF56952BAD75A849B60AB8C4FB8833658495E7B3C06F1955981DDAAE31A0E35E1192AEAEA4B1B7319BCB42A175F02F64187581A346FE3145CEAAE74C687011288516492D74A8C26142A0557439719B1AA942E919D80B3A13FA910AE7344D0D80B0F4A73C1597FFDA3FB9BC644BEB10B4E4084E8F8E45810C6F4F334549C931A5EB10B1723EA8F1A3D35C9657A40751272D959FA95F04FE4CE253161612D6D9AA8E05BC5A581BDD4176556A17742ED36C07358CCEBD9D1FFFBDC9435C6A17D88390AF4C750F4781A81494A01B1EA462257C44591BC347181F4ED45840A5802E19F85FFD83

DECAA1BC779B363018EFE74E8A06C1A75827EBB3FB60984FBB702E2377CFED234B46957B3EA74951B1E50B788E8C3809C86DF7C367171DE797C97DA530D362145FEF00C1A5DC646EC7A1A1768D30782AAAF26F6D8DF4BEE7A9FB6506EFD5F0D1C8F8A80EC5FB92CBE6A91607568722BC50759E896EC2B908555E30972B6DC70856223A4127CEEBFB7AA4B02684BF228142E4A8FF38A6020A1B412844BC2CC69E1DA287ECB1F09F6A2308D7484DF8A6272FDBFCE268994B5C2401BFEECFD330F74700464DD7CBB3FE6BB17F51A291D22DB38F438F697EF812A2887B0F213094EBFDBF7245AAD37836E9B6527A6E8E31BF0EF0106DC7C94B19054AEF044049769565CAA4E31A11B9388B089BFDFB622E94A1B0916629AC0F47BAB44BF2ED6131000401631C3EB82C7852C78F1946D8F92AF07D200389ACD4D0307293737F9BC94C470FF53E3F8CFB6C439CEF17746F02F16B5C5B6794D5C501E63CCD7D81C94F01E87EE1DA2839A4A3FCF289250435D4DA29FC40E87987ED09BF8CAC1B1D4000FE8E46F7357002DE530270A62A7C3FC73852DF4C8BB918C9C953D3A57EB72E1BD3742FC0F1E8985DDBB226A4BE9D245098B7AD2868972EDBC0138AD4A7FECFB874BACFC68953AFFAD2419A5BC60268CE563514D8AAE0D3A5ACD914D761B14A980F72A7ACE3CD57492DFF74370D0088A237E89E6FF6E0CC584CD34EBD54F16DDF441D50CDA5141398D11021867D4069C077A05AC26BC6C481D6FE9AA4592B4CD3528DCB10CA18975EFA5A91CC218F0E68B808E6FE2D6BE7CC19B967D61513B3C8683A91D0AB388E34E4F8F8E73A56438405E0FE8F278C543781CD5B2A51226D5075F3988DCF9478F6B6416FB9ECAA4988DF6FB3F480D291D666C65693E80A51376C5B4E00BEE64968CE159CBCDED1C6CABE6D57B8977E7A842E6ACBAD6241E8E8225CF9D8B7D4E692E98FE1F2FC6DD40CEF35467778FBF657FAD6BAD0804BDD43EB11189907DA88D2EA41D5A4671CA20250F36A11D2F892584E47E206E759F05077B2089389E944FDE07274060D2FEC777A26EC6F59EB363E63C63006E174A6B420AC69BC668838252D2A9F6D3082A47E467D18E1E3C51C28889E16D75B89029FF4190AACCD864D9151406A20A2A17B84503BFAF9569FB3CD5475FAF9E693AB6418959EAA3C358538C9D2356DA7E70F945031C575FC7F687567444E11FAC47E181A59AD38557040E21BA1A1221D5601434553B4B2EB4E15A431CA161027DA5AC87227B04134FFADFBFBFA94B0FD7D26313A171F09B4CB76CBEE25652F50826D4ACD798033BF2E164646ECA052C6925B6152CA1E4E089103171BD295C1989686C67BC7F702C146666506B631D6F0CB1C293D7A2C44FD4BA44D48DD712A99D759B20259A12C28CFB02DCEF91AC6CF81F965A9C0075D429711E120673823CCA0B015DD
BA451AF744F40AD1AAF017EB617AF4C5A11E02F9B64CAD82A173387B74F60C33A3DA040DF9E61B8DC92BBE51C21D25E6BCD47562E884EDA8B4975F6E74CEA70186687FBE8B278D37A7EBFCD0D25D974241503C64DDB68A2ECCFFC2B806D9288BC6F5FBF61217F10D14217ED149987FAFE277EDD5A9EC4300F39A8DD2F2FEF558C81F67EC92DDACA0C96A45D8346E713DC6DF7F5172E28A7C6396DD0BAAFEA1D85D949E2FF1F55B7FE76E712C8FA1CB31C374B745C5BD7179BC0C1E3F9F2630BDA1E3FFE65FEC4C8743B6B018B82625777884217ADC3F51C74C9B27AC323AAE38AEB1307541973EBF014738393F63E7AF287570370F090D1E359E20D7D81ED75C66B99EED1D7E7744D402D0417664B3058C58C86EEE09947197DDE2A72F1D9B1A6B7FC0BC6B14B8C81BFBA57B1F42A56039E938F55E38A1E98DF1DB7A53D3B8D7C10D03C749A2DC1117B976147E4A21453553F36C925FC16808DCFBD9E46C943270C396D4EE22A88DF278B2EF054055D758D403F5F25FF4AAC33EE647958E338230CB2C769EBB548AF3C3CBDE66715B2E03CE9778212F7B11B1DCC47020E22BE66AA4D7D3DE5293064EF3B295326B61DA4C634BFE7297C76BF6365CF154651A3C26976AAE868516B12658FF4586851F43FEFA7B0F6FA527C391DD17F05EAB6AF8283EA81059C9489580B8D171D3C0564790718BB7BA9CA9D5FC5F74D773152A5799DC06E56ED0A5184C9316495AB35973A1C3FF8703B1800A6F1C5C09E47E66636FFCF16C9F37204A700BA447450CA20DF0190EFB46A9EA9D9691B9B2368DDBDDD522AEBB4F916695B01338C7F7348F27D79501B84DAAB7DBD48AD1C5CB85A9450F6C83866A59EC54310E34E36FEFC45DAB4CD92FC8B6A9279F780B6E8A836454961CBBA88A5A67871C001314BD931A7E5FE4E43DCC89CFB20C8607ABDF9AE36CB5A8E6A8AAC92D97AD9028B3621480F30E91F223A7EE5DCD0C68AE35B84DF2F3A47FF4868EA2E0EE9F1E924605D80CD5963891789D0D4D0CFC898E6D01ACF84631C54EB1F4B542CE6EB4674C7D10331F1989B105A1B05FFE617E7766C4EE4D57AF8AA45F37A8206BF068AF2DBDE4A10EB59BDC7C4A3C07056CD07EFB1AC67983DA72E35AE6111D903C2A24735678AC1FE72A416FF8B9D9594E85D161182D38DF97E3CFD321BE33FE0970CB55FD7454EB28FC873111AD8E848EC7448BEDF5B168CB5F644E81644023D0FAC673CDD2D617CBFEF7857C9A35EBC1C363C68B53C2B946CC1889FBC28D0BAE4E410860611E697487C39E1258C593C2650FF3675EE7BCA47A54A115AA609D90C472F153AF7BCC3A1E151662ACE43A7A15CE34357D6C32FEA4B282F75DB688CB469D8C838D18C97917005B23845432C0529462C3E70C865DC9E60CE3B33CDB833785A6DD0B3EF174B7FB847ED6799CF801FC1F1279C714
9A5B2E8362175D5543FF7A6294B2EB25084035F0091A826C1786EEB47AD59E8501F3A371B99E547C94796DE6E8C2241664C101759509CC357A33F4BAFBC3A605DA67E26A66F9A9E625BA7280FDE979704750FCBB53036E04EB0C1B78E877E62388E9D9844245B9975AF16EEBDA3C4E8BD3F839CB9194D838E84CCBB7CCE3E05B1DEDF8A4474B447AC398863177B0F27929AFDB2FA37346D79B732D8E607FD5F955A82287950E218700A0553F9CD71FD1111A978FF3A54C6F9A99F9556B783F2B6538E7E96E399577836491DEFADF6D387E8D5939F23480D1D5C459A1F92B07A3334F4C67F74E872B9401AB95CD4420B64DD20873F80F557336A973C22473EB9C3802C44D2D8EE2E53255889F273990C043621D82AFD8DE8909E066C08A7F49D95CE2F9C5F6BD79
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 789 695 rc
0 695 m
789 695 l
789 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-4003 3036 m
6771 3036 l
6771 -3666 l
-4003 -3666 l
h
-4003 3036 m
f
9 w
1 J
0.60000002 i
0.755678 0.104096 0.142373 sc
1 0 0 -1 -3799 869 cm
4392.5 779.44019 m
4294 779.88489 l
S
0 i
1 1 1 sc
CM
706 61.200001 m
706 118.8 l
706 122.7744 722.12799 126 742 126 c
761.87201 126 778 122.7744 778 118.8 c
778 61.200001 l
778 57.225601 761.87201 54 742 54 c
722.12799 54 706 57.225601 706 61.200001 c
f
1 w
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4505 807.79999 m
4505 750.20001 l
4505 746.22559 4521.1279 743 4541 743 c
4560.8721 743 4577 746.22559 4577 750.20001 c
4577 807.79999 l
4577 811.77441 4560.8721 815 4541 815 c
4521.1279 815 4505 811.77441 4505 807.79999 c
4505 750.20001 m
4505 754.17438 4521.1279 757.40002 4541 757.40002 c
4560.8721 757.40002 4577 754.17438 4577 750.20001 c
S
0 i
0.91754699 0.99458098 0.86719602 sc
CM
607 126 m
697 126 l
697 90 l
607 90 l
h
607 126 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4406 743 m
4496 743 l
4496 779 l
4406 779 l
h
4406 743 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 19 0 0 -19 0 0]sf
4431.126 767 m
(!"#)[ 13.718000 12.312000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
607 90 m
697 90 l
697 54 l
607 54 l
h
607 90 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4406 779 m
4496 779 l
4496 815 l
4406 815 l
h
4406 779 m
S
/Cs1 SC
0 sc
0 i
4416.3252 803 m
($%$&'\()[ 16.207000 10.203000 16.207000 10.906000 6.327000 0.000000 ] xS
3 w
[
6
6
] 0 d
0.60000002 i
/Cs2 SC
0.0168042 0.198351 1 sc
4394 827 m
4586 827 l
4586 731 l
4394 731 l
h
4394 827 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
4399.1079 859 m
(\)'&*+,%*-.&'./%0-.*&-%)[ 9.184000 5.040000 9.184000 8.896000 5.040000 6.224000 8.592000 8.896000 9.488000 4.448000 9.184000 5.328000 4.448000 11.552000 8.592000 8.592000 9.488000 4.448000 8.896000 9.184000 9.488000 0.000000 ] xS
9 w
[] 0 d
0.60000002 i
/Cs2 SC
0.755678 0.104096 0.142373 sc
3812 715 m
3812 763 l
S
4028 691 m
4028 748 l
3860 748 l
3860 775 l
S
3818 213 m
3818 681 l
S
3818 213 m
3845.2727 213 l
S
3818 296.80048 m
3845.2727 296.80048 l
S
3819.5151 380.60095 m
3846.7878 380.60095 l
S
3821.0303 464.40143 m
3848.303 464.40143 l
S
3822.5454 548.2019 m
3849.8181 548.2019 l
S
3824.0605 632.00238 m
3851.3333 632.00238 l
S
0 i
1 1 1 sc
CM
133 629.20001 m
133 686.79999 l
133 690.77441 149.12801 694 169 694 c
188.87199 694 205 690.77441 205 686.79999 c
205 629.20001 l
205 625.22559 188.87199 622 169 622 c
149.12801 622 133 625.22559 133 629.20001 c
f
1 w
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
3932 239.8 m
3932 182.2 l
3932 178.2256 3948.1279 175 3968 175 c
3987.8721 175 4004 178.2256 4004 182.2 c
4004 239.8 l
4004 243.7744 3987.8721 247 3968 247 c
3948.1279 247 3932 243.7744 3932 239.8 c
3932 182.2 m
3932 186.17439 3948.1279 189.39999 3968 189.39999 c
3987.8721 189.39999 4004 186.17439 4004 182.2 c
S
0 i
0.91754699 0.99458098 0.86719602 sc
CM
34 694 m
124 694 l
124 658 l
34 658 l
h
34 694 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
3833 175 m
3923 175 l
3923 211 l
3833 211 l
h
3833 175 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 19 0 0 -19 0 0]sf
3858.126 199 m
(!"#)[ 13.718000 12.312000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
34 658 m
124 658 l
124 622 l
34 622 l
h
34 658 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
3833 211 m
3923 211 l
3923 247 l
3833 247 l
h
3833 211 m
S
/Cs1 SC
0 sc
0 i
3843.325 235 m
($%$&'\()[ 16.207000 10.203000 16.207000 10.906000 6.327000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
133 545.20001 m
133 602.79999 l
133 606.77441 149.12801 610 169 610 c
188.87199 610 205 606.77441 205 602.79999 c
205 545.20001 l
205 541.22559 188.87199 538 169 538 c
149.12801 538 133 541.22559 133 545.20001 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
3932 323.79999 m
3932 266.20001 l
3932 262.22559 3948.1279 259 3968 259 c
3987.8721 259 4004 262.22559 4004 266.20001 c
4004 323.79999 l
4004 327.77441 3987.8721 331 3968 331 c
3948.1279 331 3932 327.77441 3932 323.79999 c
3932 266.20001 m
3932 270.17441 3948.1279 273.39999 3968 273.39999 c
3987.8721 273.39999 4004 270.17441 4004 266.20001 c
S
0 i
0.91754699 0.99458098 0.86719602 sc
CM
34 610 m
124 610 l
124 574 l
34 574 l
h
34 610 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
3833 259 m
3923 259 l
3923 295 l
3833 295 l
h
3833 259 m
S
/Cs1 SC
0 sc
0 i
3858.126 283 m
(!"#)[ 13.718000 12.312000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
34 574 m
124 574 l
124 538 l
34 538 l
h
34 574 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
3833 295 m
3923 295 l
3923 331 l
3833 331 l
h
3833 295 m
S
/Cs1 SC
0 sc
0 i
3843.325 319 m
($%$&'\()[ 16.207000 10.203000 16.207000 10.906000 6.327000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
133 461.20001 m
133 518.79999 l
133 522.77441 149.12801 526 169 526 c
188.87199 526 205 522.77441 205 518.79999 c
205 461.20001 l
205 457.22559 188.87199 454 169 454 c
149.12801 454 133 457.22559 133 461.20001 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
3932 407.79999 m
3932 350.20001 l
3932 346.22559 3948.1279 343 3968 343 c
3987.8721 343 4004 346.22559 4004 350.20001 c
4004 407.79999 l
4004 411.77441 3987.8721 415 3968 415 c
3948.1279 415 3932 411.77441 3932 407.79999 c
3932 350.20001 m
3932 354.17441 3948.1279 357.39999 3968 357.39999 c
3987.8721 357.39999 4004 354.17441 4004 350.20001 c
S
0 i
0.91754699 0.99458098 0.86719602 sc
CM
34 526 m
124 526 l
124 490 l
34 490 l
h
34 526 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
3833 343 m
3923 343 l
3923 379 l
3833 379 l
h
3833 343 m
S
/Cs1 SC
0 sc
0 i
3858.126 367 m
(!"#)[ 13.718000 12.312000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
34 490 m
124 490 l
124 454 l
34 454 l
h
34 490 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
3833 379 m
3923 379 l
3923 415 l
3833 415 l
h
3833 379 m
S
/Cs1 SC
0 sc
0 i
3843.325 403 m
($%$&'\()[ 16.207000 10.203000 16.207000 10.906000 6.327000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
133 377.20001 m
133 434.79999 l
133 438.77441 149.12801 442 169 442 c
188.87199 442 205 438.77441 205 434.79999 c
205 377.20001 l
205 373.22559 188.87199 370 169 370 c
149.12801 370 133 373.22559 133 377.20001 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
3932 491.79999 m
3932 434.20001 l
3932 430.22559 3948.1279 427 3968 427 c
3987.8721 427 4004 430.22559 4004 434.20001 c
4004 491.79999 l
4004 495.77441 3987.8721 499 3968 499 c
3948.1279 499 3932 495.77441 3932 491.79999 c
3932 434.20001 m
3932 438.17441 3948.1279 441.39999 3968 441.39999 c
3987.8721 441.39999 4004 438.17441 4004 434.20001 c
S
0 i
0.91754699 0.99458098 0.86719602 sc
CM
34 442 m
124 442 l
124 406 l
34 406 l
h
34 442 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
3833 427 m
3923 427 l
3923 463 l
3833 463 l
h
3833 427 m
S
/Cs1 SC
0 sc
0 i
3858.126 451 m
(!"#)[ 13.718000 12.312000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
34 406 m
124 406 l
124 370 l
34 370 l
h
34 406 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
3833 463 m
3923 463 l
3923 499 l
3833 499 l
h
3833 463 m
S
/Cs1 SC
0 sc
0 i
3843.325 487 m
($%$&'\()[ 16.207000 10.203000 16.207000 10.906000 6.327000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
133 293.20001 m
133 350.79999 l
133 354.77441 149.12801 358 169 358 c
188.87199 358 205 354.77441 205 350.79999 c
205 293.20001 l
205 289.22559 188.87199 286 169 286 c
149.12801 286 133 289.22559 133 293.20001 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
3932 575.79999 m
3932 518.20001 l
3932 514.22559 3948.1279 511 3968 511 c
3987.8721 511 4004 514.22559 4004 518.20001 c
4004 575.79999 l
4004 579.77441 3987.8721 583 3968 583 c
3948.1279 583 3932 579.77441 3932 575.79999 c
3932 518.20001 m
3932 522.17438 3948.1279 525.40002 3968 525.40002 c
3987.8721 525.40002 4004 522.17438 4004 518.20001 c
S
0 i
0.91754699 0.99458098 0.86719602 sc
CM
34 358 m
124 358 l
124 322 l
34 322 l
h
34 358 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
3833 511 m
3923 511 l
3923 547 l
3833 547 l
h
3833 511 m
S
/Cs1 SC
0 sc
0 i
3858.126 535 m
(!"#)[ 13.718000 12.312000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
34 322 m
124 322 l
124 286 l
34 286 l
h
34 322 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
3833 547 m
3923 547 l
3923 583 l
3833 583 l
h
3833 547 m
S
/Cs1 SC
0 sc
0 i
3843.325 571 m
($%$&'\()[ 16.207000 10.203000 16.207000 10.906000 6.327000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
133 209.2 m
133 266.79999 l
133 270.77441 149.12801 274 169 274 c
188.87199 274 205 270.77441 205 266.79999 c
205 209.2 l
205 205.2256 188.87199 202 169 202 c
149.12801 202 133 205.2256 133 209.2 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
3932 659.79999 m
3932 602.20001 l
3932 598.22559 3948.1279 595 3968 595 c
3987.8721 595 4004 598.22559 4004 602.20001 c
4004 659.79999 l
4004 663.77441 3987.8721 667 3968 667 c
3948.1279 667 3932 663.77441 3932 659.79999 c
3932 602.20001 m
3932 606.17438 3948.1279 609.40002 3968 609.40002 c
3987.8721 609.40002 4004 606.17438 4004 602.20001 c
S
0 i
0.91754699 0.99458098 0.86719602 sc
CM
34 274 m
124 274 l
124 238 l
34 238 l
h
34 274 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
3833 595 m
3923 595 l
3923 631 l
3833 631 l
h
3833 595 m
S
/Cs1 SC
0 sc
0 i
3858.126 619 m
(!"#)[ 13.718000 12.312000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
34 238 m
124 238 l
124 202 l
34 202 l
h
34 238 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
3833 631 m
3923 631 l
3923 667 l
3833 667 l
h
3833 631 m
S
/Cs1 SC
0 sc
0 i
3843.325 655 m
($%$&'\()[ 16.207000 10.203000 16.207000 10.906000 6.327000 0.000000 ] xS
/Cs2 SC
0.993788 0.83497697 0.86991799 sc
CM
1 190 m
133 190 l
133 154 l
1 154 l
h
1 190 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
3800 679 m
3932 679 l
3932 715 l
3800 715 l
h
3800 679 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 24 0 0 -24 0 0]sf
3831.344 705.5 m
(123+45)[ 12.000000 18.192000 5.328000 7.560000 12.888000 0.000000 ] xS
9 w
0.60000002 i
/Cs2 SC
0.755678 0.104096 0.142373 sc
4034 213 m
4034 681 l
S
4034 213 m
4061.2727 213 l
S
4034 296.80048 m
4061.2727 296.80048 l
S
4035.5151 380.60095 m
4062.7878 380.60095 l
S
4037.0303 464.40143 m
4064.303 464.40143 l
S
4038.5454 548.2019 m
4065.8181 548.2019 l
S
4040.0605 632.00238 m
4067.3333 632.00238 l
S
0 i
1 1 1 sc
CM
349 629.20001 m
349 686.79999 l
349 690.77441 365.12799 694 385 694 c
404.87201 694 421 690.77441 421 686.79999 c
421 629.20001 l
421 625.22559 404.87201 622 385 622 c
365.12799 622 349 625.22559 349 629.20001 c
f
1 w
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4148 239.8 m
4148 182.2 l
4148 178.2256 4164.1279 175 4184 175 c
4203.8721 175 4220 178.2256 4220 182.2 c
4220 239.8 l
4220 243.7744 4203.8721 247 4184 247 c
4164.1279 247 4148 243.7744 4148 239.8 c
4148 182.2 m
4148 186.17439 4164.1279 189.39999 4184 189.39999 c
4203.8721 189.39999 4220 186.17439 4220 182.2 c
S
0 i
0.91754699 0.99458098 0.86719602 sc
CM
250 694 m
340 694 l
340 658 l
250 658 l
h
250 694 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4049 175 m
4139 175 l
4139 211 l
4049 211 l
h
4049 175 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 19 0 0 -19 0 0]sf
4074.126 199 m
(!"#)[ 13.718000 12.312000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
250 658 m
340 658 l
340 622 l
250 622 l
h
250 658 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4049 211 m
4139 211 l
4139 247 l
4049 247 l
h
4049 211 m
S
/Cs1 SC
0 sc
0 i
4059.325 235 m
($%$&'\()[ 16.207000 10.203000 16.207000 10.906000 6.327000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
349 545.20001 m
349 602.79999 l
349 606.77441 365.12799 610 385 610 c
404.87201 610 421 606.77441 421 602.79999 c
421 545.20001 l
421 541.22559 404.87201 538 385 538 c
365.12799 538 349 541.22559 349 545.20001 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4148 323.79999 m
4148 266.20001 l
4148 262.22559 4164.1279 259 4184 259 c
4203.8721 259 4220 262.22559 4220 266.20001 c
4220 323.79999 l
4220 327.77441 4203.8721 331 4184 331 c
4164.1279 331 4148 327.77441 4148 323.79999 c
4148 266.20001 m
4148 270.17441 4164.1279 273.39999 4184 273.39999 c
4203.8721 273.39999 4220 270.17441 4220 266.20001 c
S
0 i
0.91754699 0.99458098 0.86719602 sc
CM
250 610 m
340 610 l
340 574 l
250 574 l
h
250 610 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4049 259 m
4139 259 l
4139 295 l
4049 295 l
h
4049 259 m
S
/Cs1 SC
0 sc
0 i
4074.126 283 m
(!"#)[ 13.718000 12.312000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
250 574 m
340 574 l
340 538 l
250 538 l
h
250 574 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4049 295 m
4139 295 l
4139 331 l
4049 331 l
h
4049 295 m
S
/Cs1 SC
0 sc
0 i
4059.325 319 m
($%$&'\()[ 16.207000 10.203000 16.207000 10.906000 6.327000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
349 461.20001 m
349 518.79999 l
349 522.77441 365.12799 526 385 526 c
404.87201 526 421 522.77441 421 518.79999 c
421 461.20001 l
421 457.22559 404.87201 454 385 454 c
365.12799 454 349 457.22559 349 461.20001 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4148 407.79999 m
4148 350.20001 l
4148 346.22559 4164.1279 343 4184 343 c
4203.8721 343 4220 346.22559 4220 350.20001 c
4220 407.79999 l
4220 411.77441 4203.8721 415 4184 415 c
4164.1279 415 4148 411.77441 4148 407.79999 c
4148 350.20001 m
4148 354.17441 4164.1279 357.39999 4184 357.39999 c
4203.8721 357.39999 4220 354.17441 4220 350.20001 c
S
0 i
0.91754699 0.99458098 0.86719602 sc
CM
250 526 m
340 526 l
340 490 l
250 490 l
h
250 526 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4049 343 m
4139 343 l
4139 379 l
4049 379 l
h
4049 343 m
S
/Cs1 SC
0 sc
0 i
4074.126 367 m
(!"#)[ 13.718000 12.312000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
250 490 m
340 490 l
340 454 l
250 454 l
h
250 490 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4049 379 m
4139 379 l
4139 415 l
4049 415 l
h
4049 379 m
S
/Cs1 SC
0 sc
0 i
4059.325 403 m
($%$&'\()[ 16.207000 10.203000 16.207000 10.906000 6.327000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
349 377.20001 m
349 434.79999 l
349 438.77441 365.12799 442 385 442 c
404.87201 442 421 438.77441 421 434.79999 c
421 377.20001 l
421 373.22559 404.87201 370 385 370 c
365.12799 370 349 373.22559 349 377.20001 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4148 491.79999 m
4148 434.20001 l
4148 430.22559 4164.1279 427 4184 427 c
4203.8721 427 4220 430.22559 4220 434.20001 c
4220 491.79999 l
4220 495.77441 4203.8721 499 4184 499 c
4164.1279 499 4148 495.77441 4148 491.79999 c
4148 434.20001 m
4148 438.17441 4164.1279 441.39999 4184 441.39999 c
4203.8721 441.39999 4220 438.17441 4220 434.20001 c
S
0 i
0.91754699 0.99458098 0.86719602 sc
CM
250 442 m
340 442 l
340 406 l
250 406 l
h
250 442 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4049 427 m
4139 427 l
4139 463 l
4049 463 l
h
4049 427 m
S
/Cs1 SC
0 sc
0 i
4074.126 451 m
(!"#)[ 13.718000 12.312000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
250 406 m
340 406 l
340 370 l
250 370 l
h
250 406 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4049 463 m
4139 463 l
4139 499 l
4049 499 l
h
4049 463 m
S
/Cs1 SC
0 sc
0 i
4059.325 487 m
($%$&'\()[ 16.207000 10.203000 16.207000 10.906000 6.327000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
349 293.20001 m
349 350.79999 l
349 354.77441 365.12799 358 385 358 c
404.87201 358 421 354.77441 421 350.79999 c
421 293.20001 l
421 289.22559 404.87201 286 385 286 c
365.12799 286 349 289.22559 349 293.20001 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4148 575.79999 m
4148 518.20001 l
4148 514.22559 4164.1279 511 4184 511 c
4203.8721 511 4220 514.22559 4220 518.20001 c
4220 575.79999 l
4220 579.77441 4203.8721 583 4184 583 c
4164.1279 583 4148 579.77441 4148 575.79999 c
4148 518.20001 m
4148 522.17438 4164.1279 525.40002 4184 525.40002 c
4203.8721 525.40002 4220 522.17438 4220 518.20001 c
S
0 i
0.91754699 0.99458098 0.86719602 sc
CM
250 358 m
340 358 l
340 322 l
250 322 l
h
250 358 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4049 511 m
4139 511 l
4139 547 l
4049 547 l
h
4049 511 m
S
/Cs1 SC
0 sc
0 i
4074.126 535 m
(!"#)[ 13.718000 12.312000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
250 322 m
340 322 l
340 286 l
250 286 l
h
250 322 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4049 547 m
4139 547 l
4139 583 l
4049 583 l
h
4049 547 m
S
/Cs1 SC
0 sc
0 i
4059.325 571 m
($%$&'\()[ 16.207000 10.203000 16.207000 10.906000 6.327000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
349 209.2 m
349 266.79999 l
349 270.77441 365.12799 274 385 274 c
404.87201 274 421 270.77441 421 266.79999 c
421 209.2 l
421 205.2256 404.87201 202 385 202 c
365.12799 202 349 205.2256 349 209.2 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4148 659.79999 m
4148 602.20001 l
4148 598.22559 4164.1279 595 4184 595 c
4203.8721 595 4220 598.22559 4220 602.20001 c
4220 659.79999 l
4220 663.77441 4203.8721 667 4184 667 c
4164.1279 667 4148 663.77441 4148 659.79999 c
4148 602.20001 m
4148 606.17438 4164.1279 609.40002 4184 609.40002 c
4203.8721 609.40002 4220 606.17438 4220 602.20001 c
S
0 i
0.91754699 0.99458098 0.86719602 sc
CM
250 274 m
340 274 l
340 238 l
250 238 l
h
250 274 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4049 595 m
4139 595 l
4139 631 l
4049 631 l
h
4049 595 m
S
/Cs1 SC
0 sc
0 i
4074.126 619 m
(!"#)[ 13.718000 12.312000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
250 238 m
340 238 l
340 202 l
250 202 l
h
250 238 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4049 631 m
4139 631 l
4139 667 l
4049 667 l
h
4049 631 m
S
/Cs1 SC
0 sc
0 i
4059.325 655 m
($%$&'\()[ 16.207000 10.203000 16.207000 10.906000 6.327000 0.000000 ] xS
9 w
0.60000002 i
/Cs2 SC
0.755678 0.104096 0.142373 sc
4237 211 m
4237 679 l
S
4237 211 m
4264.2729 211 l
S
4237 294.80048 m
4264.2729 294.80048 l
S
4238.5151 378.60095 m
4265.7881 378.60095 l
S
4240.0303 462.40143 m
4267.3032 462.40143 l
S
4241.5454 546.2019 m
4268.8184 546.2019 l
S
4243.0605 630.00238 m
4270.3335 630.00238 l
S
0 i
1 1 1 sc
CM
558 629.20001 m
558 686.79999 l
558 690.77441 574.12799 694 594 694 c
613.87201 694 630 690.77441 630 686.79999 c
630 629.20001 l
630 625.22559 613.87201 622 594 622 c
574.12799 622 558 625.22559 558 629.20001 c
f
1 w
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4357 239.8 m
4357 182.2 l
4357 178.2256 4373.1279 175 4393 175 c
4412.8721 175 4429 178.2256 4429 182.2 c
4429 239.8 l
4429 243.7744 4412.8721 247 4393 247 c
4373.1279 247 4357 243.7744 4357 239.8 c
4357 182.2 m
4357 186.17439 4373.1279 189.39999 4393 189.39999 c
4412.8721 189.39999 4429 186.17439 4429 182.2 c
S
0 i
0.91754699 0.99458098 0.86719602 sc
CM
459 694 m
549 694 l
549 658 l
459 658 l
h
459 694 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4258 175 m
4348 175 l
4348 211 l
4258 211 l
h
4258 175 m
S
/Cs1 SC
0 sc
0 i
4283.126 199 m
(!"#)[ 13.718000 12.312000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
459 658 m
549 658 l
549 622 l
459 622 l
h
459 658 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4258 211 m
4348 211 l
4348 247 l
4258 247 l
h
4258 211 m
S
/Cs1 SC
0 sc
0 i
4268.3252 235 m
($%$&'\()[ 16.207000 10.203000 16.207000 10.906000 6.327000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
558 545.20001 m
558 602.79999 l
558 606.77441 574.12799 610 594 610 c
613.87201 610 630 606.77441 630 602.79999 c
630 545.20001 l
630 541.22559 613.87201 538 594 538 c
574.12799 538 558 541.22559 558 545.20001 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4357 323.79999 m
4357 266.20001 l
4357 262.22559 4373.1279 259 4393 259 c
4412.8721 259 4429 262.22559 4429 266.20001 c
4429 323.79999 l
4429 327.77441 4412.8721 331 4393 331 c
4373.1279 331 4357 327.77441 4357 323.79999 c
4357 266.20001 m
4357 270.17441 4373.1279 273.39999 4393 273.39999 c
4412.8721 273.39999 4429 270.17441 4429 266.20001 c
S
0 i
0.91754699 0.99458098 0.86719602 sc
CM
459 610 m
549 610 l
549 574 l
459 574 l
h
459 610 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4258 259 m
4348 259 l
4348 295 l
4258 295 l
h
4258 259 m
S
/Cs1 SC
0 sc
0 i
4283.126 283 m
(!"#)[ 13.718000 12.312000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
459 574 m
549 574 l
549 538 l
459 538 l
h
459 574 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4258 295 m
4348 295 l
4348 331 l
4258 331 l
h
4258 295 m
S
/Cs1 SC
0 sc
0 i
4268.3252 319 m
($%$&'\()[ 16.207000 10.203000 16.207000 10.906000 6.327000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
558 461.20001 m
558 518.79999 l
558 522.77441 574.12799 526 594 526 c
613.87201 526 630 522.77441 630 518.79999 c
630 461.20001 l
630 457.22559 613.87201 454 594 454 c
574.12799 454 558 457.22559 558 461.20001 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4357 407.79999 m
4357 350.20001 l
4357 346.22559 4373.1279 343 4393 343 c
4412.8721 343 4429 346.22559 4429 350.20001 c
4429 407.79999 l
4429 411.77441 4412.8721 415 4393 415 c
4373.1279 415 4357 411.77441 4357 407.79999 c
4357 350.20001 m
4357 354.17441 4373.1279 357.39999 4393 357.39999 c
4412.8721 357.39999 4429 354.17441 4429 350.20001 c
S
0 i
0.91754699 0.99458098 0.86719602 sc
CM
459 526 m
549 526 l
549 490 l
459 490 l
h
459 526 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4258 343 m
4348 343 l
4348 379 l
4258 379 l
h
4258 343 m
S
/Cs1 SC
0 sc
0 i
4283.126 367 m
(!"#)[ 13.718000 12.312000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
459 490 m
549 490 l
549 454 l
459 454 l
h
459 490 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4258 379 m
4348 379 l
4348 415 l
4258 415 l
h
4258 379 m
S
/Cs1 SC
0 sc
0 i
4268.3252 403 m
($%$&'\()[ 16.207000 10.203000 16.207000 10.906000 6.327000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
558 377.20001 m
558 434.79999 l
558 438.77441 574.12799 442 594 442 c
613.87201 442 630 438.77441 630 434.79999 c
630 377.20001 l
630 373.22559 613.87201 370 594 370 c
574.12799 370 558 373.22559 558 377.20001 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4357 491.79999 m
4357 434.20001 l
4357 430.22559 4373.1279 427 4393 427 c
4412.8721 427 4429 430.22559 4429 434.20001 c
4429 491.79999 l
4429 495.77441 4412.8721 499 4393 499 c
4373.1279 499 4357 495.77441 4357 491.79999 c
4357 434.20001 m
4357 438.17441 4373.1279 441.39999 4393 441.39999 c
4412.8721 441.39999 4429 438.17441 4429 434.20001 c
S
0 i
0.91754699 0.99458098 0.86719602 sc
CM
459 442 m
549 442 l
549 406 l
459 406 l
h
459 442 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4258 427 m
4348 427 l
4348 463 l
4258 463 l
h
4258 427 m
S
/Cs1 SC
0 sc
0 i
4283.126 451 m
(!"#)[ 13.718000 12.312000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
459 406 m
549 406 l
549 370 l
459 370 l
h
459 406 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4258 463 m
4348 463 l
4348 499 l
4258 499 l
h
4258 463 m
S
/Cs1 SC
0 sc
0 i
4268.3252 487 m
($%$&'\()[ 16.207000 10.203000 16.207000 10.906000 6.327000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
558 293.20001 m
558 350.79999 l
558 354.77441 574.12799 358 594 358 c
613.87201 358 630 354.77441 630 350.79999 c
630 293.20001 l
630 289.22559 613.87201 286 594 286 c
574.12799 286 558 289.22559 558 293.20001 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4357 575.79999 m
4357 518.20001 l
4357 514.22559 4373.1279 511 4393 511 c
4412.8721 511 4429 514.22559 4429 518.20001 c
4429 575.79999 l
4429 579.77441 4412.8721 583 4393 583 c
4373.1279 583 4357 579.77441 4357 575.79999 c
4357 518.20001 m
4357 522.17438 4373.1279 525.40002 4393 525.40002 c
4412.8721 525.40002 4429 522.17438 4429 518.20001 c
S
0 i
0.91754699 0.99458098 0.86719602 sc
CM
459 358 m
549 358 l
549 322 l
459 322 l
h
459 358 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4258 511 m
4348 511 l
4348 547 l
4258 547 l
h
4258 511 m
S
/Cs1 SC
0 sc
0 i
4283.126 535 m
(!"#)[ 13.718000 12.312000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
459 322 m
549 322 l
549 286 l
459 286 l
h
459 322 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4258 547 m
4348 547 l
4348 583 l
4258 583 l
h
4258 547 m
S
/Cs1 SC
0 sc
0 i
4268.3252 571 m
($%$&'\()[ 16.207000 10.203000 16.207000 10.906000 6.327000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
558 209.2 m
558 266.79999 l
558 270.77441 574.12799 274 594 274 c
613.87201 274 630 270.77441 630 266.79999 c
630 209.2 l
630 205.2256 613.87201 202 594 202 c
574.12799 202 558 205.2256 558 209.2 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4357 659.79999 m
4357 602.20001 l
4357 598.22559 4373.1279 595 4393 595 c
4412.8721 595 4429 598.22559 4429 602.20001 c
4429 659.79999 l
4429 663.77441 4412.8721 667 4393 667 c
4373.1279 667 4357 663.77441 4357 659.79999 c
4357 602.20001 m
4357 606.17438 4373.1279 609.40002 4393 609.40002 c
4412.8721 609.40002 4429 606.17438 4429 602.20001 c
S
0 i
0.91754699 0.99458098 0.86719602 sc
CM
459 274 m
549 274 l
549 238 l
459 238 l
h
459 274 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4258 595 m
4348 595 l
4348 631 l
4258 631 l
h
4258 595 m
S
/Cs1 SC
0 sc
0 i
4283.126 619 m
(!"#)[ 13.718000 12.312000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
459 238 m
549 238 l
549 202 l
459 202 l
h
459 238 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4258 631 m
4348 631 l
4348 667 l
4258 667 l
h
4258 631 m
S
/Cs1 SC
0 sc
0 i
4268.3252 655 m
($%$&'\()[ 16.207000 10.203000 16.207000 10.906000 6.327000 0.000000 ] xS
/Cs2 SC
0.993788 0.83497697 0.86991799 sc
CM
217 190 m
349 190 l
349 154 l
217 154 l
h
217 190 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4016 679 m
4148 679 l
4148 715 l
4016 715 l
h
4016 679 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 24 0 0 -24 0 0]sf
4047.344 705.5 m
(123+45)[ 12.000000 18.192000 5.328000 7.560000 12.888000 0.000000 ] xS
9 w
0 j
0.60000002 i
/Cs2 SC
0.755678 0.104096 0.142373 sc
4282 715 m
4282 748 l
4047 748 l
4047 763 l
S
0 i
0.993788 0.83497697 0.86991799 sc
CM
417 190 m
549 190 l
549 154 l
417 154 l
h
417 190 m
f
1 w
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
4216 679 m
4348 679 l
4348 715 l
4216 715 l
h
4216 679 m
S
/Cs1 SC
0 sc
0 i
4247.3442 705.5 m
(123+45)[ 12.000000 18.192000 5.328000 7.560000 12.888000 0.000000 ] xS
/Cs2 SC
0.993788 0.83497697 0.86991799 sc
CM
1 106 m
495 106 l
495 70 l
1 70 l
h
1 106 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -3799 869 cm
3800 763 m
4294 763 l
4294 799 l
3800 799 l
h
3800 763 m
S
/Cs1 SC
0 sc
0 i
3978.9121 789.5 m
(60'7%'.123+45)[ 5.328000 12.888000 7.320000 13.776000 12.888000 7.992000 6.672000 12.000000 18.192000 5.328000 7.560000 12.888000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
