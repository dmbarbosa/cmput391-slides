%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1001.000000 326.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.6 (Build 17G4015) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1001 326
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1001 326
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /C put
dup 34 /P put
dup 35 /U put
dup 36 /m put
dup 37 /e put
dup 38 /o put
dup 39 /r put
dup 40 /y put
dup 41 /s put
dup 42 /t put
dup 43 /a put
dup 44 /g put
dup 45 /space put
dup 46 /v put
dup 47 /f put
dup 48 /n put
dup 49 /d put
dup 50 /h put
dup 51 /i put
dup 52 /p put
dup 53 /w put
dup 54 /k put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<






022C0040023E002402510043014D003D01F4001F013B000901F4000E02F6001101F4000804BE003700000048004800B6011E0154025E02FC036403B0046204B404DE051005AA05F20692072A075807FC084E086E08A80912094800000001000000180096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 24 dict dup begin
/.notdef 0 def
/space 1 def
/C 2 def
/P 3 def
/U 4 def
/a 5 def
/d 6 def
/e 7 def
/f 8 def
/g 9 def
/h 10 def
/i 11 def
/k 12 def
/m 13 def
/n 14 def
/o 15 def
/p 16 def
/r 17 def
/s 18 def
/t 19 def
/v 20 def
/w 21 def
/y 22 def
/uni2B91 23 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9266A63CD4C2DA03F4BF340963A027151A3FDA461900D733520630E1DE7C831E4FD8BFC3BD33F746B2D974C862F787397FEFEF04D7E72EB5E7AAC15D14D9EEB5E15B6F809FF21E17EE434B309CA74C1899048FB02F48160E4DEBFA4B041A27E80D28FB03DA54E56B61CE771308B258E1998127F7764B2AD5A9286A39ED56AE258E343D6B0AFC20FB2931E1BBE00B89BF22A59300555486E76F764782C4C7DD756E70D54B31888B2FA18A5B5823FC823E565E9B2FAC37941E8D9BC3A868C5B720461F4C2DF661F5073AB1D0F7F0D2D16C5E8918E24B4E9D0D601D514068FD7825210CA30000800A6988479CCBA35AF8A91C2B09CB37797C1CE74182E8924B80682E095E8DEC0A02B8586C0614918AE081F1198C38D79F9C623658E1FB46BDF48677D30ECDEF5332CD8064313D31C30D21FCEBFAFAAB8E88E8FED403378DA899D04DDA4428B95506D0A562D17C1C878305D828878913BC645341295E6FBE20596188F03F6FC7F1C4B3FF0349BA1BA587FA5BF0D64FE9B03C4A1DA93CB94105BEE3D1EB453FE06EFEF7F9F2B7F96164AEEAD351DFF2F6A039DBBE0C89416B08127D36D244B2C053A147D768173680B50474CCE18BDA6C45840BBE25B61A97A19D958D4F4AA2FA148248D20EA50B246032E841BB7479F0A611F93335DE5431F6130179A894890D13A364965181807D369D54E8F47C36228E7415F81ECB2E557B80828A3F892BA614A83136976A180D38239DA5DA30A49469BB03A1E06A9F0DE4790C40

8B39043B504540D6CDC0DBA2278973AEBAEB2F5BDC76A9FDB8C33BD0142B8A8E173ADD0BA020CE61A15A62B66AF47CA712828EF9C459A8F2FABC86C875CC7F6F774B05C5D942991CE41F908E2FCA9B06CDC6B6A9CF7EFC05396322EB9E6DC292F8B0FA77249777642444622F1D47CBDD234274C274C5FD7DD5404068036ADB07B1464EF512E1B3199BBEBE9BD37538188FE31185693153AF34573B4C51544A260BAEFED083546CFEFF54354AF58611206566DFBB933317327A29C4366E2098F3F997763D080EDEB58A25F1A135C2C1F7EE60A59A800C5B52BAF1CF6BDD74C0ED7C2BFF4E7B7E6AD7B22F1A41EEC047864C223A9B596DB829F271AC83388C47E343F4B6605977FD83536B7905CE4224BAC0712D0351D55B611574CA1953065AC3B928BCD19A5B19BC84A663B3F42CA40538AA40B1036C07C6609C4207B0D69D52AF4B26AD839769A5A8E0C53B04E253240918CA7B2F1573DB630FEF40188BC4E2045935847859740324A5231BEF27CACD5096450DD8F12A60C71198113D8FF518772DDC60224131B5C5085D597B4B4D6673B567AC6EBB20A0F5A9C6BC04AD4763EE67BC56D0308B6F7502A143DB7DBC3A26C6B26E1F2C94345D31B0DF36A8EA2E0DA74656002CB6A0D28C50B6CDD9E3C9731260F8095BF5557C4C4D0EED4B3E210EFB66D2B0CC646C1B9E69668DC588FC359DD822DB929186E03DFAD56AC9A426E3C012E11068F8280D8F5D845D6D7DE0ACC4372E5A22AB9AD780B1EB2C07B82B544CDBAC05A4D28D443BDF145ADDF5CCEAB8AEB486BDF59C4BD7B867AA40B2E1F06FCA5507ECA463ED1AC6CAA85CE699356C1D76A4F2B01A3FF2542C2003BDB2C032B620C84AD00CFB8CB36F77ED1BB40BACDE23E74DE18B8D0910E3E371C4D5203BB7A6CD22F8E306150F3C32FD88DA0075AED49B2283BF4E7DB5159F750D6A86E9EC35A43CFFCBE844D4DF980B28D661AFF33E94D38DBD3A5C6F3B7548393C2DCE551BDBEE57EA587F42725E9E28DB304EBA8300CFF0A092CB23FDEB8CE67C4E718547622ED7C48806F791915B25ABF3A31008635736E5D8D48C3D752757DA2BB6DBA76CC8BED180BDDDDFDAA1072C8CD9AF6CFEA379FAF5E9D7B618322E6A3E5372E843F22BC2772A571531FD82FA1CB122A30A1FFD962B949E5C1E758F6DA06AC19385A408C10460EC6A65D7215CC910F2F931BE6845A81B69D4D00DC58C87D1424125D45EC8FAEECE1A90E4F9124C02467704F4F69CA2677FC92B3F1466A8E7E988A8C849F2C529C0B8D90156C8B12CECF57360AA9AFDDFB3E3ADE2C621D02A7104B1D4BB53E96FF060ECC8C7640E093C9F5F8DBB654C6AA23BBD8435B09C023DF252CFAA08A2F8B9F3BEDBB3807D829B55ED190DE535EFA16A2C957057146F852DE7D22C14A556B86241F39B2C0DE6BDD5ED4B4F383CB73EFBF4C3790B

8C7AEAD37DC6E1CBC246D0FCADCF58AA8C3926ACCD42A253B3D422A6F9AFC88A70BCDA4FF957A941DAE20C1D710695868763E5A55025189738BE293C0788BA2EF18BDCBE3BB46D71318A74A416687E3342D832EF9D25D23C7389F81D8356273CA0543D36FA09F8D845D6D7B05AB025180CC045D25F2144FD27F79D4B7C0E3E37ACF5DCE5CE97F6CFEC1A2EB0FB3E66E3EA1674D8F27DA06B14ED3144ECEF0BBE91270C83FC728E431CD85CB9068A6D056E8C00C585E8E74D37B571B8C8BB7D024817FE89EF60AECB597BA4FAFDBA4F8E49DD47FFF7CEE173B2D4BA9A60675DD5F4EC99C18663D3C1006ED6ECD867DCF9BEE581DA76EB132C1BACDC4D243DB1E1F56EE78937BD7D97357A60C7F8E71C51CA572D73B6EFBA4F62ACB24D982F0B9A7B87A978FBD27092201D80C0BC4E95EECE9B1F26A0AEEAB5A9DD0DD90DE5800CB0B2EBD44BA3361BF93051947E7857AF8A45E8C010E7C85C676F7FB05A75B7D6A5E0745308C7E1935CE6A7EBE22A23A5BC68F3B97DDBB0952E11
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 1001 326 rc
0 326 m
1001 326 l
1001 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-4853 3617 m
5921 3617 l
5921 -3085 l
-4853 -3085 l
h
-4853 3617 m
f
9 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
5116 1299.4 m
5058 1298.0081 l
S
5241 1400 m
5184 1400 l
5184 1300 l
5166 1300 l
S
0.755678 0.104096 0.142373 sc
4698 1219 m
4698 1399 l
S
4805.5 1219 m
4805.5 1399 l
S
4913.0864 1219 m
4913.0864 1399 l
S
4722 1219 m
4986 1219 l
S
4722 1303 m
4986 1303 l
S
4722 1386 m
4986 1386 l
S
0 i
0.91754699 0.99458098 0.86719602 sc
CM
1 267 m
97.827583 267 l
97.827583 231 l
1 231 l
h
1 267 m
f
1 w
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
4650 1183 m
4746.8276 1183 l
4746.8276 1219 l
4650 1219 l
h
4650 1183 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 18 0 0 -18 0 0]sf
4679.5859 1207 m
(!"#)[ 12.996000 11.664000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
1 231 m
97.827583 231 l
97.827583 195 l
1 195 l
h
1 231 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
4650 1219 m
4746.8276 1219 l
4746.8276 1255 l
4650 1255 l
h
4650 1219 m
S
/Cs1 SC
0 sc
0 i
4665.564 1243 m
($%$&'\()[ 15.354000 9.666000 15.354000 10.332000 5.994000 0.000000 ] xS
/Cs2 SC
0.91754699 0.99458098 0.86719602 sc
CM
108.5862 267 m
205.41379 267 l
205.41379 231 l
108.5862 231 l
h
108.5862 267 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
4757.5864 1183 m
4854.4136 1183 l
4854.4136 1219 l
4757.5864 1219 l
h
4757.5864 1183 m
S
/Cs1 SC
0 sc
0 i
4787.1719 1207 m
(!"#)[ 12.996000 11.664000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
108.5862 231 m
205.41379 231 l
205.41379 195 l
108.5862 195 l
h
108.5862 231 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
4757.5864 1219 m
4854.4136 1219 l
4854.4136 1255 l
4757.5864 1255 l
h
4757.5864 1219 m
S
/Cs1 SC
0 sc
0 i
4773.1499 1243 m
($%$&'\()[ 15.354000 9.666000 15.354000 10.332000 5.994000 0.000000 ] xS
/Cs2 SC
0.91754699 0.99458098 0.86719602 sc
CM
216.17241 267 m
313 267 l
313 231 l
216.17241 231 l
h
216.17241 267 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
4865.1724 1183 m
4962 1183 l
4962 1219 l
4865.1724 1219 l
h
4865.1724 1183 m
S
/Cs1 SC
0 sc
0 i
4894.7583 1207 m
(!"#)[ 12.996000 11.664000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
216.17241 231 m
313 231 l
313 195 l
216.17241 195 l
h
216.17241 231 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
4865.1724 1219 m
4962 1219 l
4962 1255 l
4865.1724 1255 l
h
4865.1724 1219 m
S
/Cs1 SC
0 sc
0 i
4880.7363 1243 m
($%$&'\()[ 15.354000 9.666000 15.354000 10.332000 5.994000 0.000000 ] xS
/Cs2 SC
0.91754699 0.99458098 0.86719602 sc
CM
1 183 m
97.827583 183 l
97.827583 147 l
1 147 l
h
1 183 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
4650 1267 m
4746.8276 1267 l
4746.8276 1303 l
4650 1303 l
h
4650 1267 m
S
/Cs1 SC
0 sc
0 i
4679.5859 1291 m
(!"#)[ 12.996000 11.664000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
1 147 m
97.827583 147 l
97.827583 111 l
1 111 l
h
1 147 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
4650 1303 m
4746.8276 1303 l
4746.8276 1339 l
4650 1339 l
h
4650 1303 m
S
/Cs1 SC
0 sc
0 i
4665.564 1327 m
($%$&'\()[ 15.354000 9.666000 15.354000 10.332000 5.994000 0.000000 ] xS
/Cs2 SC
0.91754699 0.99458098 0.86719602 sc
CM
108.5862 183 m
205.41379 183 l
205.41379 147 l
108.5862 147 l
h
108.5862 183 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
4757.5864 1267 m
4854.4136 1267 l
4854.4136 1303 l
4757.5864 1303 l
h
4757.5864 1267 m
S
/Cs1 SC
0 sc
0 i
4787.1719 1291 m
(!"#)[ 12.996000 11.664000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
108.5862 147 m
205.41379 147 l
205.41379 111 l
108.5862 111 l
h
108.5862 147 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
4757.5864 1303 m
4854.4136 1303 l
4854.4136 1339 l
4757.5864 1339 l
h
4757.5864 1303 m
S
/Cs1 SC
0 sc
0 i
4773.1499 1327 m
($%$&'\()[ 15.354000 9.666000 15.354000 10.332000 5.994000 0.000000 ] xS
/Cs2 SC
0.91754699 0.99458098 0.86719602 sc
CM
216.17241 183 m
313 183 l
313 147 l
216.17241 147 l
h
216.17241 183 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
4865.1724 1267 m
4962 1267 l
4962 1303 l
4865.1724 1303 l
h
4865.1724 1267 m
S
/Cs1 SC
0 sc
0 i
4894.7583 1291 m
(!"#)[ 12.996000 11.664000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
216.17241 147 m
313 147 l
313 111 l
216.17241 111 l
h
216.17241 147 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
4865.1724 1303 m
4962 1303 l
4962 1339 l
4865.1724 1339 l
h
4865.1724 1303 m
S
/Cs1 SC
0 sc
0 i
4880.7363 1327 m
($%$&'\()[ 15.354000 9.666000 15.354000 10.332000 5.994000 0.000000 ] xS
/Cs2 SC
0.91754699 0.99458098 0.86719602 sc
CM
1 99 m
97.827583 99 l
97.827583 63 l
1 63 l
h
1 99 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
4650 1351 m
4746.8276 1351 l
4746.8276 1387 l
4650 1387 l
h
4650 1351 m
S
/Cs1 SC
0 sc
0 i
4679.5859 1375 m
(!"#)[ 12.996000 11.664000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
1 63 m
97.827583 63 l
97.827583 27 l
1 27 l
h
1 63 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
4650 1387 m
4746.8276 1387 l
4746.8276 1423 l
4650 1423 l
h
4650 1387 m
S
/Cs1 SC
0 sc
0 i
4665.564 1411 m
($%$&'\()[ 15.354000 9.666000 15.354000 10.332000 5.994000 0.000000 ] xS
/Cs2 SC
0.91754699 0.99458098 0.86719602 sc
CM
108.5862 99 m
205.41379 99 l
205.41379 63 l
108.5862 63 l
h
108.5862 99 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
4757.5864 1351 m
4854.4136 1351 l
4854.4136 1387 l
4757.5864 1387 l
h
4757.5864 1351 m
S
/Cs1 SC
0 sc
0 i
4787.1719 1375 m
(!"#)[ 12.996000 11.664000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
108.5862 63 m
205.41379 63 l
205.41379 27 l
108.5862 27 l
h
108.5862 63 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
4757.5864 1387 m
4854.4136 1387 l
4854.4136 1423 l
4757.5864 1423 l
h
4757.5864 1387 m
S
/Cs1 SC
0 sc
0 i
4773.1499 1411 m
($%$&'\()[ 15.354000 9.666000 15.354000 10.332000 5.994000 0.000000 ] xS
/Cs2 SC
0.91754699 0.99458098 0.86719602 sc
CM
216.17241 99 m
313 99 l
313 63 l
216.17241 63 l
h
216.17241 99 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
4865.1724 1351 m
4962 1351 l
4962 1387 l
4865.1724 1387 l
h
4865.1724 1351 m
S
/Cs1 SC
0 sc
0 i
4894.7583 1375 m
(!"#)[ 12.996000 11.664000 0.000000 ] xS
/Cs2 SC
0.99979502 0.994959 0.82489198 sc
CM
216.17241 63 m
313 63 l
313 27 l
216.17241 27 l
h
216.17241 63 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
4865.1724 1387 m
4962 1387 l
4962 1423 l
4865.1724 1423 l
h
4865.1724 1387 m
S
/Cs1 SC
0 sc
0 i
4880.7363 1411 m
($%$&'\()[ 15.354000 9.666000 15.354000 10.332000 5.994000 0.000000 ] xS
9 w
0.60000002 i
/Cs2 SC
0.755678 0.104096 0.142373 sc
5445 1149 m
5445 1401 l
S
5529 1149 m
5529 1401 l
S
5613 1149 m
5613 1401 l
S
5361 1149 m
5361 1401 l
S
5277 1197 m
5277 1401 l
S
5313 1329 m
5577 1329 l
S
5313 1245 m
5577 1245 l
S
5313 1161 m
5577 1161 l
S
0 i
1 1 1 sc
CM
592 176.2 m
592 233.8 l
592 237.7744 608.12799 241 628 241 c
647.87201 241 664 237.7744 664 233.8 c
664 176.2 l
664 172.2256 647.87201 169 628 169 c
608.12799 169 592 172.2256 592 176.2 c
f
1 w
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
5241 1273.8 m
5241 1216.2 l
5241 1212.2256 5257.1279 1209 5277 1209 c
5296.8721 1209 5313 1212.2256 5313 1216.2 c
5313 1273.8 l
5313 1277.7744 5296.8721 1281 5277 1281 c
5257.1279 1281 5241 1277.7744 5241 1273.8 c
5241 1216.2 m
5241 1220.1744 5257.1279 1223.4 5277 1223.4 c
5296.8721 1223.4 5313 1220.1744 5313 1216.2 c
S
0 i
1 1 1 sc
CM
676 176.2 m
676 233.8 l
676 237.7744 692.12799 241 712 241 c
731.87201 241 748 237.7744 748 233.8 c
748 176.2 l
748 172.2256 731.87201 169 712 169 c
692.12799 169 676 172.2256 676 176.2 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
5325 1273.8 m
5325 1216.2 l
5325 1212.2256 5341.1279 1209 5361 1209 c
5380.8721 1209 5397 1212.2256 5397 1216.2 c
5397 1273.8 l
5397 1277.7744 5380.8721 1281 5361 1281 c
5341.1279 1281 5325 1277.7744 5325 1273.8 c
5325 1216.2 m
5325 1220.1744 5341.1279 1223.4 5361 1223.4 c
5380.8721 1223.4 5397 1220.1744 5397 1216.2 c
S
0 i
1 1 1 sc
CM
760 176.2 m
760 233.8 l
760 237.7744 776.12799 241 796 241 c
815.87201 241 832 237.7744 832 233.8 c
832 176.2 l
832 172.2256 815.87201 169 796 169 c
776.12799 169 760 172.2256 760 176.2 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
5409 1273.8 m
5409 1216.2 l
5409 1212.2256 5425.1279 1209 5445 1209 c
5464.8721 1209 5481 1212.2256 5481 1216.2 c
5481 1273.8 l
5481 1277.7744 5464.8721 1281 5445 1281 c
5425.1279 1281 5409 1277.7744 5409 1273.8 c
5409 1216.2 m
5409 1220.1744 5425.1279 1223.4 5445 1223.4 c
5464.8721 1223.4 5481 1220.1744 5481 1216.2 c
S
0 i
1 1 1 sc
CM
844 176.2 m
844 233.8 l
844 237.7744 860.12799 241 880 241 c
899.87201 241 916 237.7744 916 233.8 c
916 176.2 l
916 172.2256 899.87201 169 880 169 c
860.12799 169 844 172.2256 844 176.2 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
5493 1273.8 m
5493 1216.2 l
5493 1212.2256 5509.1279 1209 5529 1209 c
5548.8721 1209 5565 1212.2256 5565 1216.2 c
5565 1273.8 l
5565 1277.7744 5548.8721 1281 5529 1281 c
5509.1279 1281 5493 1277.7744 5493 1273.8 c
5493 1216.2 m
5493 1220.1744 5509.1279 1223.4 5529 1223.4 c
5548.8721 1223.4 5565 1220.1744 5565 1216.2 c
S
0 i
1 1 1 sc
CM
928 176.2 m
928 233.8 l
928 237.7744 944.12799 241 964 241 c
983.87201 241 1000 237.7744 1000 233.8 c
1000 176.2 l
1000 172.2256 983.87201 169 964 169 c
944.12799 169 928 172.2256 928 176.2 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
5577 1273.8 m
5577 1216.2 l
5577 1212.2256 5593.1279 1209 5613 1209 c
5632.8721 1209 5649 1212.2256 5649 1216.2 c
5649 1273.8 l
5649 1277.7744 5632.8721 1281 5613 1281 c
5593.1279 1281 5577 1277.7744 5577 1273.8 c
5577 1216.2 m
5577 1220.1744 5593.1279 1223.4 5613 1223.4 c
5632.8721 1223.4 5649 1220.1744 5649 1216.2 c
S
0 i
1 1 1 sc
CM
592 92.199997 m
592 149.8 l
592 153.7744 608.12799 157 628 157 c
647.87201 157 664 153.7744 664 149.8 c
664 92.199997 l
664 88.225601 647.87201 85 628 85 c
608.12799 85 592 88.225601 592 92.199997 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
5241 1357.8 m
5241 1300.2 l
5241 1296.2256 5257.1279 1293 5277 1293 c
5296.8721 1293 5313 1296.2256 5313 1300.2 c
5313 1357.8 l
5313 1361.7744 5296.8721 1365 5277 1365 c
5257.1279 1365 5241 1361.7744 5241 1357.8 c
5241 1300.2 m
5241 1304.1744 5257.1279 1307.4 5277 1307.4 c
5296.8721 1307.4 5313 1304.1744 5313 1300.2 c
S
0 i
1 1 1 sc
CM
676 92.199997 m
676 149.8 l
676 153.7744 692.12799 157 712 157 c
731.87201 157 748 153.7744 748 149.8 c
748 92.199997 l
748 88.225601 731.87201 85 712 85 c
692.12799 85 676 88.225601 676 92.199997 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
5325 1357.8 m
5325 1300.2 l
5325 1296.2256 5341.1279 1293 5361 1293 c
5380.8721 1293 5397 1296.2256 5397 1300.2 c
5397 1357.8 l
5397 1361.7744 5380.8721 1365 5361 1365 c
5341.1279 1365 5325 1361.7744 5325 1357.8 c
5325 1300.2 m
5325 1304.1744 5341.1279 1307.4 5361 1307.4 c
5380.8721 1307.4 5397 1304.1744 5397 1300.2 c
S
0 i
1 1 1 sc
CM
760 92.199997 m
760 149.8 l
760 153.7744 776.12799 157 796 157 c
815.87201 157 832 153.7744 832 149.8 c
832 92.199997 l
832 88.225601 815.87201 85 796 85 c
776.12799 85 760 88.225601 760 92.199997 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
5409 1357.8 m
5409 1300.2 l
5409 1296.2256 5425.1279 1293 5445 1293 c
5464.8721 1293 5481 1296.2256 5481 1300.2 c
5481 1357.8 l
5481 1361.7744 5464.8721 1365 5445 1365 c
5425.1279 1365 5409 1361.7744 5409 1357.8 c
5409 1300.2 m
5409 1304.1744 5425.1279 1307.4 5445 1307.4 c
5464.8721 1307.4 5481 1304.1744 5481 1300.2 c
S
0 i
1 1 1 sc
CM
844 92.199997 m
844 149.8 l
844 153.7744 860.12799 157 880 157 c
899.87201 157 916 153.7744 916 149.8 c
916 92.199997 l
916 88.225601 899.87201 85 880 85 c
860.12799 85 844 88.225601 844 92.199997 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
5493 1357.8 m
5493 1300.2 l
5493 1296.2256 5509.1279 1293 5529 1293 c
5548.8721 1293 5565 1296.2256 5565 1300.2 c
5565 1357.8 l
5565 1361.7744 5548.8721 1365 5529 1365 c
5509.1279 1365 5493 1361.7744 5493 1357.8 c
5493 1300.2 m
5493 1304.1744 5509.1279 1307.4 5529 1307.4 c
5548.8721 1307.4 5565 1304.1744 5565 1300.2 c
S
0 i
1 1 1 sc
CM
928 92.199997 m
928 149.8 l
928 153.7744 944.12799 157 964 157 c
983.87201 157 1000 153.7744 1000 149.8 c
1000 92.199997 l
1000 88.225601 983.87201 85 964 85 c
944.12799 85 928 88.225601 928 92.199997 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
5577 1357.8 m
5577 1300.2 l
5577 1296.2256 5593.1279 1293 5613 1293 c
5632.8721 1293 5649 1296.2256 5649 1300.2 c
5649 1357.8 l
5649 1361.7744 5632.8721 1365 5613 1365 c
5593.1279 1365 5577 1361.7744 5577 1357.8 c
5577 1300.2 m
5577 1304.1744 5593.1279 1307.4 5613 1307.4 c
5632.8721 1307.4 5649 1304.1744 5649 1300.2 c
S
0 i
1 1 1 sc
CM
592 260.20001 m
592 317.79999 l
592 321.77441 608.12799 325 628 325 c
647.87201 325 664 321.77441 664 317.79999 c
664 260.20001 l
664 256.22559 647.87201 253 628 253 c
608.12799 253 592 256.22559 592 260.20001 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
5241 1189.8 m
5241 1132.2 l
5241 1128.2256 5257.1279 1125 5277 1125 c
5296.8721 1125 5313 1128.2256 5313 1132.2 c
5313 1189.8 l
5313 1193.7744 5296.8721 1197 5277 1197 c
5257.1279 1197 5241 1193.7744 5241 1189.8 c
5241 1132.2 m
5241 1136.1744 5257.1279 1139.4 5277 1139.4 c
5296.8721 1139.4 5313 1136.1744 5313 1132.2 c
S
0 i
1 1 1 sc
CM
676 260.20001 m
676 317.79999 l
676 321.77441 692.12799 325 712 325 c
731.87201 325 748 321.77441 748 317.79999 c
748 260.20001 l
748 256.22559 731.87201 253 712 253 c
692.12799 253 676 256.22559 676 260.20001 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
5325 1189.8 m
5325 1132.2 l
5325 1128.2256 5341.1279 1125 5361 1125 c
5380.8721 1125 5397 1128.2256 5397 1132.2 c
5397 1189.8 l
5397 1193.7744 5380.8721 1197 5361 1197 c
5341.1279 1197 5325 1193.7744 5325 1189.8 c
5325 1132.2 m
5325 1136.1744 5341.1279 1139.4 5361 1139.4 c
5380.8721 1139.4 5397 1136.1744 5397 1132.2 c
S
0 i
1 1 1 sc
CM
760 260.20001 m
760 317.79999 l
760 321.77441 776.12799 325 796 325 c
815.87201 325 832 321.77441 832 317.79999 c
832 260.20001 l
832 256.22559 815.87201 253 796 253 c
776.12799 253 760 256.22559 760 260.20001 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
5409 1189.8 m
5409 1132.2 l
5409 1128.2256 5425.1279 1125 5445 1125 c
5464.8721 1125 5481 1128.2256 5481 1132.2 c
5481 1189.8 l
5481 1193.7744 5464.8721 1197 5445 1197 c
5425.1279 1197 5409 1193.7744 5409 1189.8 c
5409 1132.2 m
5409 1136.1744 5425.1279 1139.4 5445 1139.4 c
5464.8721 1139.4 5481 1136.1744 5481 1132.2 c
S
0 i
1 1 1 sc
CM
844 260.20001 m
844 317.79999 l
844 321.77441 860.12799 325 880 325 c
899.87201 325 916 321.77441 916 317.79999 c
916 260.20001 l
916 256.22559 899.87201 253 880 253 c
860.12799 253 844 256.22559 844 260.20001 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
5493 1189.8 m
5493 1132.2 l
5493 1128.2256 5509.1279 1125 5529 1125 c
5548.8721 1125 5565 1128.2256 5565 1132.2 c
5565 1189.8 l
5565 1193.7744 5548.8721 1197 5529 1197 c
5509.1279 1197 5493 1193.7744 5493 1189.8 c
5493 1132.2 m
5493 1136.1744 5509.1279 1139.4 5529 1139.4 c
5548.8721 1139.4 5565 1136.1744 5565 1132.2 c
S
0 i
1 1 1 sc
CM
928 260.20001 m
928 317.79999 l
928 321.77441 944.12799 325 964 325 c
983.87201 325 1000 321.77441 1000 317.79999 c
1000 260.20001 l
1000 256.22559 983.87201 253 964 253 c
944.12799 253 928 256.22559 928 260.20001 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
5577 1189.8 m
5577 1132.2 l
5577 1128.2256 5593.1279 1125 5613 1125 c
5632.8721 1125 5649 1128.2256 5649 1132.2 c
5649 1189.8 l
5649 1193.7744 5632.8721 1197 5613 1197 c
5593.1279 1197 5577 1193.7744 5577 1189.8 c
5577 1132.2 m
5577 1136.1744 5593.1279 1139.4 5613 1139.4 c
5632.8721 1139.4 5649 1136.1744 5649 1132.2 c
S
0 i
0.75 1 1 sc
CM
592 73 m
1000 73 l
1000 1 l
592 1 l
h
592 73 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
5241 1377 m
5649 1377 l
5649 1449 l
5241 1449 l
h
5241 1377 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 23 0 0 -23 0 0]sf
5371.5381 1421.178 m
(\)*&'+,%-\)%'.%')[ 11.500000 7.245000 13.202000 7.659000 12.351000 13.202000 12.351000 6.394000 11.500000 12.351000 7.659000 11.500000 12.351000 0.000000 ] xS
/Cs2 SC
0.75 1 1 sc
CM
325 27 m
325 279 l
409 279 l
409 27 l
h
325 27 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
4974 1423 m
4974 1171 l
5058 1171 l
5058 1423 l
h
4974 1423 m
S
/Cs1 SC
0 sc
0 i
0 1 1 0 -930 -4863 cm
4972.9668 1305.178 m
(/'&0*%01)[ 6.808000 7.245000 13.202000 12.788000 7.245000 12.351000 12.788000 0.000000 ] xS
/Cs2 SC
0.993788 0.83497697 0.86991799 sc
CM
467 275 m
517 275 l
517 25 l
467 25 l
h
467 275 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -4649 1450 cm
5116 1175 m
5166 1175 l
5166 1425 l
5116 1425 l
h
5116 1175 m
S
/Cs1 SC
0 sc
0 i
0 1 1 0 -808 -4991 cm
/F1.1[ 24 0 0 -24 0 0]sf
5035.208 1308.5 m
(23,2-\)4%%1-0%*5&'6)[ 13.344000 5.328000 13.776000 13.344000 6.672000 12.000000 14.232000 12.888000 12.888000 14.232000 6.672000 13.344000 12.888000 7.560000 18.192000 13.776000 7.992000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
