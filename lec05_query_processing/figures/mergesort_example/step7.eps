%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 995.000000 722.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.7 (Build 19H2) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 995 722
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 995 722
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Menlo-Regular
%!FontType1-1.0: Menlo-Regular 1.0000.2.0280
14 dict begin
/FontName /Menlo-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /quoteleft put
dup 34 /A put
dup 35 /n put
dup 36 /a put
dup 37 /quoteright put
dup 38 /comma put
dup 39 /space put
dup 40 /one put
dup 41 /four put
dup 42 /B put
dup 43 /o put
dup 44 /b put
dup 45 /five put
dup 46 /six put
dup 47 /seven put
dup 48 /quotesingle put
dup 49 /C put
dup 50 /u put
dup 51 /i put
dup 52 /three put
dup 53 /eight put
dup 54 /D put
dup 55 /e put
dup 56 /l put
dup 57 /two put
dup 58 /E put
dup 59 /F put
dup 60 /G put
dup 61 /H put
dup 62 /I put
dup 63 /v put
dup 64 /y put
dup 65 /J put
dup 66 /K put
dup 67 /L put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1143 1 index div -767 2 index div 1470 3 index div 2133 5 -1 roll div]cvx def
/sfnts [<

B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8000D2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8000E2C2020456944B001602020457D691844B001602DB8000F2CB8000E2A2DB800102C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800112C4B535845441B2121592D0000020068FE96046805A400030007001FBC00040114000000060114B6010805830204002FC4D4EC310010D4ECD4EC301311211125211121680400FC73031BFCE5FE96070EF8F27206290000000001020603A702E6061600030017B800082BBA00010002000B2B00B800002FB800012F30310111231102E6E00616FD91026F00000001014CFEB002F2016900050017B800082BBA00010000000B2B00B800002FB800042F303101211103071301BA0138DEC86E0169FEF7FE510101B000000100D00000044605D0000A0023B800082BBA00070001000B2B00B800052FBA00080009000B2BB8000810B80000D030312521110535253311211521010E013AFE880176CA0136FCC8A90468B5C2B2FAD9A90000000100980000042305F0001C00514029001C2505060518191A03171B25060605421011A70D9714960400970200100A02010A1E17221003241D10FCC4FCECC0C011123931002FEC32F4ECF4CC304B5358071005ED111739071005ED1732592225211521353600373E0135342623220607353E01333204151406070E01017502AEFC75BB011835644693805BC87067C761DB010B596438D5AAAAAAC5012E3E7A974F7D8E4243CC3132E9BD60C07441E60000010089FFE3043705F0002800474029001397150A8B09A60D97061F8B20A61C972396069915A9291613000314191E26101E03221F14091F2910FCC4C4FCECD4EC111739310010ECE4F4ECF4EC10EEF6EE10EE3930011E0115140423222627351E013332363534262B013533323635342623220607353E013332041514060308939CFEEBF567D66766C662A6B2B2989A9A8B9C918659BE6879BD49DA010589031F27C795CEEB2624C93534968D8299A67A6D737B2828BA2020DBB57BA4000000000200660000046F05D50002000D0042401F010D030D0003030D4200030B07970501038809010C0A001E0804060F0C240E10FCFCD43CEC32113931002FE4D43CEC321239304B5358071004C9071005C95922090121033311331523112311213502DFFE2901D721EAC7C7C9FD87051DFCEB03CDFC33A4FE9C0164BF000001008FFFE3042D05D5001D003D402204071D1A
9707118B108E14970D029700880D9907AA1E031E00171E010A2200101F1E10FCC4FCC4EC10EE310010E4E4F4EC10EEF6EE10FEC412393013211521113E0133320015140023222627351E0133323635342623220607CF02F4FDC42B572CE80110FEE3F777C54E5CBA61A7B5BBA7519A4605D5AAFE91100FFEEEEAECFEF02020CD3231B0A2A0B2252500020085FFE3044C05F000180024003D4023071F19970A1F97100AAB04018B008E04971696109925221E00260D2207061C01131F2510FCECECFCE4EC310010E4F4ECF4EC10E510EE10EE11393001152E01232202113E0133321215140223200211100021321601220615141633323635342603DF3F8E4DC0C630AA6ED8EDF4DDFEFCF2012301144A94FEDD8194948186888805B4BA2527FEDFFEE7646BFEF7F3F2FEF601750191017A018D1FFD6CBAA4A4BAB1ADAEB000000001008B0000043705D500060035401905250203020325040504420597008803050301040122001F0710FCECC411393931002FF4EC304B5358071005ED071005ED5922132115012301218B03ACFDEAD30208FD3505D556FA81052B0000030083FFE3044E05F0000B0023002F00434025180C00972706971E2D9712961E9927A930180C242A1E15241E0F091E151B22031E0F211F3010FCC4ECFCC4EC10EE10EE113939310010ECE4F4EC10EE10EE393930012206151416333236353426252E01353436333216151406071E01151404232224353436131416333236353426232206026887939585889395FECA8191F2D0D1F29181969FFEFEE4E4FEFF9F4D80797A807F7B798002C5978A8A99978C89985421B47FB2D1D1B27FB42121C89FCAE4E3C9A0C90162787E7E787A808100000000020025000004AC05D50002000A0098404100250100040504022505040725050406250505040925030A0825030A01250A030A0025020003030A420003079701B00388090509080706040302010009052F0A0B10DCEC173931002F3CE4FCEC1239304B5358071008ED071005ED0705ED0705ED071005ED0705ED0705ED071008ED5922B2070301015D401A0A000F008F008F000403010B0204030C040907060886018902085D005D01032101330123032103230268D501AAFEB1F501C9D16EFDF56CD10523FD0403AEFA2B0185FE7B00000300A60000047105D500080011002000EDB800082BBA00090012000B2BBA0016000E000B2BB8000910B80000D0410500EA000E00FA000E00025D411B0019000E0029000E0039000E0049000E0059000E0069000E0079000E0089000E0099000E00A9000E00B9000E00C9000E00D9000E000D5DBA0005000E0016111239B800052F410500EA000500FA000500025D411B00190005002900050039000500490005005900050069000500790005008900050099000500A9000500B9000500C900





2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B1D00
00>] def
/CharStrings 37 dict dup begin
/.notdef 0 def
/space 1 def
/quotesingle 2 def
/comma 3 def
/one 4 def
/two 5 def
/three 6 def
/four 7 def
/five 8 def
/six 9 def
/seven 10 def
/eight 11 def
/A 12 def
/B 13 def
/C 14 def
/D 15 def
/E 16 def
/F 17 def
/G 18 def
/H 19 def
/I 20 def
/J 21 def
/K 22 def
/L 23 def
/a 24 def
/b 25 def
/e 26 def
/i 27 def
/l 28 def
/n 29 def
/o 30 def
/u 31 def
/v 32 def
/y 33 def
/quoteleft 34 def
/quoteright 35 def
/Eng.alt 36 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-1143 -767 1470 2133} readonly def
/UniqueID 4038846 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB280335E18F338643226D8B89C95387AC89B9912B8E22F450DD0DB97462BB22E277B72D11874A9BF7ECA79825B6ACEF88660E89ED73882410EE96E8DCBB4BD54C20135789AF6E13B8B0AF4C5BC6184A84B7A7847EC38C602756561662D81A7BF55987D5EB127A600BE6D609B2851AF18432461B95CE5358EBC765C0E4706D1988BBB6E8F71B6EB112B6FFBD48B39CD0C620D7399BE4517A9CE3CDF25A0DD63C4D74C7E40945C34322E8E838BEBC413B66A1C0E2CF203D5D4B9E152BAD4504C065C77DB43933F6B5B95D22FCDF909249ABE70159BD826BCACC84E4BC5A10B9B6DE928636BFF59B49C8228AC5AF2BC444B6086084C4089DB84AD0FF25E1771074FA8F7E2E4A0C41446EF85DD12BADF672578199B1A2D0E3CCB329D5AFA814C4347A5E23CD626D4A6D98F3F2B75453567430EBBEF645EB8499E53602D76B0F32370BAC2432C1212EE4C628E82BD44D35FA2B39C9C42D230A5A0D724D92F90C3404B30872E2B46D516DE14C81778BC8F0AD48A632813AD1F4E3D83494CFE637C03601CBC63E8C34ED9878B80312CDCF396AAC50593CC35F7FD3FD84C109164A84FC01F6A3341FB86C6970B2425A17B1A0CAB295FD878EFF7B5862680B5A449908BF470EC7DBEC9EF77F0A3042D1ADB2D0850B129C0CAF61E9C2703B219116F4AB6AF48AA8016F9EBC818B4BAB6B517F145EDC16C663346E68A393FB59A96CBEF11AF7FF488ADFAE38BA3EA6B091FB11A343732BACE9DC2F86FD152545E5419E15969C089D03895
9CA939351CB7574C8D016CF8BAEA5EB2E12EA9A42EACFC27D9CCE53E9DB19B72288B9E2051B4B1897239542FEB2F4323F15B4DDA18F7EBA5AC411371452E57B6A53F0503FA50C224EBAE28C09DF36320129E4860E7694D72FDB4E0955B35C867ECD3CA09CEF4CE297BAC825BE7148CEE050139255F0793C4BE0F00ACB314B210255972ECACD017CF7B6427D1E872124F4126F1993FE9A3318F52AE7E1DC44B897C0137664C6F76CB1DC626B12B57783EA31562C3B879804724E7426CDC14A36FFA6CD8DE03A372CD5A7DACBA06A118F69616961EF2400F64EA41E7D73064E49323F2CFE36D2D8F07D5221003756956A921CC47C9D505220BA59859163F1E9DE0746106E9EE513740CC8ACB4B11EDBA2B2D2273EDD4CEDBAB8B5638891DCFAC26917FE651F04862F9D121135022F1D2967C66AA8906539828448CC82DDE1A4018D4CD01783050E1FC4642D25CC15725480455254F44B1469654E7147803396DDB9189AC49FB8F466B6C387F0C0A4BE8EF83E16BE96201F6FB1F586FDDC18E9EEC2590DC29097F110640C8282C467317F49BE35666E935B40F5745F9DC528754B8BAD4425439AE0936B77B5A3CF79B08BBF912FD18FA59CF68E9EC3957E539B608025AF32808334C173C3CD2EB1FD4BDF14CEF4FBE1EEAB793018C56CE5F004A193DD3FE32B3ED5807E385D9B4ABA7D83B8FC05BCC5BBE1B7E3C923C68B5FBDD27D962D1CB23A26006D956BB7CC9F9860FF5D1751E8E747DC7730C15AFE74C7E52C2C36F0924D1824A557FFB1EC7011941DD0470B4A12FFB07E4F6B99AA41AF92CE298FD92524D588474663C8A65FBF81473288075E12F921C809CD599DB47AFE12FA75490F75A3AC4911FC72A00EF017C5B84639268F392E0125C925384081F2C76A59E181CC56EB5C866BCB3F57322DD0267584BFAC16BAA802EC940FCF35C2762DA2FC68C3BFF752B4AB29C5F349B6F9668A63E142C59FB3E969C99AAD595A83DC93152677FEAD7424B932FFDECEEFF05606E1282D174A2F34BDA54AA24B0123C7CC8DCAB1B5DE669C60EE2FDBE84624FA640D831CC70B5567C87C0873E84405B15F276DFFF0B8A4D5B6FE5D69D6D559109C0EAC2B5E13EDD1E63BDB7C0ACFABB2C63903B86C6846EDA89475DE57BB885C7CCE6DEFA341502E7751F381D10C8906D7D97AFA0E4B67285913FB718DC41CA575B1ECF4B48F2743A7B3C0397DB7BC5051B82ADC82CDD8BCADB8E35F8BF7E0D3EB9CD373952C169D05368769DA6F53AC05B6D9303B43ADC67987F1F5FD3DDC308D861C1CBB11E4AE9EB87196630A74A5D6DA0C60A18457AA8BC6797576781EF2C3442C4AD596C16DE1486DC863C87EF5394CB15803E9C04F766EAADD50F390398930F572C713E88B0702B862B01862AED31E4E8D331FC6476792D85CCF39CF16042840510384949DD85E8E1A088C5
F8167E22BC84E2E364E69775590D9806F0B69488154D27072270B3A0908D6262EA85AFAEFE3F1C1942EF56F15CBBA9B3978C8B2739D9C12E645ADB9145620EF3109F664F9448A202EE85D1EFD6414194EEF07A5AFC244B410546B96C19814105B4B28439EB2958783A366743C7045B846400E1D28C0EEBA015026D06055EE7B10AB81DA41D14E41CD8CE14E1548603F1255D5F9DB4F3061B3C4671974F660227AA99061669B87CFEE6143EC77A9E85B4BD4BFFB3881C66E11DC1A59C2298C334853C5BCBE8C15D44F47CE40F28BF516847C257F18BAE4C7EC4A9E2D9DCE476AF687F828AB6348134D76F147DFE1751BF1052655853D2802D3F46B07C07DB3E4A95AE5D421AF9B200542E66F831431E21148BE1CBDC0D812E8F15FAF4D48110D4C231BD8939308D2854AC73086BD5D096EABC1956EC5CDA6021B1ECA68B1896D2672EDB89D63AEDA8BA7AEF73B808B7FA3E5EB2849DA20313563E501B03E81529D21822CD1C97E1F15FD8BBF762204F1E9416C355FBE329F6E1AD8B08841DEDC9F983748C84985A6D56E4F98C8C73CB2D61FF1A591B29BD920F660C4528230E5F722AED15AD286C13C79B52EA404A82A38EFB55D4D98FA94CC00C66CA40237227A383216BECCCD4560C9FBB7D43C02D669D8E24D82CF2348CF78F232E19D80A36A59587ED2FFB2490E6ABC0B04A7BDC182D4E91C2182F8BCA2D86247D8A09D2AA438CE3EAF521F0121508084CA3E4F98535B3AFF83C13C7B7F19E79D89FE1729CB5A58AB61FA5F3A42A5AC9685C7E53FB1A0FD14C8FE43EE07BEB098D769359EF11CF77468CEF901BEA0847DD589526118EE10572BA24ED6DC9EC317FFCBE5154A07E51C67BB4346CF859136F5991368AE7737B7FED1270295C3603944C87C78A0DF73A96FBC83E92C61DC47D2CCB4762E3F4DC8D051E3FF16CDEB053B15DE4C6038FFC992B9CB96379CA9B531776079735C2E69AA4AA3C2D4DA4D0A559AE18D6A41A4747F2B37B3A3DAEA26F6DEFD30DA5EC707D10A99B481A2E89482ED46FECA694661DD8323C12A7254408A5F866D41C5C3DFBEDF61FC805283793D69CF9ABE1DE01CF4C93CB2CD4930F8E4BC3F35EBBAD200A18A58494500280B0F5625D420329BAECEFD09DB5645FA379462EA7C0D3916033CCEB2A7ECA1701D6B28F9CFF0D6247E1038442E8C2C755DA381311D2BF47CC5703FCF4CC7B50D48A1F4B6C052CFD5BD0C6C72B7DECF1B138A6047F3067B8996449A03E5CF49A72B1A13A20B5C4D2DC2F5FF19E53EF63465896827A0943B66B94CFF9A9BDF27188CE6574D53144F721FB6392EDBCBF94DFCA6FAE1353BC7CE73758288BA3D8DD15EFC8A7C66FBE7A3CFEFE2E68DB35E97FF3776C7C7EFBB6F7A4007900AEA16A31EECE80428A252A7713FD240FD7C872CD455A5B71E781304F3DCBDEE7127D061E680BC94EDE

0DA299050284CF23EAE4D286388E52332A945C79D8714675155E0C2F17E3AF2227883FC3170F61EAA835376D8A755438C800286F0A632B42993362A3C4220CCD8A1F5D1844E640F7F994B4AF0FE292D3CFE3400D5D9B90F170FBB8356E44DCD9D4979E5AF0B226F9BF7085866D5E9915DC46F2B9412FEC2A0D2E2AA4521E92A1CAAF34595E96D8EC595B0C9C601AA74E96A39204476804A109ED13F60486F9AB35087569BF5242AD2E0276BF8D3398CCAEB5E659C6786ACFE34E790FF22927EEDC2056AD64155E06284AFF8E7A172929E138357866B8D306A8210CF76961B617F4D186F2BB2753A13CC6CFB11CC60D31D1BCF94DD0248F955529527B31007E7C5FA048A417C6952279BD0C7EAE80380D048B502D3C37FA6D9F48961966D7D3937F80A8697E32732033C0E9F981C1782D54DC1D34ED1EE6F4E9BD820A69F76F01940A6C1CF531D60CAEC831FA729572BEA2D35792658D3F28D43A8015FF2837218C7893B5A263413ECC54F97D2860515A15B0846000F5723DA518E73FDEF20E1EB63D07AED10885772F5BA7829961AE1515D24D88F1B76E05E7D037860D1B2D4A087FC63C904FC7641176E01B9BA32A19BE4C8D36D4F76EFB138098DE642AD163D7C284150A7ED8E0611855DFA5FED6EEFC62563169E86C538D12EB7A3DB22EB68C58B64917EAFEE9EFBDAE731279A3AFF637A93751D4BD10558026AA9E29B2AC62DEDAF086DEA31C91249964A534B21305AF0E819540A894CB38268D3B9234C635D08A4C1FDA47B2542AC6CE4093E299CF31D84AF0070BE7F5E02F410B025EE2107EEA848A76BCB3A91949A61ED74533AD609B334A0C4FF11F7903202404F77C69E4D4383999666DB5202DE501BFA4279CD3CBFFA0D5C2D12378F9231C361B4D275FA170A0B1E3F8158B7076E1E76511E2CDD790E8B8AF18CAD8217F7B36425DD917E63EFCDC937E918F67D8ED7A0E016DB572D9D43A808DBBD7830DC36FDCE7C053C8536A0C78D29A70B46A017B5A4AB871C53AE780E536271E1D279562B9B5996704AA5154ACA7458D40
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Menlo-Regular cguidfix
/F1.1/Menlo-Regular renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /m put
dup 34 /e put
dup 35 /r put
dup 36 /g put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 6 dict dup begin
/.notdef 0 def
/e 1 def
/g 2 def
/m 3 def
/r 4 def
/uni20BE 5 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4445087 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2852CB9BD3FB4254FD5F0903E5B67D5C2ED1223D2F1D96D0624F745D9E6F43F03B659367FFA32D19EC800C16FDA2148F3E79FF6507ABD874784B3606289E62DFEE787FC13CEEA25CF3594060C39B76AF51B3F929C8906CEF58556C7DF3718830D490392E8DBDEFCF9B5A946D42E11D3B3DD715554AE54DFC94859454EAACB400B1367E23FD708AD329CE53EF6AD656AA3DA130E9AAACCFD7B89E13433ECB89DD13586009420D42A920605B6797569D9AD47E32F44A83615F88B3E5625AADBFB2A7C5925271F17709AA89C8CB2A769DB7B4962A413D7B7DD8242C6435FACD7565FA884F11F57992C0A45206808500B70F99FBF8D7D39BAF20C06D1AFF495CD6F30DE4691E77FD5FCEB3EF4AEC923C6E7E1A82C7F50D3BB562FBB49A18CA8B28D3943F70B0154A3B4B20CC77C09138F4C756532D7EF25AD73303A571B9DB761236C7CF0DC17664E4EE0A92A2BC5EB2B7849920BDE7353FC24D6B06C110B0E93A2564E0C4874977A571B1CE9218C60B6FC193DCD66CC227D660787D9C0FED88B8D1BEF4AD3DBC2ADAC39F731389F5D2717C18789536AFC74D8991A58A4556101AA2E734002559262F3F7EA8B404FE14D82A6FD54655A4323A6CE3326D80B4F3F530DB8AD95DBD859A20CF1B0DE5D1102A1D42987F147B8E252AD49A2D2199D1BE31876B445C82031913C5A94597B9FA52DB083C17A70A0E0CA624C69092E3AEC77A672EF402255DF2208035BC61148C575E9E2ED14F2A897F93971B0ED3D9B0FF163070C2C02

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 995 722 rc
1 0 0 -1 -68 829 cm
108 108 m
252 108 l
252 180 l
108 180 l
h
108 108 m
S
/Cs2 SC
0 sc
0 i
/F1.1[ 21 0 0 -21 0 0]sf
116.78467 139 m
(!"#$%&'\(\(\))[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
116.78467 163 m
(!*+,%&'-./)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
270 108 m
414 108 l
414 180 l
270 180 l
h
270 108 m
S
/Cs2 SC
0 sc
0 i
278.78467 139 m
(01230&'4/5)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
278.78467 163 m
(!678%&'\(94)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
432 108 m
576 108 l
576 180 l
432 180 l
h
432 108 m
S
/Cs2 SC
0 sc
0 i
440.78467 139 m
(!:8$%&'99-)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
440.78467 163 m
(!;73%&'4/5)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
594 108 m
738 108 l
738 180 l
594 180 l
h
594 108 m
S
/Cs2 SC
0 sc
0 i
602.78467 139 m
(!<38%&'-./)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
602.78467 163 m
(!=$8%&'\(94)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
756 108 m
900 108 l
900 180 l
756 180 l
h
756 108 m
S
/Cs2 SC
0 sc
0 i
764.78467 139 m
(!>?@%&'\(94)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
764.78467 163 m
(!A+7%&'4/5)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
918 108 m
1062 108 l
1062 180 l
918 180 l
h
918 108 m
S
/Cs2 SC
0 sc
0 i
926.78467 139 m
(!B$@%&'99-)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
926.78467 163 m
(!C7+%&'99-)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
846 306 m
990 306 l
990 378 l
846 378 l
h
846 306 m
S
/Cs2 SC
0 sc
0 i
854.78467 337 m
(!>?@%&'\(94)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
854.78467 361 m
(!B$@%&'99-)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
846 396 m
990 396 l
990 468 l
846 468 l
h
846 396 m
S
/Cs2 SC
0 sc
0 i
854.78467 427 m
(!C7+%&'99-)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
854.78467 451 m
(!A+7%&'4/5)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
108 612 m
252 612 l
252 684 l
108 684 l
h
108 612 m
S
/Cs2 SC
0 sc
0 i
116.78467 643 m
(!"#$%&'\(\(\))[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
116.78467 667 m
(!678%&'\(94)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
270 612 m
414 612 l
414 684 l
270 684 l
h
270 612 m
S
/Cs2 SC
0 sc
0 i
278.78467 643 m
(!=$8%&'\(94)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
278.78467 667 m
(!:8$%&'99-)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
432 612 m
576 612 l
576 684 l
432 684 l
h
432 612 m
S
/Cs2 SC
0 sc
0 i
440.78467 643 m
(01230&'4/5)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
440.78467 667 m
(!;73%&'4/5)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
594 612 m
738 612 l
738 684 l
594 684 l
h
594 612 m
S
/Cs2 SC
0 sc
0 i
602.78467 643 m
(!*+,%&'-./)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
602.78467 667 m
(!<38%&'-./)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
0.60000002 i
/Cs1 SC
1 1 1 sc
72 108 m
72 818.09998 l
S
0 i
CM
4 2.9000001 m
7 10.9 l
1 10.9 l
h
4 2.9000001 m
f
0 J
0 j
1 0 0 -1 -68 829 cm
72 826.09998 m
75 818.09998 l
69 818.09998 l
h
72 826.09998 m
S
2 w
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0.49998799 0.5 0.5 sc
540 738 m
882 684 l
918 630 l
1044 738 l
S
756 648 m
810 648 l
882 630 l
918 612 l
972 540 l
972 486 l
S
0 i
1 1 1 sc
CM
875.45581 229.72791 m
889.51477 222.69847 889.51477 211.30153 875.45581 204.27209 c
861.39697 197.24263 838.60303 197.24263 824.54419 204.27209 c
810.48523 211.30153 810.48523 222.69847 824.54419 229.72791 c
838.60303 236.75737 861.39697 236.75737 875.45581 229.72791 c
f
1 w
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -68 829 cm
943.45581 599.27209 m
957.51477 606.30151 957.51477 617.69849 943.45581 624.72791 c
929.39697 631.75739 906.60303 631.75739 892.54419 624.72791 c
878.48523 617.69849 878.48523 606.30151 892.54419 599.27209 c
906.60303 592.24261 929.39697 592.24261 943.45581 599.27209 c
S
/Cs2 SC
0 sc
0 i
/F2.1[ 16 0 0 -16 0 0]sf
895.552 617.776 m
(!"#$")[ 13.648000 8.592000 4.880000 9.184000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
