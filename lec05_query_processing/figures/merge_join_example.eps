%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 830.000000 290.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.7 (Build 19H2) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 830 290
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 830 290
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /m put
dup 34 /e put
dup 35 /r put
dup 36 /g put
dup 37 /j put
dup 38 /o put
dup 39 /i put
dup 40 /n put
dup 41 /u put
dup 42 /t put
dup 43 /p put
dup 44 /b put
dup 45 /uniFB00 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<



0A0069000A0079000A0089000A0099000A00A9000A00B9000A00C9000A000D5D00BA000F001900032BB8000F10BA0023000500032BB8002310303113343E0233321E0215140E0223222E0227141E0233323E0235342E0223220E027E192C3B21213B2C19192C3B21213B2C195A20405E3D3E5D402020405D3E3D5E402001022F49321A1A32492F2F49311A1A31492F39624929294962393963492A2A4963000000020043FF3B022D02110018002C00ADB8002E2FBA0018000000032BB8001810B80002D0B8001810B80004D0B800042FB8002E10B8000EDCB8001810B80016D0B800162FB8000E10B80019DC410500DA001900EA001900025D411B0009001900190019002900190039001900490019005900190069001900790019008900190099001900A9001900B9001900C90019000D5DB8001810B80023D0B800232F00B800012FBA0013002800032BB8001310BA001E000900032BB8001E10303113113311331E0333323E0235342E0223220607233505140E0223222E0235343E0233321E024355020E292E2F133B593B1D1E3B593C365A1502013B10243B2C2C3E271211263C2B293D27130205FD36010A171F12082A49623737624B2C272B46FE2648382221364726244637222036450000000001003D0000014D0213000E0027BA0003000100032BB8000310B8000DD0B8000D2F00B800012FBA0009000800032BB8000910303113113335343E02333526060723353D55142C4833455A1F020205FDFBE6324D361C5A023C3F6D00000100090000011D02A00017005BBA0001000200032BB8000110B8000210B80006D0B8000310B80007D0B8000210B80017DCB8000DD0B8000110B80014D000B800012FBA000F000C00032BB8000F10BA0004000500032BB8000410B80000D0B8000510B80015D030311335231523153311141E023B013523222E0235113335B65558580E1D2F21412714190E056702059B9B4BFEB7242C18094B030A120F01414B00000000010040FFF501EC020500180051BA000C000D00032BB8000C10BA0001000200032BB8000110B8000210B80016D0B800162FBA001700020001111239B8000210B80018D0B800182F00B800012FB8000C2FBA0008001300032BB8000810303121112311140E0223222635112311141E0233323637331501EC5513263927313855112A443339541B020205FEDC233B2C183830015EFEAC2A45321B2D30520000000001000C0000024202D2002B00F2B800142BBB00020003000300182BBB00290003000000182BB8000310B80007D0B8000310B8000FDCB8000210B80015D0B8000010B80017D0B8000010B8001FDCB8002910B80025D000B800014558B8000B2F1BB9000B000A3E59B800014558B8001B2F1BB9001B000A3E59B800014558B800062F1BB9000600083E59B800014558B8

00>] def
/CharStrings 15 dict dup begin
/.notdef 0 def
/b 1 def
/e 2 def
/g 3 def
/i 4 def
/j 5 def
/m 6 def
/n 7 def
/o 8 def
/p 9 def
/r 10 def
/t 11 def
/u 12 def
/uniFB00 13 def
/uni20BE 14 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4445087 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2829599C1DB40C921169FF26E104FB48CECC24574A8196DC855B668A6515558146EC89D2D92513E36C07C89AD5CB9C779B57978000A47F8779569EF0192D5BD6D12FE3CA52A7E56A1AF21AF7B74D150E52DFF3E486D6EED4B34771CEC07A058396301139D61A7A329E44BD45CB8DBA31E328B3977596423127F97FC6887366E5BA6641D00A88D4C88BD7752686109F33D05550056502329FC476A7978C42AE0709B2462FFEE3D76A01690F79799AED3EC2A02931D57D372E1B8871180982DEEF09E53251D9960EE5CD1E22D322EDCFA120F4E7E596DCF09712EAB4D1641DB35051C2AD67C3CE12389052B9959A0ED6D8823BCD9A19CAFBF84495F69F12DE99C997A094EA595D5696446697AE70D32A49B4BF6497B2CDE6AB067ECBA482704BF36D5C5E59CC115BA4A4BCB11B34CA8DD417F6FC2B857AE135CCFF6236912564B82D800A3C7D063AF5B08C405A0D04FD237547F9643D4237BA6B0CF5293C96BC0EE89504F816B609A7A2219FB9B48EE20F0BAA7B97612AF19214EEB5F31D8DC8CEAB078E041FD96236969948DEB149C98D894EE77692DC9087F20D03DEDA839B5FA8E920B8040B9CE0702E552ACD8D2CFB89258C6CDF27BEB8D01D27517EA873E33197B2EA2AD9C4F08C53F21AF7B4069274E258B712424B29D76263A4D0302C7FAA274530D07CD4036DD7D9F3D607583AA32AE4AE306891A7AAB7F83465E515D409B844F23AAE35D1859F46ED87CE7CB5588D5681175EA1AC18CBC33611EC63E5C452799A0


76019CA6C1BF74A0955A71BCC82869E6B8370FB6FF6CD1785E1B4AB02C097FC82B0EC5AB0EA74F59BB1A67C6CF7AB43BEBC1DFF201EE81E7F29D2A57E3D13427FF8A1D35E5D6419157404BC16BA4A5C8D05ACDA4404FDFD9EA4240B144A29085C98A57FF39319394B3F16791F1A3988E1F69DD63734D4A9D0BA7A20B28C7310B245C1AD196
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: Menlo-Regular
%!FontType1-1.0: Menlo-Regular 1.0000.2.0280
14 dict begin
/FontName /Menlo-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /one put
dup 34 /four put
dup 35 /comma put
dup 36 /space put
dup 37 /quoteright put
dup 38 /M put
dup 39 /eight put
dup 40 /two put
dup 41 /three put
dup 42 /T put
dup 43 /seven put
dup 44 /quoteleft put
dup 45 /six put
dup 46 /W put
dup 47 /F put
dup 48 /five put
dup 49 /R put
dup 50 /A put
dup 51 /n put
dup 52 /a put
dup 53 /D put
dup 54 /e put
dup 55 /l put
dup 56 /quotesingle put
dup 57 /C put
dup 58 /u put
dup 59 /i put
dup 60 /B put
dup 61 /o put
dup 62 /b put
dup 63 /H put
dup 64 /E put
dup 65 /G put
dup 66 /I put
dup 67 /v put
dup 68 /y put
dup 69 /K put
dup 70 /L put
dup 71 /J put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1143 1 index div -767 2 index div 1470 3 index div 2133 5 -1 roll div]cvx def
/sfnts [<





0322FCDC04BEFA2B0377FC8900020085FFE30423047B000B0029006E402A0A07001A200C180F0700B618078C12218B20BF1D8C24BE1299180D011804190E0A060C44200406153E2A10F4ECC4FCEC323211393931002FC4E4F4FCF4EC10EE10EE11391139123911123930401D301F302030213022A000A001A002A00AA00BA216A017A018A019A01A0E5D012322061514163332363735371123350E012322263534363B01352E0123220607353E01333216171E0102BE3DA1A37A6C98AE01B9B93BB380ABCCFBF3F70186935EC05B66BB588BC53D2620023371706570D3BA294CFD81A6645FC1A2BBC21D86793634B8272752523293000000000200C1FFE304580614000B001C0030401A180C09038C0F098C15990FBE1B9B1900121247180C06061A461D10F4EC3232FCEC31002FECE4F4EC10EE11393930013426232206151416333236013E01333212111002232226271523113303968885868A8A868588FDE32C9B66CAE8E9CB64992EB8B8022FD6DADBD5D4DCDA02785258FEC9FEEFFEEBFEC557538D0614000002007BFFE30460047B0015001C0033B800082BBA00020010000B2BB8000210B8001CD0B8001C2F00BA0006000D000B2BBA00130019000B2BBA001C0002000B2B303101152115061633323637150E01232000111000333212072E01232206070460FCE308BFAE58C06D69C35BFEFBFEDA0120F0D6F7B00C918885AC08028C5A06E5C83839B72B2B01390113010C0140FEDE9774A9B06E00000200EE00000480060F0009000D004BB800082BBA00010000000B2BB8000110B80007DCB8000AD0B8000110B8000BD0B8000210B8000CD000BA00030004000B2BBA000B000C000B2BBA00010008000B2BB8000310B80006D030310121112115213521112101331523013C01D7016DFC6E016DFEE1011FB8B8045CFC338F8F033E0242E8000100F00000045A061A000D0027B800082BBA000D000C000B2BB8000D10B80009DC00BA00040005000B2BBA000D000A000B2B30310114163B0115232226351121352102CF5B59D7E9A5B5FED901DF01957C7E9BD3C203F590000000000100C30000041B047B0013002C4018090E03000301068C11BE0CC20A010206004A0D09060B461410F4EC32FCEC31002F3CE4F4EC11173939300111231134262322061511231133153E01333216041BB96A71818BB8B831A873ABA902B6FD4A02B6978EB7ABFD870460A86063E1000000020089FFE30448047B000B001700234013068C12008C0CBE12991809120F440312153E1810F4ECFCEC310010E4F4EC10EE3001220615141633323635342627321211100223220211101202688C90908C8D90908DE9F7F6EAE9F6F603DFDAD6D5DBDBD5D6DA9CFED2FEE2FEE1FED3012D011F011E012E00000100C3FFE3041B045E0013002C4018090E03000301068C


4764034645180546BB03451803444312054437034342110543120343B8024040090442410F0542110342B8020040090441400E05410F0341B801C0400904403F0C05400E0340B801804009043F0C09053F0C033FB801404064043EFE033D012D053DFA033CFE033B28033AFE033911420539640338311A05384B0337FE03362D140536FE03354B0334301A05344B0333301A0533FE033211420532FE03312D1405311A03301A032F2D14052F18032E0916052EBB032D2C13052D14032DB802804009042C1011052C13032CB802404096042B2A25052BFE032A0916052A250329023A0529FE0328FE0327FE03260F0325164205254503240F0323FE03220F0F0522FE0321202D05217D03202D031F4B031E1142051EFE031DFE031C1B19051CFE031B0010051B19031AFE0319FE0318FE031716420517460316152D0516420315141005152D03141003130010051314031211420512FE0311012D05114203100F0F0510110310B802004009040F0E0C050F0F030FB801C04009040E0D0A050E0C030EB801804009040D0C09050D0A030DB80140B4040C09030CB801004037040BFE030A0916050AFE0309160308100307FE0306012D0506FE0305140303023A0503FA0302012D05023A0301001005012D0300100301B80164858D012B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B002B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B1D00
00>] def
/CharStrings 41 dict dup begin
/.notdef 0 def
/space 1 def
/quotesingle 2 def
/comma 3 def
/one 4 def
/two 5 def
/three 6 def
/four 7 def
/five 8 def
/six 9 def
/seven 10 def
/eight 11 def
/A 12 def
/B 13 def
/C 14 def
/D 15 def
/E 16 def
/F 17 def
/G 18 def
/H 19 def
/I 20 def
/J 21 def
/K 22 def
/L 23 def
/M 24 def
/R 25 def
/T 26 def
/W 27 def
/a 28 def
/b 29 def
/e 30 def
/i 31 def
/l 32 def
/n 33 def
/o 34 def
/u 35 def
/v 36 def
/y 37 def
/quoteleft 38 def
/quoteright 39 def
/Eng.alt 40 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-1143 -767 1470 2133} readonly def
/UniqueID 4038846 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2879808DC5A083223AE2D7E50DC0C0DA86C3CA6A86C16D41F3F024A748ED0DA482F8B7C3AC1A7273F8DDCC6B9D81CE85B46EDFA48DE22AA48B8AB67F544062D219AC52E6C3C918207A7695B01AA8F74C3E65BC655D4664A7D449DB54EEEF17B8D6F269CC5969B11677B5194B087E50D9020709BEBAEFD95DBD5F40F71C6C82C98E60C9B0851CF4D0CE1584053A3DE50EE77688BA9DB3324B878FAF6A1D4D91A0DF9C5E462727BBBCD73BA6B0482CD6A18D5C43DB8D2894FFB1EDB0BD988F3BE3A8B844FCC9E5E51B970FF6F3A8906CF725880B70F24FD2050E2FCF95A30E1DE0DD2D585E803D26A9D18F559BB33321949A61A118E9E00797EC78CD9DB1010030AB2872522EAAA4486AFAAC9547515F876FE78755C80517BC0821F106182A5844D6B491C3AC645B2DE54137BED56BC94029B34E0F3E48864585131D4DBB68015539CA8152921558977406995E027737753AF5DEC890B1EC633C0FA458C4DD1E918D35379DEC8CE4DA0D1C2E958C3B62086906383FAF07A330EC54BEE73377412FA43DB0431493275FFC997191F417926BCFD71032A0034590AE07E37E5060483E77157E47F4328446BB85A2338E9405D4569D9D369577AE81B062ECCBF09638DFB50859D34F889AAC023A7E26B12893EAE8003D2C5309BF47C7AF1FD4D522ADEC6411EA9239F54CA945CF73FB3FBA7FA359938C379E48EE40E5CDB3E4ECBF36EA8B1F324220C7470058E58F4807CE0179EEBE87954FFB09E7F051A62ABF4407A74084FE9C4
C8CCB96F5053205BF780D8152BBE3E52EEBAFED2620C07841D8DE72C329FD5423C0CD16FB44795745D367D0380A97B269FCA011842F324A2E608132540A1A946153E7693A10B72C37BF1B34057544259178471B870F89FA0E23BB498A9D0F425D450567F5904AA46FF4C04EEE05F1C9F6F4AC75E069B3E7050E5CEED43035AFD21E6656D9BB4D7C8DB4B741949A186046F80FE7EE86AC58DFE4ED0492D0B94CCA77892BC1711EFED862BAAF3CAE889885718422C135F161853002E5A32B1267FFF8A87689A1D53011E9965E6239DD4797999018315B003D14C6826F844ECF6E08A0FE93A8E9533D6936A38F2E17706D20236980D3119DBC79ACB460B15C4CA7C27B80446AF762B9A3B4C1804FF3EDCDDBC79C23FC76548B970555E84504859E3D17BE457BFB793C8431CFF338544F279C33D5457D4A800CA1A943E41748E2F9726B40C90A003252E9DFD5E75E924DB33E9E0539B6B83924ECB595C0ECB7C9BD56F745001B684D3FABB8B4D70D3468049B8A9382545A4E7C49BDC89268827AA982FE779FC59786BD1A8570C8AD44EAE993E512677DC10DC0A9AB543432BC3F4B767EC790495CD885C4670F262A9C4CF5D325E2F188C817328195B7BF98740FF8D53AD171B9F0EEA00EFADE1B8DEDBBAE6FCD173B9FB2D1888A6B3B3533BEA0B4013EDA80AC0942888B857542AF779FA5B54376B6BAFAE7560B843D61C35774FD7D515DC37CBB4FEDC1EE91E0FFC80E7BD97B95BE60B5C3E9D6C51BE248349FF4CFC0B8D40EE429022CCA73F84F732AFC70E86C83E099FF8352B0D4F15D9D444AE03632388CFDE78249171E95C89B2E5B3C6540235412E6A585E6BCA1340660CE23C952EA1C83F8311A63EC61EA1F2A153B853B19AC16F982246DC86426780DBB613FAC89FF470314DEA105AFFB629F140D57FC3683BDF07397D13466A64C9FEDDD0C1583597F94D199004D6BB346F4C43FF7601BA1936495C9E836E4CA193090B37104433F8B5C698D1CB86E0B74B51AE48B51EB61F4B2DF6A44C190FC093260838D7D9C81B1F6EE1F2DBE7FD2EEEF5DE56B08D170A7FC36DF8BBD3D5560E5919CCA44510D33169AE1DCEC510AC7BED1BE8649D246980DD8D8E0514B6E930934D6D058E9412A7BA8FF28EAC6281336192B7AD4CA32114F8EB60458BDD8999BB9AED24AE7EAB01E71F053A999F5F4B0242B11445A460703994B4B5216A882F8C37C90EC8387420A5207180379C637A8034815F3D77E3A1C60E54C2A19D88579E16A87747A4543D45E71BF66ED30654037BDFC3A9EB743BF6839B0C174D99FB883FFAA1EE9D1EF6CF77C5B10A1BD18DCFF16945CDFDC1A5D6C0EE239DA10D4B14ACBE7A5C1F53ADB54D10086DAB09F6F2EDD5AD7D29961E72F1C7AB5E8E17392435C540BE0AAF0E7317FA51F22AF0891E74D67E4B3AD0E6D3A0FEA1289B4B55E0B1



0F8259B2CBD4ACE2295D24F1AD310805ED57EF74A5A4BD47D37671E604EE050EFFDD6386FE629A8276C2C9CCB7165099C33BF80BA59ACA7358A931763EF4BD9448CA7586B86C31E69DB8A8D3A2383097A42C1D9BF5EAE48023E8CE97D7B5E8ACB833562E10C6B649A364F2507903A04A6F4CA47051
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Menlo-Regular cguidfix
/F2.1/Menlo-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
q
0 0 830 290 rc
37 0 0 37 396 47 cm
BI
/Width 111
/Height 111
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
JcC<$[/\GOrr2oorqZQjrr1"=rr2oorqZQjrr1"=rr2oorqZQjrr1CHpAb-krql]jrql]ocMuMrrp]p5
rkSN*ra>^irbqe^dJs48rm1SZrh'0tr]gC#rm0!lrp]p5rkSN*ra>^irbqe^e,KIKs8MNeci1`ZTDi6t
5Q5U#cd)RBs8L@DDuN!#@/cet_#D[ZnBq:8ci.k^5Q5'iTDlY*ci3F]s8L@DDuN!#@/cet_#D[ZnC.C<
s8W)Erbqd#ra>_trkSNZrp\55fDkicr]gA^r]gCtaT)7Tr]gA^r]gCtaT)7Tr]gA^r]gCtb5VMBs8Kh5
5Q1Z^5Q8I;s5!_P_#Bu*@/`CiDuS).s80V2TDi6t5Q5U#cd)Rf_#Bu*@/`CiDuS).s8B_6^qfrAra>^i
rbqe^cN!mZrm:ZEh>d@:ra>_trkSNZrp\55q`k'frh'2*rm1T5cN!c+ra>_trkSNZrp\55rBC<I5Q5'i
TDlY*ci3FZs8G7^E;omns8)fq5Q8I;s8)fq5Q8I;s8)fq5Q8I;s8;ou!!*!_rkQMQrW)p_rr;6_rp]p5
qnW(nrbqe^dJs48rm1JWq`k'urm0!lrp]p5qnW(nrbqe^dJs48rm1JWrBC<I5Q5U#cdDdlnG^c2_#?Rt
E;on%s8L@DDu2cr_#D[ZnBq:8ci.k[5Pr7qci3F]s8L@DDu2cr_#D[ZnBq:8ci.k[5Q/@u^qfrqrp\>8
rm1R^q`k(qrm:ZEl2Uaur]g8[`W,qQr]g8[`W,qQr]g8[`W,qQr]g8[rVt">rkSLtqZ-Ekl2Uaur]g8[
`W,qQr]g8[`W,qQr]g8[`W,qQr]g8[rVt">rkSLtqZ-Eko)J^)r]gA^r]gCtaT)7Tr]gA^r]gCtaT)7T
r]gA^r]gCtaT)7Tr]gA^r]gCtp]&\ArkSLtrW)p^rkS+)o)J^)r]gA^r]gCtaT)7Tr]gA^r]gCtaT)7T
r]gA^r]gCtaT)7Tr]gA^r]gCtp]&\ArkSLtrW)p^rkS+)qu?Zbrm1SZrh'0tr]gC#rm0!lrp]p5rkSN*
ra>^irbqe^dJs48rm1SZrh'0tr]gC#rm0!lrp]p5rkSN*ra>^irbqe^p]'"Jrp]p5rkSN*ra>^irbqe^
o)JUerm1R^r]gBirh'2*rm1T5dJs3lrbqd#ra>_trkSNZrp\>8rm1R^r]gBirh'2*rm1T5dJs3lrbqd#
ra>_trkSNZrp][^g].9!rbqd#ra>_trkSNZrp]LYqu?Z2r]gA^r]gCtaT)7Tr]gA^r]gCtaT)7Tr]gA^
r]gCtaT)7Tr]gA^r]gCtmf2&ArkSLtrW)p^rkRduqu?Yfra>^irbqe^dJs48rm1SZrh'0tr]gC#rm0!l
rp]p5rkSN*ra>^irbqe^dJs48rm1SZrh'0tr]gC#rm1$4jT#5Krm1SZrh'0tr]gC#rm0j/rr;uqra>_t
rkSNZrp\>8rm1R^r]gBirh'2*rm1T5dJs3lrbqd#ra>_trkSNZrp\>8rm1R^r]gBirh'2*rm1T5mf2AJ
rm1R^r]gBirh'2*rm1T5l2Ub_rql[ZrkQVTrkSLtrW)p^rkQVTrkSLtrW)p^rkQVTrkSLtrW)p^rkRXq
jT#4pr]gA^r]gCti;`fVrqub6rm0!lrp]p5rkSN*ra>^irbqe^dJs48rm1SZrh'0tr]gC#rm0!lrp]p5
rkSN*ra>^irbqe^jo=`Jrp]p5rkSN*ra>^irbqe^i;`]Srm1T5dJs3lrbqd#ra>_trkSNZrp\>8rm1R^
r]gBirh'2*rm1T5dJs3lrbqd#ra>_trkSNZrp]%LmJm13rbqd#ra>_trkSNZrp\kG`W,qQr]gA^r]gCt
aT)7Tr]gA^r]gCtaT)7Tr]gA^r]gCth#HdArkSLtrW)p^rkR.ccN!n5rm1SZrh'0tr]gC#rm0!lrp]p5
rkSN*ra>^irbqe^dJs48rm1SZrh'0tr]gC#rm0C"pAb-]rm1SZrh'0tr]gC#rm03rcN!mirbqd#ra>_t
rkSNZrp\>8rm1R^r]gBirh'2*rm1T5dJs3lrbqd#ra>_trkSNZrp\_CpAb-<rbqd#ra>_trkSNZrp\P>
cN!mZr]gA^r]gCtaT)7Tr]gA^r]gCtaT)7Tr]gA^r]gCte,T.ArkSLtrW)p^rkQhZfDkj>rm1SZrh'0t
r]gC#rm0!lrp]p5rkSN*ra>^irbqe^dJs48rm1SZrh'0tr]gC#rm0'n!WW3!nG^c5_#Bu*@/`CiDuS).
s4@;Mci.k^5Q5'iTDlY*ci3F]s8L@DDuN!#@/cet_#D[ZnBq:8ci.k^5Q5'iTDlY*ci3F_rrN0"rm1R^
r]gBirh'2*rm1T5cMuMrrkSLtrW)p^rkQVTrkSLtrW)p^rkQVTrkSLtrW)p^rkQ\V!WW3!_#?Rt!<,4^
^r??0s80V2TDi6t5Q5U#cd)Rf_#Bu*@/`CiDuS).s80V2TDi6t5Q5U#cd)Rh^]D6drh'0tr]gC#rm/mi
rkSN[rr:gSq`k'frh'2*rm1T5cN!c+ra>_trkSNZrp\55q`k'frh'2*rm1T5cN!i-!C&gJ@/cet_#D[Z
nBV(55Q5X$s5!_P!<,4^^r??N!<,4^^r??N!<,4^^r??P!!*'"r]gCt`W,o;r]pJ_l2UbPrm1JWq`k'u
rm0!lrp]p5qnW(nrbqe^dJs48rm1JWq`k'urm0!lrp]p5qnW.p!C&gJDuS)1s8MNechkNW5Q5X$s69R_
ci.k[5Pr7qci3F]s8L@DDu2cr_#D[ZnBq:8ci.k[5Pr7qci3F]s8L@DDu2ct^]D6drm1T5dJs3lrbqZu
rkSN[rr;6_rkSLtqZ+V8rkSLtqZ+V8rkSLtqZ+V8rkSLtqZ-TpaoD@Ur]g8[q#BUYrkSLtqZ+V8rkSLt
qZ+V8rkSLtqZ+V8rkSLtqZ-TpaoD@Ur]g8[q#BpbrkSLtrW)p^rkQVTrkSLtrW)p^rkQVTrkSLtrW)p^
rkQVTrkSLtrW)p^rkS:.df9<^r]gA^r]gCto)J:\rkSLtrW)p^rkQVTrkSLtrW)p^rkQVTrkSLtrW)p^
rkQVTrkSLtrW)p^rkS:.df9<^r]gA^r]gCto)JUerp]p5rkSN*ra>^irbqe^dJs48rm1SZrh'0tr]gC#
rm0!lrp]p5rkSN*ra>^irbqe^dJs48rm1SZrh'0tr]gC#rm1?=g].9Brm1SZrh'0tr]gC#rm108qu?ZA
rbqd#ra>_trkSNZrp\>8rm1R^r]gBirh'2*rm1T5dJs3lrbqd#ra>_trkSNZrp\>8rm1R^r]gBirh'2*
rm1T5p]'"Jrm1R^r]gBirh'2*rm1T5o)JUerkSLtrW)p^rkQVTrkSLtrW)p^rkQVTrkSLtrW)p^rkQVT
rkSLtrW)p^rkRt%g].8gr]gA^r]gCtl2UY\rh'0tr]gC#rm0!lrp]p5rkSN*ra>^irbqe^dJs48rm1SZ
rh'0tr]gC#rm0!lrp]p5rkSN*ra>^irbqe^mf2AJrp]p5rkSN*ra>^irbqe^l2Ub_rqub'rh'2*rm1T5
dJs3lrbqd#ra>_trkSNZrp\>8rm1R^r]gBirh'2*rm1T5dJs3lrbqd#ra>_trkSNZrp]@UjT#5*rbqd#
ra>_trkSNZrp]1Prr;upr]gCtaT)7Tr]gA^r]gCtaT)7Tr]gA^r]gCtaT)7Tr]gA^r]gCtjo=EArkSLt
rW)p^rkRIlrr;uqrbqe^dJs48rm1SZrh'0tr]gC#rm0!lrp]p5rkSN*ra>^irbqe^dJs48rm1SZrh'0t
r]gC#rm0^+mJm1Trm1SZrh'0tr]gC#rm0O&qu?ZArp\>8rm1R^r]gBirh'2*rm1T5dJs3lrbqd#ra>_t
rkSNZrp\>8rm1R^r]gBirh'2*rm1T5jo=`Jrm1R^r]gBirh'2*rm1T5i;^drrkSLtrW)p^rkQVTrkSLt
rW)p^rkQVTrkSLtrW)p^rkR=hmJm1$r]gA^r]gCtfDj.rrp]p5rkSN*ra>^irbqe^dJs48rm1SZrh'0t
r]gC#rm0!lrp]p5rkSN*ra>^irbqe^h#I*Jrp]p5rkSN*ra>^irbqe^fDj.rrm1R^r]gBirh'2*rm1T5
dJs3lrbqd#ra>_trkSNZrp\>8rm1R^r]gBirh'2*rm1T5h#I*Jrm1R^r]gBirh'2*rm1T5fDj.rrkSLt
rW)p^rkQVTrkSLtrW)p^rkQVTrkSLtrW)p^rkR"_pAb--r]gA^r]gCtcMuMrrp]p5rkSN*ra>^irbqe^
dJs48rm1SZrh'0tr]gC#rm0!lrp]p5rkSN*ra>^irbqe^e,KIKs8MNeci1`ZTDi6t5Q5U#cd)RBs8L@D
DuN!#@/cet_#D[ZnBq:8ci.k^5Q5'iTDlY*ci3F]s8L@DDuN!#@/cet_#D[ZnC.C<s8W)Erbqd#ra>_t
rkSNZrp\55fDkicr]gA^r]gCtaT)7Tr]gA^r]gCtaT)7Tr]gA^r]gCtb5VMBs8Kh55Q1Z^5Q8I;s5!_P
_#Bu*@/`CiDuS).s80V2TDi6t5Q5U#cd)Rf_#Bu*@/`CiDuS).s8B_6^qfrAra>^irbqe^cN!mZrm:ZE
h>d@:ra>_trkSNZrp\55q`k'frh'2*rm1T5cN!c+ra>_trkSNZrp\55rBC<I5Q5'iTDlY*ci3FZs8G7^
E;omns8)fq5Q8I;s8)fq5Q8I;s8)fq5Q8I;s8;ou!!*!_rkQMQrW)p_rr;6_rp]p5qnW(nrbqe^dJs48
rm1JWq`k'urm0!lrp]p5qnW(nrbqe^dJs48rm1JWrBC<I5Q5U#cdDdlnG^c2_#?RtE;on%s8L@DDu2cr
_#D[ZnBq:8ci.k[5Pr7qci3F]s8L@DDu2cr_#D[ZnBq:8ci.k[5Q/@u^qfrqrp\>8rm1R^q`k(qrm:ZE
l2Uaur]g8[`W,qQr]g8[`W,qQr]g8[`W,qQr]g8[rVt">rkSLtqZ-Ekl2Uaur]g8[`W,qQr]g8[`W,qQ
r]g8[`W,qQr]g8[rVt">rkSLtqZ-Eko)J^)r]gA^r]gCtaT)7Tr]gA^r]gCtaT)7Tr]gA^r]gCtaT)7T
r]gA^r]gCtp]&\ArkSLtrW)p^rkS+)o)J^)r]gA^r]gCtaT)7Tr]gA^r]gCtaT)7Tr]gA^r]gCtaT)7T
r]gA^r]gCtp]&\ArkSLtrW)p^rkS+)qu?Zbrm1SZrh'0tr]gC#rm0!lrp]p5rkSN*ra>^irbqe^dJs48
rm1SZrh'0tr]gC#rm0!lrp]p5rkSN*ra>^irbqe^p]'"Jrp]p5rkSN*ra>^irbqe^o)JUerm1R^r]gBi
rh'2*rm1T5dJs3lrbqd#ra>_trkSNZrp\>8rm1R^r]gBirh'2*rm1T5dJs3lrbqd#ra>_trkSNZrp][^
g].9!rbqd#ra>_trkSNZrp]LYqu?Z2r]gA^r]gCtaT)7Tr]gA^r]gCtaT)7Tr]gA^r]gCtaT)7Tr]gA^
r]gCtmf2&ArkSLtrW)p^rkRduqu?Yfra>^irbqe^dJs48rm1SZrh'0tr]gC#rm0!lrp]p5rkSN*ra>^i
rbqe^dJs48rm1SZrh'0tr]gC#rm1$4jT#5Krm1SZrh'0tr]gC#rm0j/rr;uqra>_trkSNZrp\>8rm1R^
r]gBirh'2*rm1T5dJs3lrbqd#ra>_trkSNZrp\>8rm1R^r]gBirh'2*rm1T5mf2AJrm1R^r]gBirh'2*
rm1T5l2Ub_rql[ZrkQVTrkSLtrW)p^rkQVTrkSLtrW)p^rkQVTrkSLtrW)p^rkRXqjT#4pr]gA^r]gCt
i;`fVrqub6rm0!lrp]p5rkSN*ra>^irbqe^dJs48rm1SZrh'0tr]gC#rm0!lrp]p5rkSN*ra>^irbqe^
jo=`Jrp]p5rkSN*ra>^irbqe^i;`]Srm1T5dJs3lrbqd#ra>_trkSNZrp\>8rm1R^r]gBirh'2*rm1T5
dJs3lrbqd#ra>_trkSNZrp]%LmJm13rbqd#ra>_trkSNZrp\kG`W,qQr]gA^r]gCtaT)7Tr]gA^r]gCt
aT)7Tr]gA^r]gCth#HdArkSLtrW)p^rkR.ccN!n5rm1SZrh'0tr]gC#rm0!lrp]p5rkSN*ra>^irbqe^
dJs48rm1SZrh'0tr]gC#rm0C"pAb-]rm1SZrh'0tr]gC#rm03rcN!mirbqd#ra>_trkSNZrp\>8rm1R^
r]gBirh'2*rm1T5dJs3lrbqd#ra>_trkSNZrp\_CpAb-<rbqd#ra>_trkSNZrp\P>cN!mZr]gA^r]gCt
aT)7Tr]gA^r]gCtaT)7Tr]gA^r]gCte,T.ArkSLtrW)p^rkQhZfDkj>rm1SZrh'0tr]gC#rm0!lrp]p5
rkSN*ra>^irbqe^dJs48rm1SZrh'0tr]gC#rm0'n!WW3!nG^c5_#Bu*@/`CiDuS).s4@;Mci.k^5Q5'i
TDlY*ci3F]s8L@DDuN!#@/cet_#D[ZnBq:8ci.k^5Q5'iTDlY*ci3F_rrN0"rm1R^r]gBirh'2*rm1T5
cMuMrrkSLtrW)p^rkQVTrkSLtrW)p^rkQVTrkSLtrW)p^rkQ\V!WW3!_#?Rt!<,4^^r??0s80V2TDi6t
5Q5U#cd)Rf_#Bu*@/`CiDuS).s80V2TDi6t5Q5U#cd)Rh^]D6drh'0tr]gC#rm/mirkSN[rr:gSq`k'f
rh'2*rm1T5cN!c+ra>_trkSNZrp\55q`k'frh'2*rm1T5cN!i-!C&gJ@/cet_#D[ZnBV(55Q5X$s5!_P
!<,4^^r??N!<,4^^r??N!<,4^^r??P!!*'"r]gCt`W,o;r]pJ_l2UbPrm1JWq`k'urm0!lrp]p5qnW(n
rbqe^dJs48rm1JWq`k'urm0!lrp]p5qnW.p!C&gJDuS)1s8MNechkNW5Q5X$s69R_ci.k[5Pr7qci3F]
s8L@DDu2cr_#D[ZnBq:8ci.k[5Pr7qci3F]s8L@DDu2ct^]D6drm1T5dJs3lrbqZurkSN[rr;6_rkSLt
qZ+V8rkSLtqZ+V8rkSLtqZ+V8rkSLtqZ-TpaoD@Ur]g8[q#BUYrkSLtqZ+V8rkSLtqZ+V8rkSLtqZ+V8
rkSLtqZ-TpaoD@Ur]g8[q#BpbrkSLtrW)p^rkQVTrkSLtrW)p^rkQVTrkSLtrW)p^rkQVTrkSLtrW)p^
rkS:.df9<^r]gA^r]gCto)J:\rkSLtrW)p^rkQVTrkSLtrW)p^rkQVTrkSLtrW)p^rkQVTrkSLtrW)p^
rkS:.df9<^r]gA^r]gCto)JUerp]p5rkSN*ra>^irbqe^dJs48rm1SZrh'0tr]gC#rm0!lrp]p5rkSN*
ra>^irbqe^dJs48rm1SZrh'0tr]gC#rm1?=g].9Brm1SZrh'0tr]gC#rm108qu?ZArbqd#ra>_trkSNZ
rp\>8rm1R^r]gBirh'2*rm1T5dJs3lrbqd#ra>_trkSNZrp\>8rm1R^r]gBirh'2*rm1T5p]'"Jrm1R^
r]gBirh'2*rm1T5o)JUerkSLtrW)p^rkQVTrkSLtrW)p^rkQVTrkSLtrW)p^rkQVTrkSLtrW)p^rkRt%
g].8gr]gA^r]gCtl2UY\rh'0tr]gC#rm0!lrp]p5rkSN*ra>^irbqe^dJs48rm1SZrh'0tr]gC#rm0!l
rp]p5rkSN*ra>^irbqe^mf2AJrp]p5rkSN*ra>^irbqe^l2Ub_rqub'rh'2*rm1T5dJs3lrbqd#ra>_t
rkSNZrp\>8rm1R^r]gBirh'2*rm1T5dJs3lrbqd#ra>_trkSNZrp]@UjT#5*rbqd#ra>_trkSNZrp]1P
rr;upr]gCtaT)7Tr]gA^r]gCtaT)7Tr]gA^r]gCtaT)7Tr]gA^r]gCtjo=EArkSLtrW)p^rkRIlrr;uq
rbqe^dJs48rm1SZrh'0tr]gC#rm0!lrp]p5rkSN*ra>^irbqe^dJs48rm1SZrh'0tr]gC#rm0^+mJm1T
rm1SZrh'0tr]gC#rm0O&qu?ZArp\>8rm1R^r]gBirh'2*rm1T5dJs3lrbqd#ra>_trkSNZrp\>8rm1R^
r]gBirh'2*rm1T5jo=`Jrm1R^r]gBirh'2*rm1T5i;^drrkSLtrW)p^rkQVTrkSLtrW)p^rkQVTrkSLt
rW)p^rkR=hmJm1$r]gA^r]gCtfDj.rrp]p5rkSN*ra>^irbqe^dJs48rm1SZrh'0tr]gC#rm0!lrp]p5
rkSN*ra>^irbqe^h#I*Jrp]p5rkSN*ra>^irbqe^fDj.rrm1R^r]gBirh'2*rm1T5dJs3lrbqd#ra>_t
rkSNZrp\>8rm1R^r]gBirh'2*rm1T5h#I*Jrm1R^r]gBirh'2*rm1T5fDj.rrkSLtrW)p^rkQVTrkSLt
rW)p^rkQVTrkSLtrW)p^rkR"_pAb--r]gA^r]gCtcMuMrrp]p5rkSN*ra>^irbqe^dJs48rm1SZrh'0t
r]gC#rm0!lrp]p5rkSN*ra>^irbqe^e,KIKs8MNeci1`ZTDi6t5Q5U#cd)RBs8L@DDuN!#@/cet_#D[Z
nBq:8ci.k^5Q5'iTDlY*ci3F]s8L@DDuN!#@/cet_#D[ZnC.C<s8W)Erbqd#ra>_trkSNZrp\55fDkic
r]gA^r]gCtaT)7Tr]gA^r]gCtaT)7Tr]gA^r]gCtb5VMBs8Kh55Q1Z^5Q8I;s5!_P_#Bu*@/`CiDuS).
s80V2TDi6t5Q5U#cd)Rf_#Bu*@/`CiDuS).s8B_6^qfrAra>^irbqe^cN!mZrm:ZEh>d@:ra>_trkSNZ
rp\55q`k'frh'2*rm1T5cN!c+ra>_trkSNZrp\55rBC<I5Q5'iTDlY*ci3FZs8G7^E;omns8)fq5Q8I;
s8)fq5Q8I;s8)fq5Q8I;s8;ou!!*!_rkQMQrW)p_rr;6_rp]p5qnW(nrbqe^dJs48rm1JWq`k'urm0!l
rp]p5qnW(nrbqe^dJs48rm1JWrBC<I5Q5U#cdDdlnG^c2_#?RtE;on%s8L@DDu2cr_#D[ZnBq:8ci.k[
5Pr7qci3F]s8L@DDu2cr_#D[ZnBq:8ci.k[5Q/@u^qfrqrp\>8rm1R^q`k(qrm:ZEl2Uaur]g8[`W,qQ
r]g8[`W,qQr]g8[`W,qQr]g8[rVt">rkSLtqZ-Ekl2Uaur]g8[`W,qQr]g8[`W,qQr]g8[`W,qQr]g8[
rVt">rkSLtqZ-Eko)J^)r]gA^r]gCtaT)7Tr]gA^r]gCtaT)7Tr]gA^r]gCtaT)7Tr]gA^r]gCtp]&\A
rkSLtrW)p^rkS+)o)J^=rd+Q=rd+RnaT)7hrd+Q=rd+RnaT)7hrd+Q=rd+RnaT)7hrd+Q=rd+Rnp]&\A
rm^pnr_EH=rm^N=JcC<$[/YX
~> %APLeod
EI
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -35 649 cm
431.62186 565.61169 m
467.62186 565.61169 l
467.62186 601.61169 l
431.62186 601.61169 l
h
431.62186 565.61169 m
S
0 i
0.940341 0.94228601 0.902143 sc
CM
440.45581 173.09186 m
454.51474 162.54771 454.51474 145.45229 440.45581 134.90814 c
426.39694 124.36394 403.60306 124.36394 389.54419 134.90814 c
375.48526 145.45229 375.48526 162.54771 389.54419 173.09186 c
403.60306 183.63606 426.39694 183.63606 440.45581 173.09186 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -35 649 cm
475.45581 475.90814 m
489.51474 486.4523 489.51474 503.5477 475.45581 514.09186 c
461.39694 524.63605 438.60306 524.63605 424.54419 514.09186 c
410.48526 503.5477 410.48526 486.4523 424.54419 475.90814 c
438.60306 465.36392 461.39694 465.36392 475.45581 475.90814 c
S
/Cs2 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
427.552 491.552 m
(!"#$")[ 13.648000 8.592000 4.880000 9.184000 0.000000 ] xS
437.40799 510 m
(%&'\()[ 3.552000 9.184000 3.552000 0.000000 ] xS
408.34985 621.61169 m
(&\)*+\)*)[ 9.184000 8.896000 5.040000 9.488000 8.896000 0.000000 ] xS
410.85385 640.05969 m
(,\)-"#)[ 9.488000 8.896000 9.232000 8.592000 0.000000 ] xS
[
4
4
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
342.05746 414 m
416.23254 469.66092 l
S
0 i
CM
387.63132 174.53743 m
383.03317 181.7386 l
379.43195 176.93953 l
h
387.63132 174.53743 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -35 649 cm
422.63132 474.46255 m
418.03317 467.26138 l
414.43195 472.06049 l
h
422.63132 474.46255 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
342.49939 489.62497 m
403.6922 492.6846 l
S
0 i
CM
376.68222 155.91589 m
368.84201 159.31165 l
368.54239 153.31914 l
h
376.68222 155.91589 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -35 649 cm
411.68222 493.08411 m
403.84201 489.68835 l
403.54239 495.68088 l
h
411.68222 493.08411 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
342 567.71313 m
414.5831 518.84515 l
S
0 i
CM
386.21921 134.62276 m
377.90762 132.64342 l
381.25854 127.66633 l
h
386.21921 134.62276 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -35 649 cm
421.21921 514.37726 m
412.90762 516.35657 l
416.25854 521.33368 l
h
421.21921 514.37726 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
449.88266 522.49988 m
449.74304 555.21179 l
S
0 i
CM
414.70892 85.788292 m
417.74301 93.775421 l
411.74307 93.801025 l
h
414.70892 85.788292 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -35 649 cm
449.70892 563.21173 m
452.74301 555.22461 l
446.74307 555.19897 l
h
449.70892 563.21173 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
465.57587 601.98926 m
497.13184 638.33881 l
S
0 i
CM
467.37628 4.6200204 m
464.39725 12.62785 l
459.86639 8.6944962 l
h
467.37628 4.6200204 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -35 649 cm
502.37628 644.38 m
499.39725 636.37213 l
494.86639 640.30548 l
h
502.37628 644.38 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
556.18634 414.50931 m
483.60822 469.52454 l
S
0 i
CM
442.23282 174.64284 m
450.42044 177.0847 l
446.79596 181.86624 l
h
442.23282 174.64284 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -35 649 cm
477.23282 474.35715 m
485.42044 471.91528 l
481.79596 467.13376 l
h
477.23282 474.35715 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
556.24573 568.01422 m
485.11407 519.1311 l
S
0 i
CM
443.52087 134.39987 m
448.41495 127.39645 l
451.8132 132.34135 l
h
443.52087 134.39987 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -35 649 cm
478.52087 514.6001 m
483.41495 521.60358 l
486.8132 516.65863 l
h
478.52087 514.6001 m
S
1 J
1 j
0.60000002 i
558 360 m
702 360 l
702 432 l
558 432 l
h
558 360 m
S
/Cs2 SC
0 sc
0 i
/F2.1[ 21 0 0 -21 0 0]sf
566.78467 391 m
(!!"#$%&$'%)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
566.78467 415 m
(!\(\)#$%*$+%)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
720 360 m
864 360 l
864 432 l
720 432 l
h
720 360 m
S
/Cs2 SC
0 sc
0 i
728.78467 391 m
(\)+'#$,&$-%)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
728.78467 415 m
("+"#$,.$-%)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
558 540 m
702 540 l
702 612 l
558 612 l
h
558 540 m
S
/Cs2 SC
0 sc
0 i
566.78467 571 m
(!!"#$%.$'%)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
566.78467 595 m
(\)+'#$%/$-%)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
720 540 m
864 540 l
864 612 l
720 612 l
h
720 540 m
S
/Cs2 SC
0 sc
0 i
728.78467 571 m
(0-+#$%1$+%)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
36 360 m
180 360 l
180 432 l
36 432 l
h
36 360 m
S
/Cs2 SC
0 sc
0 i
44.784668 391 m
(,234%#$!!")[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
44.784668 415 m
(,567%#$!\(\))[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
198 360 m
342 360 l
342 432 l
198 432 l
h
198 360 m
S
/Cs2 SC
0 sc
0 i
206.78467 391 m
(89:;8#$\)+')[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
206.78467 415 m
(,<=>%#$0-+)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
36 450 m
180 450 l
180 522 l
36 522 l
h
36 450 m
S
/Cs2 SC
0 sc
0 i
44.784668 481 m
(,?47%#$!\(\))[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
44.784668 505 m
(,@74%#$\(\(0)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
198 450 m
342 450 l
342 522 l
198 522 l
h
198 450 m
S
/Cs2 SC
0 sc
0 i
206.78467 481 m
(,/6;%#$\)+')[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
206.78467 505 m
(,A;7%#$0-+)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
36 540 m
180 540 l
180 612 l
36 612 l
h
36 540 m
S
/Cs2 SC
0 sc
0 i
44.784668 571 m
(,BCD%#$!\(\))[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
44.784668 595 m
(,E4D%#$\(\(0)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
198 540 m
342 540 l
342 612 l
198 612 l
h
198 540 m
S
/Cs2 SC
0 sc
0 i
206.78467 571 m
(,F6=%#$\(\(0)[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
206.78467 595 m
(,G=6%#$\)+')[ 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 12.643066 0.000000 ] xS
ep
end
%%Trailer
%%EOF
