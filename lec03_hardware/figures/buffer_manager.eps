%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 231.000000 686.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.6 (Build 19G2021) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 116 343
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 116 343
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /space put
dup 34 /p put
dup 35 /r put
dup 36 /o put
dup 37 /c put
dup 38 /e put
dup 39 /s put
dup 40 /B put
dup 41 /u put
dup 42 /uniFB00 put
dup 43 /M put
dup 44 /a put
dup 45 /n put
dup 46 /g put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<






00>] def
/CharStrings 16 dict dup begin
/.notdef 0 def
/space 1 def
/B 2 def
/M 3 def
/a 4 def
/c 5 def
/e 6 def
/g 7 def
/n 8 def
/o 9 def
/p 10 def
/r 11 def
/s 12 def
/u 13 def
/uniFB00 14 def
/uni20BE 15 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4445087 def
currentdict end
currentfile eexec

5DAEBA87122DA7E227B5ADEDA6EB48D9093F44DE6797121F5FDB692B1486E5DAE69EE08F16741318FF0A4FF9EF6B6CB6A1FB048C0DD31231A06D977DF89471A02C9EA249B180B348B26EF6D9BAF9DCE0AFD7B82BC5FEA39929AE88DBE2001B90C882851DE5559E60CA04E6BFA9284BC4C95BE188543694C20F7AC9E535983993DA34A581814F16DD8725878699A8DC734F565B90DE1AA3B107844EA8FE6C7764F490F6666B3DC57EBA1AA06683F05AD853475753C707CCE57F0BBAA6DF3FBC81094311828D3B46900DF172A9D0B54FA7B345C0BD2C8081163160912BA4B6CEF0CC9E4C0745FF3CDC4AD085A75FEA6EED32D13A49AA828E0E2B158F31C583548AAB83129A88CFB5CCDD8F84F78EA03EFC07B24B31564810F09F9054C4D5A2200BADEE36684EEE13A028C10E123F44FBCC65BA06211CCCBEE96E0BE5C1330E22C4AE16D239A0215519F91D162A301BF53A9D6C064A051B5918AFA2ABC371EC285989B6D641DBEA85DE8E83898340E5E54C0B05C4F5F343A8B20279695F03390F3F0E066E1EFC747ED422DE300F63C811AFC98DF9306A9BE9B85938C66900BDF82831ACE610CA9282AC3390090C34E7FEB6D784830CFCBE64A60DF12019B9FCD8E19959D957927891FBA78E503B911986BB937E5DAC7074FDE5F6819A39FAB06F81C2CA5C8E4380723036982E975753C7230E0E933D18C161D6EFF0DC95DB3345AAEA58839A777D68BB55F088F8F0E57AF601663624312F3AC5452F27361FBFFE41D11B346AADCE4344DDA698E2D18900E0B37260CB51AF4123BC845103E498CC7D572CE7647F5D5363D6474B6C3096C7B681E8E4D9E16F9CD70574533BE2994C66D8088F80E0EC45E8ECB60642D6CE84F75F9EA28F128E21464807AB36CE17F62C5659E0B3A788F5788A2DB1DF3F22C419E9EFCB64E274BFBF13DFDD4528076918049D3CB6594D0CFFA9C2537C5A1EA7D7BF0B169AB8F99B18D2DEA0C7850A3DC75D19D768D81B51D8B68A37258933359EAC43C1E687BD1B8AC3627A462A444A74D2312E77FB84D538FD97489C5BFE9B40C3B4647698F801C5308AF0593B45016CB57CF2AC597EB0D3DD083F72AC6389750A0D1ECE0BE2A4E8EF6A667ADB5966AEE34FC68DC2F4FEAFD7257E1F39439017B0B68868AED575AD6D819E028C80001391E1D0AEB16036F7F407CE1455A80CE9F8BE969FD7DD1473AFAB8EBCD21C7BEEF23A8723473714BB5AFDE84AB1464C87C10B611D888D7890A1B8B4BCC846B7AE8BBEEC1D6A7AB410E7E60E5687B842B87064F37D7D6BEC674FE4A2F02571EDB915E0E2F2167DD7861FD2B6E853ECB62663F9AB4DA3B99A5F38CA1403547A640DC5026D37CC12620876A6F72C54E93F980A7D134E2211E94C1FBF562798F581A1911EF2F8370BD7755F42BF81A3983B894B7BEA15685F3FE567119E8094FA8385
0F1293E6D137A5BFAE73429E90317320847B042BA743191002BFD38788D3BBB934F6B3C31EDF69B221FCFFBFDF1C6D4420FDE195E3C922036C208FA220DFE2E1C0B9C9468187508F372B68A00EBAF696F3E8E89FDC4B8F2757C1FCE66B4C8C1864C1CFD53A8E8D63EA50039824312ACF32F5EE7A75D35D57A81AAF52F9784FD17E5466879EFF963FBA6290B338946FDCB58FE1CE9114535492EDA9C880440EDD2B30DE126D08038B1A35C489F817878DA4986B446C4292D3B960A62AEEFEC185D043BB5F285DFC5EE6C86B0F3E29E47B810083FBF4590361FF07F94DBEC8E13D73BCEE5ED633CC4C364621E092EA62204A8130DDEE2BECE724D2120A6FC588F60F3B7F8AAF67F95ABB77C991FB0E91AF5FD3EC30F62ADFD224C3450AE18F6691940FDD940387DAF6E39BE0D74889EEC74FADA7311800D67B2A5C29E57B852BE05A0BD644A5FA1FC044ED506C3F3156FF7158807B4B288BF4160031791C3F642063B2FB155081A0AB555BC0806BB15451F6C030C36783B89EF1B2733095C0DA84C492150B48F45CCCD6B7A7271C75B31FA22A827C9621DCC692865462A04A0CAB3DB7275A9F298534023BFA367F96EF8D8AA25EE829A76D6483D431D6EDA467050C99AF82725F38914D713F0DCD193E7F2C16584F8D3D83A0A0098748355D35B24BD0A5241A8F7277C20AD4031FD75BA7A7A3463D50E4591CBBB4E352816509B6CFD7A67B72DA1ED4B67F133C0647BAE4CF28CEDD6810A0DAA4AEC716A887EC427561B22BC332DD5F8408E8D6BDAE33C07EF34918423DE411AB93DB788319C9C1162D5049A3633BBF107D7377FA0EF52AE8B786CEECE694368DDF216C1CD92D91D48BA4D6FE617233FD18B14D8D1C5B19B9DB2ED1E5CA5509671F72AA9419A6B942A413C7C111C0B4C1A6D525616FC51ECA905D31711FEC7A4D96F52692F6A71D9982626B4DE0F6EC5FE96742476E2770572284DF067B32B775D7890EAF03B264C5CA724533A34CE0A900F41CE2B8B19DC635BF881138BB8AD9F0D98B1EA4ED81A821AD45CBC5D00B40A01C4D784759AD7894FA14AEECFC4F580533661AE6CC1802B0C11B9591C067197C3A876B6391B7252E5A2386FB0A6CC31A772F744AD29F1C5368D8041CCCF00A8CFBD126D09DE9E6F755C7F53C09BAFBA3876AAD930A0E300DA23CEDF4619A67AEFD9663D472454AE97DDD7901FE74A359760ABFA17C9D35A99C3B457802987428B44D60490FBF6DC459BBE98D292996120B304D467F46E37A1BA27E7A1F25F347523D28BE62A1CC4209460A757B12B9E795B749B852AA11F5765F5A093F406911E78C82224C5B0D4C743DA1EA18391DE13514ED8EF68C54BB9835842E893003B390F3D5AEDAD2D018A40CA067F5DD3118FE081110082467370283D7057DB1F6F0D89EA6A61BAF0E73F0601DEE53E1FC3156224A446D9A
158670858559CDE7F5D1821968DD97A377D3478F963DB73FFE5D8C718F269B9F016CCEAF13A16CC41C599E36C6FC9A17F85ACD90BACFF6883A123DE1AD7EB190E2676FA0F72EE545026AA3D883EB5A3FA54F14C09FC03D2C588BDAE53CCEEDDCB4D7758BF273F5D7580530F3762DE42D3356D41DC1FC25EA95DF40B224B41E0BEA1F7391DA554EED1479D966537525439C0402711D2485EF54DACF6F1A91E463AC010001F88055F1B064A21702849F474D59D4F89062A7DDFA3BC2951F6226C211A02FF1FE7D82CF3F8B9EA46F00817FBD315781F7DCD9A146F473F0A25F9A7C02F03B65E55957814972434F51BE414D4885B4BEDA5176CFCD552AA091B2CD0099C2FCE2FD53706AB0613AFC6FFEE4A276FAC96D65B44BEB362AA4E9B1EEBFA5E3A30F8A35F0BF1DD015CF76E0661E03529846B58C886FA84B1D866880BC4D9F41871DDE1A4DF02DCE90CCC5C4390D5C0AF600E46658050CBF71FB88C289055AE8D042FFBDC956A39FED8AB60A921F8D41E634F50F530676874DCF2A59B72D0BDD74F3352BAC31BB9782F8E520B58BDFB2EFE0D2F0F7A0949C97546D78D31B85CD51649171CE2EDF54F398F1D9647D23EE95EE3BAAAEF62948E195C0025154D924AE369343B63A08CEC947F59CA0CA73DE8C85A3F18A4F285639575D4C65F9D07D415E50BFC9B92AC14B64366EF7D138564648EA73F64A9CD4DACF56F083F3F60A49FAFCA48F743AD00B32FE114803B8FDA2DE46CFE130FE21835F036806D440703F7EF9B9E4BA88537A34F1B984EEE3B8434DA5031CCAABD56CDE76A12B0F691A7E582E820B61D1554A98FEA7519B3DC9F7DF4D82F51B0D064955701EED8EEA794A8A2228DE7A155775F6B940CF4FAEB5C64CFE2E6A8B11A2607F79FD986E48B686DEE8F193B360EBDE5779B05F0E84380F7A75D17C75ED419650AC331DD408CD3B5A48E8C769165ECE49497CE0E79E12CD4408
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: Helvetica
%!FontType1-1.0: Helvetica 1.0000.0.0000
14 dict begin
/FontName /Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /c put
dup 34 /a put
dup 35 /h put
dup 36 /e put
dup 37 /m put
dup 38 /o put
dup 39 /r put
dup 40 /y put
dup 41 /s put
dup 42 /t put
dup 43 /g put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<





02B4D638361210FCEF0590978D543014B1074F3152794152C8FEEA0118E2011F0B284AAD7CA805012304476B55516C4AA2A3C55D36473B912E501C100123010601020142FE26754682B38A01DC0000000003003DFE3B03E80449001F002D002E00B7404D36144908490958085909880CA91BA81DA927A62BB91B0B4008031622290EC40A221D1F070406291D190A121D0A0F2E072E2E051C032E162E2D29051A300C0E270D3E26271C192F3087217242182B2B4EF44DEDF4ED394E10F64DFDE4F51112392F003F3FED3FED3F3FED10ED1112393931304379402C23281A1E0B1124251026231E262600281A262600110B0E21000F0E0C0D251D222601271B2926000F0C122100002B2B2B01103C103C2B2B2B2B2B818181005D00171617353311140706212226273316171633323736270E0123222411100033002623220706151416333237363501027C5E3335A63C70FEC9ADEC0EB70D273D83CF40260336987DAEFEFB0107BA0144A47FBE4625937CC24F2CFED104423E234387FC32CC76DA9BA548273C9256DD5250F7011D010D012EFEA1C0B25F9AB5BDAF6384022D000000010084000003ED05C200160053402C0607070817071708270427137507750808130D0213150000111D0607150C0A0D290A1A180115290016191718B80106B3216242182B2B4EF43C4DFD3C4E10F64DED003F3C3FED3F1139390112393130005D133311363736333217161511231134272623220615112384B440335782E9532DB91E318770B6B405C2FDDC512139A3599EFD5102A37637589AD6FDC80000000001008400000625044700260085403B0708070E060F1708170E170F2708270E270F4819560B670B0C23250A1A1D23190A02041725211D171D0D060700061B1C2503130A2817171A112914B80101B21A291DB80101400A00012E25292600192728B8010DB3216242182B2B4EF43C4DFDE410F4EDF4FD4E456544E6003F173C3F3F3C4DEDED111217390111123912393130005D13331536373633321716173E01333217161511231134262322061511231134272623220615112384B240345971804E2C243CA265D84E2ABB6B4D6A99B71A297066A7B4042F984F243D3F244656539C548EFD3702E86B508EA6FD9102BB6D324B9ECFFDC8000003003BFFD90421044E000C0018001900904033980896109916A504A808A610A916B808C808D704E50EE9140C3A08061D18070C1D120B190719191502270F1A1B092715191A1BB80109B321725D182B2B4EF44DED4E10F64DED12392F003F3FED3FED31304379402C001704260B1309260000110226010717092600050D0226010A140C260001100C26000816062601030E0626012B2B2B2B012B2B2B2B2B81005D241235342726232206151416331200111002212200351000330702E085304CBAA59696A3D601



00>] def
/CharStrings 13 dict dup begin
/.notdef 0 def
/a 1 def
/c 2 def
/e 3 def
/g 4 def
/h 5 def
/m 6 def
/o 7 def
/r 8 def
/s 9 def
/t 10 def
/y 11 def
/uni20BE 12 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-1947 -985 2961 2297} readonly def
/UniqueID 4065484 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB282933C176504523007CAA62118EF0F10F542CCD149F7422676A4BF6D7A80A903CC293DE051352AA16AD8D125F6B0FEA660B4500AEB7F8AC544E3ABD8CF54B4B0A9E186164F2ADEABA66A0466106F32C3499AD52D875F47E8A93DC0F64CAEF82439F3AF73F2E4229BDB257D62962C0BEE5FEABEA7C0302EC17A7C8ACF98E4A7A51D3052F7131197D07ED512B358834E9C223367B9B068B3200473718ACDF59FBAF34250436ABB0732BCD0336BC0B207055D4104143B32F21A24C7FAE0259E95AAA36698F5A6C5B2DE12694F2AE11EAAF1F3548DF511F5CC804A26EA867FBFA617BCA389044798EEA7E0A3F1F20DB11213D00FC76638834394B46781F1584D68F3D257605C78153E990A08D32B30F269FCA643553B81FA451E24467AEDE25EFC9186047FC0A9BDC8C6C61C2E38EDFD6D2AE2FDC0DC59F1FFAB909C25CC176C967601A2DA6C82BFADFAF1C6586D09585F3D00D57AC02C1FB366547546EDE98F43A90441FA02AE56C3FFBA212C4D0FD4A3232A5CC741DF1DD924B151E8D49F9C5A22A15F99C6C2AC2D4EFE32DA3454572FE6D4A88B29945B69A10EBD96DB78EB92C38D1DE286521111755787C8B508831E07079BE541078CFA10C40FFD868C26602324FBDF93FEC9FB2B830A8CEDCE8F6682A091C8FBB2B2B28C0D67A015862B263D05A6919E9CFED6703F603B19DEDBD864304F81897DAF4EE4439E1695230EAAC4DE50787C602FC29C5B4B6BFA88A117C766BB1E11FA177E1FF9F3739F6EB1B5D442FA4BDE
B81ECAEDA894C3AEB20EB374040F7909F7EA9F8038C31C9DEE660F04025BB78829BD8F730D0862ACF7F928474ADB95404ADF7D85F8339329B42AB63496FDFAD7B6DC6CB3A8631CA097DE419481F025910E783EC6B33C9628FFD8426869AF0811D27D69DB88F95469F3E1EF5A2302603CA9726AA58F3B00972DAA8A9C475EEAF77CC859EC6882027129E5D2F5913A01617FADA9E33F41B35E00D43152296F93E6EBF5CD8C33F4173EC8455F65D87F8264F30BA8A4E383D5E118B8521E79511C58BF20EAFB85AA5D07C3A281C75179AA8F5C2E379737E609213C969CC0FC4EC5CE075C3FFB98EF09D4E4CF1873807B211D6BD90C81A21C4C87BE3E4A1B6613548946F9420562AA994E9A665181B6D6A09D86FB14B270A09F4DE6948ECDF521FC833BB223C313CE414321D20505924260649698A529B7EF31B02D965D2CA11533F1CC6B9FEA260EC546CB63FBC4A5C31D04114891D6A560D30FDEFF3537D41922871713DA800EE0436ADAA9F5CC037E8A13854440535A9CBC55B79B188E5EB7D83E4E568FC6D782FC1F24E6730157ABEDFB3ED3AED60BC31DC8B7E2D286FEE074DA60BB8C1803221911CB3D145FF2CB67A595F4CABE240DFEB1437A2CF7CCAF028F314B6F921143E2D8DA32765287D0D318E270618D6C2321E874FB055FFC150604114BAFBBEBAEBEE5AA9E4D0C9244E8E4C2F87AB4BECD2ADBED70F2CD50655248C7EE88205D1FD16A110DC5C9C8379B194AD7D2CA993C0F8576D4038FDCAA755BAF28D409A47D5520042242381EB9EDDB4DFD42794BDD4BEC22AC7585B049DACA42ED837390278B5CB6DFAFC4BD0BD40CB8861CAA406959DB72D52174757A14D9E9CEB30B5E228668BDA44AD2FF62C61D3DDB54B17B610C23E4CC309BFB5DE05CC3C7D3BF40D933D9F2A0F3706213579CAC3F518881705CE3C61E32AF15DD6FA3F72BFCC96D5A068571E36A0091C8AC4F13A2CC0FDD9CDAC72068D2898DEF5A710E22F191B51184DAE35FCF46F86670FBF8079E45D775983AD3BC8651B9B32263BE69B113F2023D4EC87481F8697FA0211A56F057C13D1E02E95E365131BBD2422669AB2859F47FC9466169ECAB96E4D3BE648E9604D957FD39DE334E11D5CAE49EA278EE5670C313CAD8533CE2D038EBC73CD0C030CF54BC85887882A6DE801CC6DD46D2AE56CF0D9436382A6A1B7C4DA0501FC2717B00992BF961AD2CAD56121136D71FE2CB2888B802BF86D1B7B5F8FAAEAA0182438FB0A5EDFEDC976DB4A1E263F7A64978CBA28AA6EE6EF886BB175A005E75A2CE6F127A0FD1B952C0B8AA9360669C22F2A6C912361AC435FFF693647FA122C38AA1591D03D3C76AAD046AD2A24ABAC27079D4EA749CF8D3D6459B350333467795F3BD1C779DF44426EA25FBB8440B500883498253675A1A81FAC5FBE7708580CB7CCB51A00E1F553966D1
201B54099832B2D256C85AACD26E86E4E2AE180E2C8591AF4FB8289EEC6AF6287E011CFA7623C51D9283905836B92C85C35A8348C020D93371F9B90E5E942267528FB73F9AED74D2242C4308F9E7E46C81EFE05F9C5DB3BAFABC10D1E714E2C2307E02D9118AC3FC210F3CE60B278B08ED92A39EBC7C2D735FDA9A1591B158BCC2B0CCB4CAD49E0398DCA20A7489C10F08E3587F94F55D014353077D4854862A2A825D150CB3305F0092477FA86BD33EFB55B8058F15C0FF236551C0CB7ED0A2181AB2426D5B085550F4B00D3A852E1C0AD83613822340E5603C468CDA1FEDDE5B194F7673A96EC53E79755B8CCD69E7582C59DAF8D0A0F1BDBEF8F279CA4322A64467FF22675EC72E3FF48CE60FBA742FF55F715BFEA129EA8F250B6931A6C76CF939D69D994F29C63D4FDAB012125A66A94E474FC4C8F86070DBFC36A9444528CCC0EB4A21F018727D573FFE16FC8BA6D2BD9C11B3AE3E1E3CC6DAC995E95C75756727A7650F2DC4D684095F683C37974A9C347C723E78279F801FB7D6B58A2894061B54B85A2E413257CD160BA0A5808BDD047739F1097EC12083B5DDFD8CC8889685C8410082FA48189AD3C030563A9D29BD4871DF561E873702802A3ACC2E81B7DA9CEDA6EA50BBAF114235E4ACD4DACE7E6804AB152D7F6552EBFC568F91149A5D230D611F313DD4FF956B590A5F67EB3462CCD4D7A29A27E57862CCB874678601AC89DEF6A950CAF8556EAF1CAC862C58206FA6824AD1D9AEF813862F33ADC8C384AF4D0DC49F400125E20FABE9A2CAE8B4E38BE7BCFAA3EF8916865189A1C34DA4F0FD0EA6541FDB413E4B02EAA6B2830BF3FFF9001B9D50D568BD470FE634BC2D9BB37E8E196BBA41AAC4CF5596EF246EABEF6D585508E7E959AB33744F024B45B70F6584F8055B3BFEEF55631CF52A86D94437B07782045C74EA8E9527C4581DC62588BF1C2A945AE8866E5CECBB92EBC2E0FF43C26FEB1B28E14845AFE13C311427D625D541CBC399B40D271E6A50A724D80F5EF27B1EB39FDAD972A7D57BA7A5BA1D1ECF9361
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica cguidfix
/F2.1/Helvetica renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 115.5 343 rc
1 72.5 m
109 72.5 l
109 0.5 l
1 0.5 l
h
1 72.5 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -323 1002.5 cm
648 1860 m
864 1860 l
864 2004 l
648 2004 l
h
648 1860 m
S
0 i
1 1 1 sc
CM
1 228.5 m
109 228.5 l
109 192.5 l
1 192.5 l
h
1 228.5 m
f
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -323 1002.5 cm
648 1548 m
864 1548 l
864 1620 l
648 1620 l
h
648 1548 m
S
0 i
1 1 1 sc
CM
1 342.5 m
109 342.5 l
109 324.5 l
1 324.5 l
h
1 342.5 m
f
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -323 1002.5 cm
648 1320 m
864 1320 l
864 1356 l
648 1356 l
h
648 1320 m
S
/Cs2 SC
0 sc
0 i
/F1.1[ 23 0 0 -23 0 0]sf
685.49353 1346.178 m
(!!!!!!"#$%&''$#)[ 6.394000 6.394000 6.394000 6.394000 6.394000 6.394000 13.639000 7.245000 13.202000 12.351000 12.351000 11.500000 11.500000 13.202000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1 294.5 m
109 294.5 l
109 264.5 l
1 264.5 l
h
1 294.5 m
f
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -323 1002.5 cm
648 1416 m
864 1416 l
864 1476 l
648 1476 l
h
648 1416 m
S
/Cs2 SC
0 sc
0 i
/F2.1[ 24 0 0 -24 0 0]sf
796.04102 1404 m
(!"!#$)[ 12.000000 13.347656 12.000000 13.347656 0.000000 ] xS
784.72656 1536 m
(%$%&'\()[ 19.992188 13.347656 19.992188 13.347656 7.992188 0.000000 ] xS
3 w
0.60000002 i
/Cs1 SC
0 0 0 sc
756 1371.9 m
756 1400.1 l
S
0 i
CM
55 296.85001 m
57.099998 302.45001 l
52.900002 302.45001 l
h
55 296.85001 m
f
0 J
0 j
0.5 0 0 -0.5 -323 1002.5 cm
756 1411.3 m
760.20001 1400.1 l
751.79999 1400.1 l
h
756 1411.3 m
S
CM
55 322.14999 m
52.900002 316.54999 l
57.099998 316.54999 l
h
55 322.14999 m
f
0.5 0 0 -0.5 -323 1002.5 cm
756 1360.7 m
751.79999 1371.9 l
760.20001 1371.9 l
h
756 1360.7 m
S
1 J
1 j
0.60000002 i
756 1491.9 m
756 1532.1 l
S
0 i
CM
55 230.85001 m
57.099998 236.45 l
52.900002 236.45 l
h
55 230.85001 m
f
0 J
0 j
0.5 0 0 -0.5 -323 1002.5 cm
756 1543.3 m
760.20001 1532.1 l
751.79999 1532.1 l
h
756 1543.3 m
S
CM
55 262.14999 m
52.900002 256.54999 l
57.099998 256.54999 l
h
55 262.14999 m
f
0.5 0 0 -0.5 -323 1002.5 cm
756 1480.7 m
751.79999 1491.9 l
760.20001 1491.9 l
h
756 1480.7 m
S
1 J
1 j
0.60000002 i
756 1635.9 m
756 1674.6 l
S
0 i
CM
55 159.60001 m
57.099998 165.2 l
52.900002 165.2 l
h
55 159.60001 m
f
0 J
0 j
0.5 0 0 -0.5 -323 1002.5 cm
756 1685.8 m
760.20001 1674.6 l
751.79999 1674.6 l
h
756 1685.8 m
S
CM
55 190.14999 m
52.900002 184.55 l
57.099998 184.55 l
h
55 190.14999 m
f
0.5 0 0 -0.5 -323 1002.5 cm
756 1624.7 m
751.79999 1635.9 l
760.20001 1635.9 l
h
756 1624.7 m
S
1 w
1 J
1 j
0.60000002 i
672 1428 m
684 1428 l
684 1440 l
672 1440 l
h
672 1428 m
S
0 i
1 0.57810533 0 sc
CM
19 282.5 m
25 282.5 l
25 276.5 l
19 276.5 l
h
19 282.5 m
f
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -323 1002.5 cm
684 1440 m
696 1440 l
696 1452 l
684 1452 l
h
684 1440 m
S
696 1452 m
708 1452 l
708 1464 l
696 1464 l
h
696 1452 m
S
696 1440 m
708 1440 l
708 1452 l
696 1452 l
h
696 1440 m
S
696 1428 m
708 1428 l
708 1440 l
696 1440 l
h
696 1428 m
S
684 1428 m
696 1428 l
696 1440 l
684 1440 l
h
684 1428 m
S
672 1440 m
684 1440 l
684 1452 l
672 1452 l
h
672 1440 m
S
672 1452 m
684 1452 l
684 1464 l
672 1464 l
h
672 1452 m
S
684 1452 m
696 1452 l
696 1464 l
684 1464 l
h
684 1452 m
S
0 i
1 0.57810533 0 sc
CM
19 336.5 m
25 336.5 l
25 330.5 l
19 330.5 l
h
19 336.5 m
f
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -323 1002.5 cm
684 1332 m
696 1332 l
696 1344 l
684 1344 l
h
684 1332 m
S
672 1572 m
684 1572 l
684 1584 l
672 1584 l
h
672 1572 m
S
696 1572 m
708 1572 l
708 1584 l
696 1584 l
h
696 1572 m
S
684 1572 m
696 1572 l
696 1584 l
684 1584 l
h
684 1572 m
S
0 i
1 0.57810533 0 sc
CM
19 210.5 m
25 210.5 l
25 204.5 l
19 204.5 l
h
19 210.5 m
f
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -323 1002.5 cm
684 1584 m
696 1584 l
696 1596 l
684 1596 l
h
684 1584 m
S
696 1596 m
708 1596 l
708 1608 l
696 1608 l
h
696 1596 m
S
696 1584 m
708 1584 l
708 1596 l
696 1596 l
h
696 1584 m
S
672 1584 m
684 1584 l
684 1596 l
672 1596 l
h
672 1584 m
S
672 1596 m
684 1596 l
684 1608 l
672 1608 l
h
672 1596 m
S
684 1596 m
696 1596 l
696 1608 l
684 1608 l
h
684 1596 m
S
/Cs2 SC
0 sc
0 i
785.47461 1852 m
(\)*&'"+$)[ 12.000000 6.667969 13.347656 7.992188 13.347656 13.347656 0.000000 ] xS
3 w
[
6
6
] 0 d
0.60000002 i
/Cs1 SC
0.016804177 0.198351 1 sc
665 1692 m
847 1692 l
856.38885 1692 864 1699.6112 864 1709 c
864 1771 l
864 1780.3888 856.38885 1788 847 1788 c
665 1788 l
655.61115 1788 648 1780.3888 648 1771 c
648 1709 l
648 1699.6112 655.61115 1692 665 1692 c
h
665 1692 m
S
/Cs2 SC
0 sc
0 i
/F1.1[ 31 0 0 -31 0 0]sf
714.336 1732.132 m
(\(\)*&#)[ 21.235000 17.236000 17.887000 16.647000 0.000000 ] xS
694.85248 1770 m
(+,-,.&#)[ 27.001000 16.647000 17.236000 16.647000 17.794000 16.647000 0.000000 ] xS
[] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
756 1805.4 m
756 1844.1 l
S
0 i
CM
55 74.849998 m
57.099998 80.449997 l
52.900002 80.449997 l
h
55 74.849998 m
f
0 J
0 j
0.5 0 0 -0.5 -323 1002.5 cm
756 1855.3 m
760.20001 1844.1 l
751.79999 1844.1 l
h
756 1855.3 m
S
CM
55 105.4 m
52.900002 99.800003 l
57.099998 99.800003 l
h
55 105.4 m
f
0.5 0 0 -0.5 -323 1002.5 cm
756 1794.2 m
751.79999 1805.4 l
760.20001 1805.4 l
h
756 1794.2 m
S
1 w
1 J
1 j
0.60000002 i
660 1872 m
672 1872 l
672 1884 l
660 1884 l
h
660 1872 m
S
0 i
1 0.57810533 0 sc
CM
13 60.5 m
19 60.5 l
19 54.5 l
13 54.5 l
h
13 60.5 m
f
0.60000002 i
0 0 0 sc
0.5 0 0 -0.5 -323 1002.5 cm
672 1884 m
684 1884 l
684 1896 l
672 1896 l
h
672 1884 m
S
684 1896 m
696 1896 l
696 1908 l
684 1908 l
h
684 1896 m
S
684 1884 m
696 1884 l
696 1896 l
684 1896 l
h
684 1884 m
S
684 1872 m
696 1872 l
696 1884 l
684 1884 l
h
684 1872 m
S
672 1872 m
684 1872 l
684 1884 l
672 1884 l
h
672 1872 m
S
660 1884 m
672 1884 l
672 1896 l
660 1896 l
h
660 1884 m
S
660 1896 m
672 1896 l
672 1908 l
660 1908 l
h
660 1896 m
S
672 1896 m
684 1896 l
684 1908 l
672 1908 l
h
672 1896 m
S
684 1908 m
696 1908 l
696 1920 l
684 1920 l
h
684 1908 m
S
660 1908 m
672 1908 l
672 1920 l
660 1920 l
h
660 1908 m
S
672 1908 m
684 1908 l
684 1920 l
672 1920 l
h
672 1908 m
S
696 1896 m
708 1896 l
708 1908 l
696 1908 l
h
696 1896 m
S
696 1884 m
708 1884 l
708 1896 l
696 1896 l
h
696 1884 m
S
696 1872 m
708 1872 l
708 1884 l
696 1884 l
h
696 1872 m
S
696 1908 m
708 1908 l
708 1920 l
696 1920 l
h
696 1908 m
S
684 1920 m
696 1920 l
696 1932 l
684 1932 l
h
684 1920 m
S
660 1920 m
672 1920 l
672 1932 l
660 1932 l
h
660 1920 m
S
672 1920 m
684 1920 l
684 1932 l
672 1932 l
h
672 1920 m
S
696 1920 m
708 1920 l
708 1932 l
696 1932 l
h
696 1920 m
S
684 1932 m
696 1932 l
696 1944 l
684 1944 l
h
684 1932 m
S
660 1932 m
672 1932 l
672 1944 l
660 1944 l
h
660 1932 m
S
672 1932 m
684 1932 l
684 1944 l
672 1944 l
h
672 1932 m
S
696 1932 m
708 1932 l
708 1944 l
696 1944 l
h
696 1932 m
S
684 1944 m
696 1944 l
696 1956 l
684 1956 l
h
684 1944 m
S
660 1944 m
672 1944 l
672 1956 l
660 1956 l
h
660 1944 m
S
672 1944 m
684 1944 l
684 1956 l
672 1956 l
h
672 1944 m
S
696 1944 m
708 1944 l
708 1956 l
696 1956 l
h
696 1944 m
S
684 1956 m
696 1956 l
696 1968 l
684 1968 l
h
684 1956 m
S
660 1956 m
672 1956 l
672 1968 l
660 1968 l
h
660 1956 m
S
672 1956 m
684 1956 l
684 1968 l
672 1968 l
h
672 1956 m
S
696 1956 m
708 1956 l
708 1968 l
696 1968 l
h
696 1956 m
S
684 1968 m
696 1968 l
696 1980 l
684 1980 l
h
684 1968 m
S
660 1968 m
672 1968 l
672 1980 l
660 1980 l
h
660 1968 m
S
672 1968 m
684 1968 l
684 1980 l
672 1980 l
h
672 1968 m
S
696 1968 m
708 1968 l
708 1980 l
696 1980 l
h
696 1968 m
S
708 1896 m
720 1896 l
720 1908 l
708 1908 l
h
708 1896 m
S
708 1884 m
720 1884 l
720 1896 l
708 1896 l
h
708 1884 m
S
708 1872 m
720 1872 l
720 1884 l
708 1884 l
h
708 1872 m
S
708 1908 m
720 1908 l
720 1920 l
708 1920 l
h
708 1908 m
S
708 1920 m
720 1920 l
720 1932 l
708 1932 l
h
708 1920 m
S
708 1932 m
720 1932 l
720 1944 l
708 1944 l
h
708 1932 m
S
708 1944 m
720 1944 l
720 1956 l
708 1956 l
h
708 1944 m
S
708 1956 m
720 1956 l
720 1968 l
708 1968 l
h
708 1956 m
S
708 1968 m
720 1968 l
720 1980 l
708 1980 l
h
708 1968 m
S
720 1896 m
732 1896 l
732 1908 l
720 1908 l
h
720 1896 m
S
720 1884 m
732 1884 l
732 1896 l
720 1896 l
h
720 1884 m
S
720 1872 m
732 1872 l
732 1884 l
720 1884 l
h
720 1872 m
S
720 1908 m
732 1908 l
732 1920 l
720 1920 l
h
720 1908 m
S
720 1920 m
732 1920 l
732 1932 l
720 1932 l
h
720 1920 m
S
720 1932 m
732 1932 l
732 1944 l
720 1944 l
h
720 1932 m
S
720 1944 m
732 1944 l
732 1956 l
720 1956 l
h
720 1944 m
S
720 1956 m
732 1956 l
732 1968 l
720 1968 l
h
720 1956 m
S
720 1968 m
732 1968 l
732 1980 l
720 1980 l
h
720 1968 m
S
ep
end
%%Trailer
%%EOF
